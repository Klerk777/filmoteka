{"mappings":"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","sources":["node_modules/handlebars/lib/index.js","node_modules/handlebars/lib/handlebars.js","node_modules/handlebars/lib/handlebars.runtime.js","node_modules/handlebars/lib/handlebars/base.js","node_modules/handlebars/lib/handlebars/utils.js","node_modules/handlebars/lib/handlebars/exception.js","node_modules/handlebars/lib/handlebars/helpers.js","node_modules/handlebars/lib/handlebars/helpers/block-helper-missing.js","node_modules/handlebars/lib/handlebars/helpers/each.js","node_modules/handlebars/lib/handlebars/helpers/helper-missing.js","node_modules/handlebars/lib/handlebars/helpers/if.js","node_modules/handlebars/lib/handlebars/helpers/log.js","node_modules/handlebars/lib/handlebars/helpers/lookup.js","node_modules/handlebars/lib/handlebars/helpers/with.js","node_modules/handlebars/lib/handlebars/decorators.js","node_modules/handlebars/lib/handlebars/decorators/inline.js","node_modules/handlebars/lib/handlebars/logger.js","node_modules/handlebars/lib/handlebars/internal/proto-access.js","node_modules/handlebars/lib/handlebars/internal/create-new-lookup-object.js","node_modules/handlebars/lib/handlebars/safe-string.js","node_modules/handlebars/lib/handlebars/runtime.js","node_modules/handlebars/lib/handlebars/internal/wrapHelper.js","node_modules/handlebars/lib/handlebars/no-conflict.js","node_modules/handlebars/lib/handlebars/compiler/ast.js","node_modules/handlebars/lib/handlebars/compiler/base.js","node_modules/handlebars/lib/handlebars/compiler/parser.js","node_modules/handlebars/lib/handlebars/compiler/whitespace-control.js","node_modules/handlebars/lib/handlebars/compiler/visitor.js","node_modules/handlebars/lib/handlebars/compiler/helpers.js","node_modules/handlebars/lib/handlebars/compiler/compiler.js","node_modules/handlebars/lib/handlebars/compiler/javascript-compiler.js","node_modules/handlebars/lib/handlebars/compiler/code-gen.js","node_modules/source-map/source-map.js","node_modules/source-map/lib/source-map-generator.js","node_modules/source-map/lib/base64-vlq.js","node_modules/source-map/lib/base64.js","node_modules/source-map/lib/util.js","node_modules/source-map/lib/array-set.js","node_modules/source-map/lib/mapping-list.js","node_modules/source-map/lib/source-map-consumer.js","node_modules/source-map/lib/binary-search.js","node_modules/source-map/lib/quick-sort.js","node_modules/source-map/lib/source-node.js","node_modules/handlebars/lib/handlebars/compiler/printer.js","node_modules/notiflix/dist/notiflix-aio-3.2.5.min.js","src/templates/card-films.hbs","src/js/api-service/firebase-api-database.js","node_modules/@firebase/database/src/core/storage/DOMStorageWrapper.ts","node_modules/@firebase/database/src/core/storage/MemoryStorage.ts","node_modules/@firebase/database/src/core/storage/storage.ts","node_modules/@firebase/database/src/core/util/util.ts","node_modules/@firebase/database/src/core/AppCheckTokenProvider.ts","node_modules/@firebase/database/src/core/AuthTokenProvider.ts","node_modules/@firebase/database/src/core/RepoInfo.ts","node_modules/@firebase/database/src/core/stats/StatsManager.ts","node_modules/@firebase/database/src/realtime/polling/PacketReceiver.ts","node_modules/@firebase/database/src/realtime/BrowserPollConnection.ts","node_modules/@firebase/database/src/realtime/WebSocketConnection.ts","node_modules/@firebase/database/src/realtime/TransportManager.ts","node_modules/@firebase/database/src/realtime/Connection.ts","node_modules/@firebase/database/src/core/ServerActions.ts","node_modules/@firebase/database/src/core/util/EventEmitter.ts","node_modules/@firebase/database/src/core/util/OnlineMonitor.ts","node_modules/@firebase/database/src/core/util/Path.ts","node_modules/@firebase/database/src/core/util/VisibilityMonitor.ts","node_modules/@firebase/database/src/core/PersistentConnection.ts","node_modules/@firebase/database/src/core/snap/indexes/Index.ts","node_modules/@firebase/database/src/core/snap/indexes/KeyIndex.ts","node_modules/@firebase/database/src/core/util/SortedMap.ts","node_modules/@firebase/database/src/core/snap/comparators.ts","node_modules/@firebase/database/src/core/snap/snap.ts","node_modules/@firebase/database/src/core/snap/LeafNode.ts","node_modules/@firebase/database/src/core/snap/indexes/PriorityIndex.ts","node_modules/@firebase/database/src/core/snap/childSet.ts","node_modules/@firebase/database/src/core/snap/IndexMap.ts","node_modules/@firebase/database/src/core/snap/ChildrenNode.ts","node_modules/@firebase/database/src/core/snap/nodeFromJSON.ts","node_modules/@firebase/database/src/core/snap/indexes/PathIndex.ts","node_modules/@firebase/database/src/core/snap/indexes/ValueIndex.ts","node_modules/@firebase/database/src/core/view/Change.ts","node_modules/@firebase/database/src/core/view/filter/IndexedFilter.ts","node_modules/@firebase/database/src/core/view/filter/RangedFilter.ts","node_modules/@firebase/database/src/core/view/filter/LimitedFilter.ts","node_modules/@firebase/database/src/core/view/QueryParams.ts","node_modules/@firebase/database/src/core/ReadonlyRestClient.ts","node_modules/@firebase/database/src/core/SparseSnapshotTree.ts","node_modules/@firebase/database/src/core/SnapshotHolder.ts","node_modules/@firebase/database/src/core/stats/StatsListener.ts","node_modules/@firebase/database/src/core/stats/StatsReporter.ts","node_modules/@firebase/database/src/core/operation/Operation.ts","node_modules/@firebase/database/src/core/operation/ListenComplete.ts","node_modules/@firebase/database/src/core/operation/Overwrite.ts","node_modules/@firebase/database/src/core/operation/Merge.ts","node_modules/@firebase/database/src/core/view/CacheNode.ts","node_modules/@firebase/database/src/core/view/EventGenerator.ts","node_modules/@firebase/database/src/core/view/ViewCache.ts","node_modules/@firebase/database/src/core/util/ImmutableTree.ts","node_modules/@firebase/database/src/core/CompoundWrite.ts","node_modules/@firebase/database/src/core/WriteTree.ts","node_modules/@firebase/database/src/core/view/ChildChangeAccumulator.ts","node_modules/@firebase/database/src/core/view/CompleteChildSource.ts","node_modules/@firebase/database/src/core/view/ViewProcessor.ts","node_modules/@firebase/database/src/core/view/View.ts","node_modules/@firebase/database/src/core/SyncPoint.ts","node_modules/@firebase/database/src/core/SyncTree.ts","node_modules/@firebase/database/src/core/util/ServerValues.ts","node_modules/@firebase/database/src/core/util/Tree.ts","node_modules/@firebase/database/src/core/util/validation.ts","node_modules/@firebase/database/src/core/view/EventQueue.ts","node_modules/@firebase/database/src/core/Repo.ts","node_modules/@firebase/database/src/core/util/libs/parser.ts","node_modules/@firebase/database/src/core/view/Event.ts","node_modules/@firebase/database/src/core/view/EventRegistration.ts","node_modules/@firebase/database/src/api/Reference_impl.ts","node_modules/@firebase/database/src/api/OnDisconnect.ts","node_modules/@firebase/database/src/core/util/NextPushId.ts","node_modules/@firebase/database/src/api/Database.ts","node_modules/@firebase/database/src/register.ts","node_modules/@firebase/database/src/api/ServerValue.ts","node_modules/@firebase/database/src/api/Transaction.ts","node_modules/@firebase/database/src/api/test_access.ts","node_modules/@firebase/database/src/realtime/Constants.ts","node_modules/@firebase/database/src/core/snap/Node.ts","node_modules/@firebase/database/src/core/stats/StatsCollection.ts","src/js/pagination.js","node_modules/tui-pagination/dist/tui-pagination.js"],"sourcesContent":["// USAGE:\n// var handlebars = require('handlebars');\n/* eslint-disable no-var */\n\n// var local = handlebars.create();\n\nvar handlebars = require('../dist/cjs/handlebars')['default'];\n\nvar printer = require('../dist/cjs/handlebars/compiler/printer');\nhandlebars.PrintVisitor = printer.PrintVisitor;\nhandlebars.print = printer.print;\n\nmodule.exports = handlebars;\n\n// Publish a Node.js require() handler for .handlebars and .hbs files\nfunction extension(module, filename) {\n  var fs = require('fs');\n  var templateString = fs.readFileSync(filename, 'utf8');\n  module.exports = handlebars.compile(templateString);\n}\n/* istanbul ignore else */\nif (typeof require !== 'undefined' && require.extensions) {\n  require.extensions['.handlebars'] = extension;\n  require.extensions['.hbs'] = extension;\n}\n","import runtime from './handlebars.runtime';\n\n// Compiler imports\nimport AST from './handlebars/compiler/ast';\nimport {\n  parser as Parser,\n  parse,\n  parseWithoutProcessing\n} from './handlebars/compiler/base';\nimport { Compiler, compile, precompile } from './handlebars/compiler/compiler';\nimport JavaScriptCompiler from './handlebars/compiler/javascript-compiler';\nimport Visitor from './handlebars/compiler/visitor';\n\nimport noConflict from './handlebars/no-conflict';\n\nlet _create = runtime.create;\nfunction create() {\n  let hb = _create();\n\n  hb.compile = function(input, options) {\n    return compile(input, options, hb);\n  };\n  hb.precompile = function(input, options) {\n    return precompile(input, options, hb);\n  };\n\n  hb.AST = AST;\n  hb.Compiler = Compiler;\n  hb.JavaScriptCompiler = JavaScriptCompiler;\n  hb.Parser = Parser;\n  hb.parse = parse;\n  hb.parseWithoutProcessing = parseWithoutProcessing;\n\n  return hb;\n}\n\nlet inst = create();\ninst.create = create;\n\nnoConflict(inst);\n\ninst.Visitor = Visitor;\n\ninst['default'] = inst;\n\nexport default inst;\n","import * as base from './handlebars/base';\n\n// Each of these augment the Handlebars object. No need to setup here.\n// (This is done to easily share code between commonjs and browse envs)\nimport SafeString from './handlebars/safe-string';\nimport Exception from './handlebars/exception';\nimport * as Utils from './handlebars/utils';\nimport * as runtime from './handlebars/runtime';\n\nimport noConflict from './handlebars/no-conflict';\n\n// For compatibility and usage outside of module systems, make the Handlebars object a namespace\nfunction create() {\n  let hb = new base.HandlebarsEnvironment();\n\n  Utils.extend(hb, base);\n  hb.SafeString = SafeString;\n  hb.Exception = Exception;\n  hb.Utils = Utils;\n  hb.escapeExpression = Utils.escapeExpression;\n\n  hb.VM = runtime;\n  hb.template = function(spec) {\n    return runtime.template(spec, hb);\n  };\n\n  return hb;\n}\n\nlet inst = create();\ninst.create = create;\n\nnoConflict(inst);\n\ninst['default'] = inst;\n\nexport default inst;\n","import { createFrame, extend, toString } from './utils';\nimport Exception from './exception';\nimport { registerDefaultHelpers } from './helpers';\nimport { registerDefaultDecorators } from './decorators';\nimport logger from './logger';\nimport { resetLoggedProperties } from './internal/proto-access';\n\nexport const VERSION = '4.7.7';\nexport const COMPILER_REVISION = 8;\nexport const LAST_COMPATIBLE_COMPILER_REVISION = 7;\n\nexport const REVISION_CHANGES = {\n  1: '<= 1.0.rc.2', // 1.0.rc.2 is actually rev2 but doesn't report it\n  2: '== 1.0.0-rc.3',\n  3: '== 1.0.0-rc.4',\n  4: '== 1.x.x',\n  5: '== 2.0.0-alpha.x',\n  6: '>= 2.0.0-beta.1',\n  7: '>= 4.0.0 <4.3.0',\n  8: '>= 4.3.0'\n};\n\nconst objectType = '[object Object]';\n\nexport function HandlebarsEnvironment(helpers, partials, decorators) {\n  this.helpers = helpers || {};\n  this.partials = partials || {};\n  this.decorators = decorators || {};\n\n  registerDefaultHelpers(this);\n  registerDefaultDecorators(this);\n}\n\nHandlebarsEnvironment.prototype = {\n  constructor: HandlebarsEnvironment,\n\n  logger: logger,\n  log: logger.log,\n\n  registerHelper: function(name, fn) {\n    if (toString.call(name) === objectType) {\n      if (fn) {\n        throw new Exception('Arg not supported with multiple helpers');\n      }\n      extend(this.helpers, name);\n    } else {\n      this.helpers[name] = fn;\n    }\n  },\n  unregisterHelper: function(name) {\n    delete this.helpers[name];\n  },\n\n  registerPartial: function(name, partial) {\n    if (toString.call(name) === objectType) {\n      extend(this.partials, name);\n    } else {\n      if (typeof partial === 'undefined') {\n        throw new Exception(\n          `Attempting to register a partial called \"${name}\" as undefined`\n        );\n      }\n      this.partials[name] = partial;\n    }\n  },\n  unregisterPartial: function(name) {\n    delete this.partials[name];\n  },\n\n  registerDecorator: function(name, fn) {\n    if (toString.call(name) === objectType) {\n      if (fn) {\n        throw new Exception('Arg not supported with multiple decorators');\n      }\n      extend(this.decorators, name);\n    } else {\n      this.decorators[name] = fn;\n    }\n  },\n  unregisterDecorator: function(name) {\n    delete this.decorators[name];\n  },\n  /**\n   * Reset the memory of illegal property accesses that have already been logged.\n   * @deprecated should only be used in handlebars test-cases\n   */\n  resetLoggedPropertyAccesses() {\n    resetLoggedProperties();\n  }\n};\n\nexport let log = logger.log;\n\nexport { createFrame, logger };\n","const escape = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#x27;',\n  '`': '&#x60;',\n  '=': '&#x3D;'\n};\n\nconst badChars = /[&<>\"'`=]/g,\n  possible = /[&<>\"'`=]/;\n\nfunction escapeChar(chr) {\n  return escape[chr];\n}\n\nexport function extend(obj /* , ...source */) {\n  for (let i = 1; i < arguments.length; i++) {\n    for (let key in arguments[i]) {\n      if (Object.prototype.hasOwnProperty.call(arguments[i], key)) {\n        obj[key] = arguments[i][key];\n      }\n    }\n  }\n\n  return obj;\n}\n\nexport let toString = Object.prototype.toString;\n\n// Sourced from lodash\n// https://github.com/bestiejs/lodash/blob/master/LICENSE.txt\n/* eslint-disable func-style */\nlet isFunction = function(value) {\n  return typeof value === 'function';\n};\n// fallback for older versions of Chrome and Safari\n/* istanbul ignore next */\nif (isFunction(/x/)) {\n  isFunction = function(value) {\n    return (\n      typeof value === 'function' &&\n      toString.call(value) === '[object Function]'\n    );\n  };\n}\nexport { isFunction };\n/* eslint-enable func-style */\n\n/* istanbul ignore next */\nexport const isArray =\n  Array.isArray ||\n  function(value) {\n    return value && typeof value === 'object'\n      ? toString.call(value) === '[object Array]'\n      : false;\n  };\n\n// Older IE versions do not directly support indexOf so we must implement our own, sadly.\nexport function indexOf(array, value) {\n  for (let i = 0, len = array.length; i < len; i++) {\n    if (array[i] === value) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nexport function escapeExpression(string) {\n  if (typeof string !== 'string') {\n    // don't escape SafeStrings, since they're already safe\n    if (string && string.toHTML) {\n      return string.toHTML();\n    } else if (string == null) {\n      return '';\n    } else if (!string) {\n      return string + '';\n    }\n\n    // Force a string conversion as this will be done by the append regardless and\n    // the regex test will do this transparently behind the scenes, causing issues if\n    // an object's to string has escaped characters in it.\n    string = '' + string;\n  }\n\n  if (!possible.test(string)) {\n    return string;\n  }\n  return string.replace(badChars, escapeChar);\n}\n\nexport function isEmpty(value) {\n  if (!value && value !== 0) {\n    return true;\n  } else if (isArray(value) && value.length === 0) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport function createFrame(object) {\n  let frame = extend({}, object);\n  frame._parent = object;\n  return frame;\n}\n\nexport function blockParams(params, ids) {\n  params.path = ids;\n  return params;\n}\n\nexport function appendContextPath(contextPath, id) {\n  return (contextPath ? contextPath + '.' : '') + id;\n}\n","const errorProps = [\n  'description',\n  'fileName',\n  'lineNumber',\n  'endLineNumber',\n  'message',\n  'name',\n  'number',\n  'stack'\n];\n\nfunction Exception(message, node) {\n  let loc = node && node.loc,\n    line,\n    endLineNumber,\n    column,\n    endColumn;\n\n  if (loc) {\n    line = loc.start.line;\n    endLineNumber = loc.end.line;\n    column = loc.start.column;\n    endColumn = loc.end.column;\n\n    message += ' - ' + line + ':' + column;\n  }\n\n  let tmp = Error.prototype.constructor.call(this, message);\n\n  // Unfortunately errors are not enumerable in Chrome (at least), so `for prop in tmp` doesn't work.\n  for (let idx = 0; idx < errorProps.length; idx++) {\n    this[errorProps[idx]] = tmp[errorProps[idx]];\n  }\n\n  /* istanbul ignore else */\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, Exception);\n  }\n\n  try {\n    if (loc) {\n      this.lineNumber = line;\n      this.endLineNumber = endLineNumber;\n\n      // Work around issue under safari where we can't directly set the column value\n      /* istanbul ignore next */\n      if (Object.defineProperty) {\n        Object.defineProperty(this, 'column', {\n          value: column,\n          enumerable: true\n        });\n        Object.defineProperty(this, 'endColumn', {\n          value: endColumn,\n          enumerable: true\n        });\n      } else {\n        this.column = column;\n        this.endColumn = endColumn;\n      }\n    }\n  } catch (nop) {\n    /* Ignore if the browser is very particular */\n  }\n}\n\nException.prototype = new Error();\n\nexport default Exception;\n","import registerBlockHelperMissing from './helpers/block-helper-missing';\nimport registerEach from './helpers/each';\nimport registerHelperMissing from './helpers/helper-missing';\nimport registerIf from './helpers/if';\nimport registerLog from './helpers/log';\nimport registerLookup from './helpers/lookup';\nimport registerWith from './helpers/with';\n\nexport function registerDefaultHelpers(instance) {\n  registerBlockHelperMissing(instance);\n  registerEach(instance);\n  registerHelperMissing(instance);\n  registerIf(instance);\n  registerLog(instance);\n  registerLookup(instance);\n  registerWith(instance);\n}\n\nexport function moveHelperToHooks(instance, helperName, keepHelper) {\n  if (instance.helpers[helperName]) {\n    instance.hooks[helperName] = instance.helpers[helperName];\n    if (!keepHelper) {\n      delete instance.helpers[helperName];\n    }\n  }\n}\n","import { appendContextPath, createFrame, isArray } from '../utils';\n\nexport default function(instance) {\n  instance.registerHelper('blockHelperMissing', function(context, options) {\n    let inverse = options.inverse,\n      fn = options.fn;\n\n    if (context === true) {\n      return fn(this);\n    } else if (context === false || context == null) {\n      return inverse(this);\n    } else if (isArray(context)) {\n      if (context.length > 0) {\n        if (options.ids) {\n          options.ids = [options.name];\n        }\n\n        return instance.helpers.each(context, options);\n      } else {\n        return inverse(this);\n      }\n    } else {\n      if (options.data && options.ids) {\n        let data = createFrame(options.data);\n        data.contextPath = appendContextPath(\n          options.data.contextPath,\n          options.name\n        );\n        options = { data: data };\n      }\n\n      return fn(context, options);\n    }\n  });\n}\n","import {\n  appendContextPath,\n  blockParams,\n  createFrame,\n  isArray,\n  isFunction\n} from '../utils';\nimport Exception from '../exception';\n\nexport default function(instance) {\n  instance.registerHelper('each', function(context, options) {\n    if (!options) {\n      throw new Exception('Must pass iterator to #each');\n    }\n\n    let fn = options.fn,\n      inverse = options.inverse,\n      i = 0,\n      ret = '',\n      data,\n      contextPath;\n\n    if (options.data && options.ids) {\n      contextPath =\n        appendContextPath(options.data.contextPath, options.ids[0]) + '.';\n    }\n\n    if (isFunction(context)) {\n      context = context.call(this);\n    }\n\n    if (options.data) {\n      data = createFrame(options.data);\n    }\n\n    function execIteration(field, index, last) {\n      if (data) {\n        data.key = field;\n        data.index = index;\n        data.first = index === 0;\n        data.last = !!last;\n\n        if (contextPath) {\n          data.contextPath = contextPath + field;\n        }\n      }\n\n      ret =\n        ret +\n        fn(context[field], {\n          data: data,\n          blockParams: blockParams(\n            [context[field], field],\n            [contextPath + field, null]\n          )\n        });\n    }\n\n    if (context && typeof context === 'object') {\n      if (isArray(context)) {\n        for (let j = context.length; i < j; i++) {\n          if (i in context) {\n            execIteration(i, i, i === context.length - 1);\n          }\n        }\n      } else if (global.Symbol && context[global.Symbol.iterator]) {\n        const newContext = [];\n        const iterator = context[global.Symbol.iterator]();\n        for (let it = iterator.next(); !it.done; it = iterator.next()) {\n          newContext.push(it.value);\n        }\n        context = newContext;\n        for (let j = context.length; i < j; i++) {\n          execIteration(i, i, i === context.length - 1);\n        }\n      } else {\n        let priorKey;\n\n        Object.keys(context).forEach(key => {\n          // We're running the iterations one step out of sync so we can detect\n          // the last iteration without have to scan the object twice and create\n          // an itermediate keys array.\n          if (priorKey !== undefined) {\n            execIteration(priorKey, i - 1);\n          }\n          priorKey = key;\n          i++;\n        });\n        if (priorKey !== undefined) {\n          execIteration(priorKey, i - 1, true);\n        }\n      }\n    }\n\n    if (i === 0) {\n      ret = inverse(this);\n    }\n\n    return ret;\n  });\n}\n","import Exception from '../exception';\n\nexport default function(instance) {\n  instance.registerHelper('helperMissing', function(/* [args, ]options */) {\n    if (arguments.length === 1) {\n      // A missing field in a {{foo}} construct.\n      return undefined;\n    } else {\n      // Someone is actually trying to call something, blow up.\n      throw new Exception(\n        'Missing helper: \"' + arguments[arguments.length - 1].name + '\"'\n      );\n    }\n  });\n}\n","import { isEmpty, isFunction } from '../utils';\nimport Exception from '../exception';\n\nexport default function(instance) {\n  instance.registerHelper('if', function(conditional, options) {\n    if (arguments.length != 2) {\n      throw new Exception('#if requires exactly one argument');\n    }\n    if (isFunction(conditional)) {\n      conditional = conditional.call(this);\n    }\n\n    // Default behavior is to render the positive path if the value is truthy and not empty.\n    // The `includeZero` option may be set to treat the condtional as purely not empty based on the\n    // behavior of isEmpty. Effectively this determines if 0 is handled by the positive path or negative.\n    if ((!options.hash.includeZero && !conditional) || isEmpty(conditional)) {\n      return options.inverse(this);\n    } else {\n      return options.fn(this);\n    }\n  });\n\n  instance.registerHelper('unless', function(conditional, options) {\n    if (arguments.length != 2) {\n      throw new Exception('#unless requires exactly one argument');\n    }\n    return instance.helpers['if'].call(this, conditional, {\n      fn: options.inverse,\n      inverse: options.fn,\n      hash: options.hash\n    });\n  });\n}\n","export default function(instance) {\n  instance.registerHelper('log', function(/* message, options */) {\n    let args = [undefined],\n      options = arguments[arguments.length - 1];\n    for (let i = 0; i < arguments.length - 1; i++) {\n      args.push(arguments[i]);\n    }\n\n    let level = 1;\n    if (options.hash.level != null) {\n      level = options.hash.level;\n    } else if (options.data && options.data.level != null) {\n      level = options.data.level;\n    }\n    args[0] = level;\n\n    instance.log(...args);\n  });\n}\n","export default function(instance) {\n  instance.registerHelper('lookup', function(obj, field, options) {\n    if (!obj) {\n      // Note for 5.0: Change to \"obj == null\" in 5.0\n      return obj;\n    }\n    return options.lookupProperty(obj, field);\n  });\n}\n","import {\n  appendContextPath,\n  blockParams,\n  createFrame,\n  isEmpty,\n  isFunction\n} from '../utils';\nimport Exception from '../exception';\n\nexport default function(instance) {\n  instance.registerHelper('with', function(context, options) {\n    if (arguments.length != 2) {\n      throw new Exception('#with requires exactly one argument');\n    }\n    if (isFunction(context)) {\n      context = context.call(this);\n    }\n\n    let fn = options.fn;\n\n    if (!isEmpty(context)) {\n      let data = options.data;\n      if (options.data && options.ids) {\n        data = createFrame(options.data);\n        data.contextPath = appendContextPath(\n          options.data.contextPath,\n          options.ids[0]\n        );\n      }\n\n      return fn(context, {\n        data: data,\n        blockParams: blockParams([context], [data && data.contextPath])\n      });\n    } else {\n      return options.inverse(this);\n    }\n  });\n}\n","import registerInline from './decorators/inline';\n\nexport function registerDefaultDecorators(instance) {\n  registerInline(instance);\n}\n","import { extend } from '../utils';\n\nexport default function(instance) {\n  instance.registerDecorator('inline', function(fn, props, container, options) {\n    let ret = fn;\n    if (!props.partials) {\n      props.partials = {};\n      ret = function(context, options) {\n        // Create a new partials stack frame prior to exec.\n        let original = container.partials;\n        container.partials = extend({}, original, props.partials);\n        let ret = fn(context, options);\n        container.partials = original;\n        return ret;\n      };\n    }\n\n    props.partials[options.args[0]] = options.fn;\n\n    return ret;\n  });\n}\n","import { indexOf } from './utils';\n\nlet logger = {\n  methodMap: ['debug', 'info', 'warn', 'error'],\n  level: 'info',\n\n  // Maps a given level value to the `methodMap` indexes above.\n  lookupLevel: function(level) {\n    if (typeof level === 'string') {\n      let levelMap = indexOf(logger.methodMap, level.toLowerCase());\n      if (levelMap >= 0) {\n        level = levelMap;\n      } else {\n        level = parseInt(level, 10);\n      }\n    }\n\n    return level;\n  },\n\n  // Can be overridden in the host environment\n  log: function(level, ...message) {\n    level = logger.lookupLevel(level);\n\n    if (\n      typeof console !== 'undefined' &&\n      logger.lookupLevel(logger.level) <= level\n    ) {\n      let method = logger.methodMap[level];\n      // eslint-disable-next-line no-console\n      if (!console[method]) {\n        method = 'log';\n      }\n      console[method](...message); // eslint-disable-line no-console\n    }\n  }\n};\n\nexport default logger;\n","import { createNewLookupObject } from './create-new-lookup-object';\nimport * as logger from '../logger';\n\nconst loggedProperties = Object.create(null);\n\nexport function createProtoAccessControl(runtimeOptions) {\n  let defaultMethodWhiteList = Object.create(null);\n  defaultMethodWhiteList['constructor'] = false;\n  defaultMethodWhiteList['__defineGetter__'] = false;\n  defaultMethodWhiteList['__defineSetter__'] = false;\n  defaultMethodWhiteList['__lookupGetter__'] = false;\n\n  let defaultPropertyWhiteList = Object.create(null);\n  // eslint-disable-next-line no-proto\n  defaultPropertyWhiteList['__proto__'] = false;\n\n  return {\n    properties: {\n      whitelist: createNewLookupObject(\n        defaultPropertyWhiteList,\n        runtimeOptions.allowedProtoProperties\n      ),\n      defaultValue: runtimeOptions.allowProtoPropertiesByDefault\n    },\n    methods: {\n      whitelist: createNewLookupObject(\n        defaultMethodWhiteList,\n        runtimeOptions.allowedProtoMethods\n      ),\n      defaultValue: runtimeOptions.allowProtoMethodsByDefault\n    }\n  };\n}\n\nexport function resultIsAllowed(result, protoAccessControl, propertyName) {\n  if (typeof result === 'function') {\n    return checkWhiteList(protoAccessControl.methods, propertyName);\n  } else {\n    return checkWhiteList(protoAccessControl.properties, propertyName);\n  }\n}\n\nfunction checkWhiteList(protoAccessControlForType, propertyName) {\n  if (protoAccessControlForType.whitelist[propertyName] !== undefined) {\n    return protoAccessControlForType.whitelist[propertyName] === true;\n  }\n  if (protoAccessControlForType.defaultValue !== undefined) {\n    return protoAccessControlForType.defaultValue;\n  }\n  logUnexpecedPropertyAccessOnce(propertyName);\n  return false;\n}\n\nfunction logUnexpecedPropertyAccessOnce(propertyName) {\n  if (loggedProperties[propertyName] !== true) {\n    loggedProperties[propertyName] = true;\n    logger.log(\n      'error',\n      `Handlebars: Access has been denied to resolve the property \"${propertyName}\" because it is not an \"own property\" of its parent.\\n` +\n        `You can add a runtime option to disable the check or this warning:\\n` +\n        `See https://handlebarsjs.com/api-reference/runtime-options.html#options-to-control-prototype-access for details`\n    );\n  }\n}\n\nexport function resetLoggedProperties() {\n  Object.keys(loggedProperties).forEach(propertyName => {\n    delete loggedProperties[propertyName];\n  });\n}\n","import { extend } from '../utils';\n\n/**\n * Create a new object with \"null\"-prototype to avoid truthy results on prototype properties.\n * The resulting object can be used with \"object[property]\" to check if a property exists\n * @param {...object} sources a varargs parameter of source objects that will be merged\n * @returns {object}\n */\nexport function createNewLookupObject(...sources) {\n  return extend(Object.create(null), ...sources);\n}\n","// Build out our basic SafeString type\nfunction SafeString(string) {\n  this.string = string;\n}\n\nSafeString.prototype.toString = SafeString.prototype.toHTML = function() {\n  return '' + this.string;\n};\n\nexport default SafeString;\n","import * as Utils from './utils';\nimport Exception from './exception';\nimport {\n  COMPILER_REVISION,\n  createFrame,\n  LAST_COMPATIBLE_COMPILER_REVISION,\n  REVISION_CHANGES\n} from './base';\nimport { moveHelperToHooks } from './helpers';\nimport { wrapHelper } from './internal/wrapHelper';\nimport {\n  createProtoAccessControl,\n  resultIsAllowed\n} from './internal/proto-access';\n\nexport function checkRevision(compilerInfo) {\n  const compilerRevision = (compilerInfo && compilerInfo[0]) || 1,\n    currentRevision = COMPILER_REVISION;\n\n  if (\n    compilerRevision >= LAST_COMPATIBLE_COMPILER_REVISION &&\n    compilerRevision <= COMPILER_REVISION\n  ) {\n    return;\n  }\n\n  if (compilerRevision < LAST_COMPATIBLE_COMPILER_REVISION) {\n    const runtimeVersions = REVISION_CHANGES[currentRevision],\n      compilerVersions = REVISION_CHANGES[compilerRevision];\n    throw new Exception(\n      'Template was precompiled with an older version of Handlebars than the current runtime. ' +\n        'Please update your precompiler to a newer version (' +\n        runtimeVersions +\n        ') or downgrade your runtime to an older version (' +\n        compilerVersions +\n        ').'\n    );\n  } else {\n    // Use the embedded version info since the runtime doesn't know about this revision yet\n    throw new Exception(\n      'Template was precompiled with a newer version of Handlebars than the current runtime. ' +\n        'Please update your runtime to a newer version (' +\n        compilerInfo[1] +\n        ').'\n    );\n  }\n}\n\nexport function template(templateSpec, env) {\n  /* istanbul ignore next */\n  if (!env) {\n    throw new Exception('No environment passed to template');\n  }\n  if (!templateSpec || !templateSpec.main) {\n    throw new Exception('Unknown template object: ' + typeof templateSpec);\n  }\n\n  templateSpec.main.decorator = templateSpec.main_d;\n\n  // Note: Using env.VM references rather than local var references throughout this section to allow\n  // for external users to override these as pseudo-supported APIs.\n  env.VM.checkRevision(templateSpec.compiler);\n\n  // backwards compatibility for precompiled templates with compiler-version 7 (<4.3.0)\n  const templateWasPrecompiledWithCompilerV7 =\n    templateSpec.compiler && templateSpec.compiler[0] === 7;\n\n  function invokePartialWrapper(partial, context, options) {\n    if (options.hash) {\n      context = Utils.extend({}, context, options.hash);\n      if (options.ids) {\n        options.ids[0] = true;\n      }\n    }\n    partial = env.VM.resolvePartial.call(this, partial, context, options);\n\n    let extendedOptions = Utils.extend({}, options, {\n      hooks: this.hooks,\n      protoAccessControl: this.protoAccessControl\n    });\n\n    let result = env.VM.invokePartial.call(\n      this,\n      partial,\n      context,\n      extendedOptions\n    );\n\n    if (result == null && env.compile) {\n      options.partials[options.name] = env.compile(\n        partial,\n        templateSpec.compilerOptions,\n        env\n      );\n      result = options.partials[options.name](context, extendedOptions);\n    }\n    if (result != null) {\n      if (options.indent) {\n        let lines = result.split('\\n');\n        for (let i = 0, l = lines.length; i < l; i++) {\n          if (!lines[i] && i + 1 === l) {\n            break;\n          }\n\n          lines[i] = options.indent + lines[i];\n        }\n        result = lines.join('\\n');\n      }\n      return result;\n    } else {\n      throw new Exception(\n        'The partial ' +\n          options.name +\n          ' could not be compiled when running in runtime-only mode'\n      );\n    }\n  }\n\n  // Just add water\n  let container = {\n    strict: function(obj, name, loc) {\n      if (!obj || !(name in obj)) {\n        throw new Exception('\"' + name + '\" not defined in ' + obj, {\n          loc: loc\n        });\n      }\n      return container.lookupProperty(obj, name);\n    },\n    lookupProperty: function(parent, propertyName) {\n      let result = parent[propertyName];\n      if (result == null) {\n        return result;\n      }\n      if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n        return result;\n      }\n\n      if (resultIsAllowed(result, container.protoAccessControl, propertyName)) {\n        return result;\n      }\n      return undefined;\n    },\n    lookup: function(depths, name) {\n      const len = depths.length;\n      for (let i = 0; i < len; i++) {\n        let result = depths[i] && container.lookupProperty(depths[i], name);\n        if (result != null) {\n          return depths[i][name];\n        }\n      }\n    },\n    lambda: function(current, context) {\n      return typeof current === 'function' ? current.call(context) : current;\n    },\n\n    escapeExpression: Utils.escapeExpression,\n    invokePartial: invokePartialWrapper,\n\n    fn: function(i) {\n      let ret = templateSpec[i];\n      ret.decorator = templateSpec[i + '_d'];\n      return ret;\n    },\n\n    programs: [],\n    program: function(i, data, declaredBlockParams, blockParams, depths) {\n      let programWrapper = this.programs[i],\n        fn = this.fn(i);\n      if (data || depths || blockParams || declaredBlockParams) {\n        programWrapper = wrapProgram(\n          this,\n          i,\n          fn,\n          data,\n          declaredBlockParams,\n          blockParams,\n          depths\n        );\n      } else if (!programWrapper) {\n        programWrapper = this.programs[i] = wrapProgram(this, i, fn);\n      }\n      return programWrapper;\n    },\n\n    data: function(value, depth) {\n      while (value && depth--) {\n        value = value._parent;\n      }\n      return value;\n    },\n    mergeIfNeeded: function(param, common) {\n      let obj = param || common;\n\n      if (param && common && param !== common) {\n        obj = Utils.extend({}, common, param);\n      }\n\n      return obj;\n    },\n    // An empty object to use as replacement for null-contexts\n    nullContext: Object.seal({}),\n\n    noop: env.VM.noop,\n    compilerInfo: templateSpec.compiler\n  };\n\n  function ret(context, options = {}) {\n    let data = options.data;\n\n    ret._setup(options);\n    if (!options.partial && templateSpec.useData) {\n      data = initData(context, data);\n    }\n    let depths,\n      blockParams = templateSpec.useBlockParams ? [] : undefined;\n    if (templateSpec.useDepths) {\n      if (options.depths) {\n        depths =\n          context != options.depths[0]\n            ? [context].concat(options.depths)\n            : options.depths;\n      } else {\n        depths = [context];\n      }\n    }\n\n    function main(context /*, options*/) {\n      return (\n        '' +\n        templateSpec.main(\n          container,\n          context,\n          container.helpers,\n          container.partials,\n          data,\n          blockParams,\n          depths\n        )\n      );\n    }\n\n    main = executeDecorators(\n      templateSpec.main,\n      main,\n      container,\n      options.depths || [],\n      data,\n      blockParams\n    );\n    return main(context, options);\n  }\n\n  ret.isTop = true;\n\n  ret._setup = function(options) {\n    if (!options.partial) {\n      let mergedHelpers = Utils.extend({}, env.helpers, options.helpers);\n      wrapHelpersToPassLookupProperty(mergedHelpers, container);\n      container.helpers = mergedHelpers;\n\n      if (templateSpec.usePartial) {\n        // Use mergeIfNeeded here to prevent compiling global partials multiple times\n        container.partials = container.mergeIfNeeded(\n          options.partials,\n          env.partials\n        );\n      }\n      if (templateSpec.usePartial || templateSpec.useDecorators) {\n        container.decorators = Utils.extend(\n          {},\n          env.decorators,\n          options.decorators\n        );\n      }\n\n      container.hooks = {};\n      container.protoAccessControl = createProtoAccessControl(options);\n\n      let keepHelperInHelpers =\n        options.allowCallsToHelperMissing ||\n        templateWasPrecompiledWithCompilerV7;\n      moveHelperToHooks(container, 'helperMissing', keepHelperInHelpers);\n      moveHelperToHooks(container, 'blockHelperMissing', keepHelperInHelpers);\n    } else {\n      container.protoAccessControl = options.protoAccessControl; // internal option\n      container.helpers = options.helpers;\n      container.partials = options.partials;\n      container.decorators = options.decorators;\n      container.hooks = options.hooks;\n    }\n  };\n\n  ret._child = function(i, data, blockParams, depths) {\n    if (templateSpec.useBlockParams && !blockParams) {\n      throw new Exception('must pass block params');\n    }\n    if (templateSpec.useDepths && !depths) {\n      throw new Exception('must pass parent depths');\n    }\n\n    return wrapProgram(\n      container,\n      i,\n      templateSpec[i],\n      data,\n      0,\n      blockParams,\n      depths\n    );\n  };\n  return ret;\n}\n\nexport function wrapProgram(\n  container,\n  i,\n  fn,\n  data,\n  declaredBlockParams,\n  blockParams,\n  depths\n) {\n  function prog(context, options = {}) {\n    let currentDepths = depths;\n    if (\n      depths &&\n      context != depths[0] &&\n      !(context === container.nullContext && depths[0] === null)\n    ) {\n      currentDepths = [context].concat(depths);\n    }\n\n    return fn(\n      container,\n      context,\n      container.helpers,\n      container.partials,\n      options.data || data,\n      blockParams && [options.blockParams].concat(blockParams),\n      currentDepths\n    );\n  }\n\n  prog = executeDecorators(fn, prog, container, depths, data, blockParams);\n\n  prog.program = i;\n  prog.depth = depths ? depths.length : 0;\n  prog.blockParams = declaredBlockParams || 0;\n  return prog;\n}\n\n/**\n * This is currently part of the official API, therefore implementation details should not be changed.\n */\nexport function resolvePartial(partial, context, options) {\n  if (!partial) {\n    if (options.name === '@partial-block') {\n      partial = options.data['partial-block'];\n    } else {\n      partial = options.partials[options.name];\n    }\n  } else if (!partial.call && !options.name) {\n    // This is a dynamic partial that returned a string\n    options.name = partial;\n    partial = options.partials[partial];\n  }\n  return partial;\n}\n\nexport function invokePartial(partial, context, options) {\n  // Use the current closure context to save the partial-block if this partial\n  const currentPartialBlock = options.data && options.data['partial-block'];\n  options.partial = true;\n  if (options.ids) {\n    options.data.contextPath = options.ids[0] || options.data.contextPath;\n  }\n\n  let partialBlock;\n  if (options.fn && options.fn !== noop) {\n    options.data = createFrame(options.data);\n    // Wrapper function to get access to currentPartialBlock from the closure\n    let fn = options.fn;\n    partialBlock = options.data['partial-block'] = function partialBlockWrapper(\n      context,\n      options = {}\n    ) {\n      // Restore the partial-block from the closure for the execution of the block\n      // i.e. the part inside the block of the partial call.\n      options.data = createFrame(options.data);\n      options.data['partial-block'] = currentPartialBlock;\n      return fn(context, options);\n    };\n    if (fn.partials) {\n      options.partials = Utils.extend({}, options.partials, fn.partials);\n    }\n  }\n\n  if (partial === undefined && partialBlock) {\n    partial = partialBlock;\n  }\n\n  if (partial === undefined) {\n    throw new Exception('The partial ' + options.name + ' could not be found');\n  } else if (partial instanceof Function) {\n    return partial(context, options);\n  }\n}\n\nexport function noop() {\n  return '';\n}\n\nfunction initData(context, data) {\n  if (!data || !('root' in data)) {\n    data = data ? createFrame(data) : {};\n    data.root = context;\n  }\n  return data;\n}\n\nfunction executeDecorators(fn, prog, container, depths, data, blockParams) {\n  if (fn.decorator) {\n    let props = {};\n    prog = fn.decorator(\n      prog,\n      props,\n      container,\n      depths && depths[0],\n      data,\n      blockParams,\n      depths\n    );\n    Utils.extend(prog, props);\n  }\n  return prog;\n}\n\nfunction wrapHelpersToPassLookupProperty(mergedHelpers, container) {\n  Object.keys(mergedHelpers).forEach(helperName => {\n    let helper = mergedHelpers[helperName];\n    mergedHelpers[helperName] = passLookupPropertyOption(helper, container);\n  });\n}\n\nfunction passLookupPropertyOption(helper, container) {\n  const lookupProperty = container.lookupProperty;\n  return wrapHelper(helper, options => {\n    return Utils.extend({ lookupProperty }, options);\n  });\n}\n","export function wrapHelper(helper, transformOptionsFn) {\n  if (typeof helper !== 'function') {\n    // This should not happen, but apparently it does in https://github.com/wycats/handlebars.js/issues/1639\n    // We try to make the wrapper least-invasive by not wrapping it, if the helper is not a function.\n    return helper;\n  }\n  let wrapper = function(/* dynamic arguments */) {\n    const options = arguments[arguments.length - 1];\n    arguments[arguments.length - 1] = transformOptionsFn(options);\n    return helper.apply(this, arguments);\n  };\n  return wrapper;\n}\n","export default function(Handlebars) {\n  /* istanbul ignore next */\n  let root = typeof global !== 'undefined' ? global : window,\n    $Handlebars = root.Handlebars;\n  /* istanbul ignore next */\n  Handlebars.noConflict = function() {\n    if (root.Handlebars === Handlebars) {\n      root.Handlebars = $Handlebars;\n    }\n    return Handlebars;\n  };\n}\n","let AST = {\n  // Public API used to evaluate derived attributes regarding AST nodes\n  helpers: {\n    // a mustache is definitely a helper if:\n    // * it is an eligible helper, and\n    // * it has at least one parameter or hash segment\n    helperExpression: function(node) {\n      return (\n        node.type === 'SubExpression' ||\n        ((node.type === 'MustacheStatement' ||\n          node.type === 'BlockStatement') &&\n          !!((node.params && node.params.length) || node.hash))\n      );\n    },\n\n    scopedId: function(path) {\n      return /^\\.|this\\b/.test(path.original);\n    },\n\n    // an ID is simple if it only has one part, and that part is not\n    // `..` or `this`.\n    simpleId: function(path) {\n      return (\n        path.parts.length === 1 && !AST.helpers.scopedId(path) && !path.depth\n      );\n    }\n  }\n};\n\n// Must be exported as an object rather than the root of the module as the jison lexer\n// must modify the object to operate properly.\nexport default AST;\n","import parser from './parser';\nimport WhitespaceControl from './whitespace-control';\nimport * as Helpers from './helpers';\nimport { extend } from '../utils';\n\nexport { parser };\n\nlet yy = {};\nextend(yy, Helpers);\n\nexport function parseWithoutProcessing(input, options) {\n  // Just return if an already-compiled AST was passed in.\n  if (input.type === 'Program') {\n    return input;\n  }\n\n  parser.yy = yy;\n\n  // Altering the shared object here, but this is ok as parser is a sync operation\n  yy.locInfo = function(locInfo) {\n    return new yy.SourceLocation(options && options.srcName, locInfo);\n  };\n\n  let ast = parser.parse(input);\n\n  return ast;\n}\n\nexport function parse(input, options) {\n  let ast = parseWithoutProcessing(input, options);\n  let strip = new WhitespaceControl(options);\n\n  return strip.accept(ast);\n}\n","// File ignored in coverage tests via setting in .istanbul.yml\n/* Jison generated parser */\nvar handlebars = (function(){\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"root\":3,\"program\":4,\"EOF\":5,\"program_repetition0\":6,\"statement\":7,\"mustache\":8,\"block\":9,\"rawBlock\":10,\"partial\":11,\"partialBlock\":12,\"content\":13,\"COMMENT\":14,\"CONTENT\":15,\"openRawBlock\":16,\"rawBlock_repetition0\":17,\"END_RAW_BLOCK\":18,\"OPEN_RAW_BLOCK\":19,\"helperName\":20,\"openRawBlock_repetition0\":21,\"openRawBlock_option0\":22,\"CLOSE_RAW_BLOCK\":23,\"openBlock\":24,\"block_option0\":25,\"closeBlock\":26,\"openInverse\":27,\"block_option1\":28,\"OPEN_BLOCK\":29,\"openBlock_repetition0\":30,\"openBlock_option0\":31,\"openBlock_option1\":32,\"CLOSE\":33,\"OPEN_INVERSE\":34,\"openInverse_repetition0\":35,\"openInverse_option0\":36,\"openInverse_option1\":37,\"openInverseChain\":38,\"OPEN_INVERSE_CHAIN\":39,\"openInverseChain_repetition0\":40,\"openInverseChain_option0\":41,\"openInverseChain_option1\":42,\"inverseAndProgram\":43,\"INVERSE\":44,\"inverseChain\":45,\"inverseChain_option0\":46,\"OPEN_ENDBLOCK\":47,\"OPEN\":48,\"mustache_repetition0\":49,\"mustache_option0\":50,\"OPEN_UNESCAPED\":51,\"mustache_repetition1\":52,\"mustache_option1\":53,\"CLOSE_UNESCAPED\":54,\"OPEN_PARTIAL\":55,\"partialName\":56,\"partial_repetition0\":57,\"partial_option0\":58,\"openPartialBlock\":59,\"OPEN_PARTIAL_BLOCK\":60,\"openPartialBlock_repetition0\":61,\"openPartialBlock_option0\":62,\"param\":63,\"sexpr\":64,\"OPEN_SEXPR\":65,\"sexpr_repetition0\":66,\"sexpr_option0\":67,\"CLOSE_SEXPR\":68,\"hash\":69,\"hash_repetition_plus0\":70,\"hashSegment\":71,\"ID\":72,\"EQUALS\":73,\"blockParams\":74,\"OPEN_BLOCK_PARAMS\":75,\"blockParams_repetition_plus0\":76,\"CLOSE_BLOCK_PARAMS\":77,\"path\":78,\"dataName\":79,\"STRING\":80,\"NUMBER\":81,\"BOOLEAN\":82,\"UNDEFINED\":83,\"NULL\":84,\"DATA\":85,\"pathSegments\":86,\"SEP\":87,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",5:\"EOF\",14:\"COMMENT\",15:\"CONTENT\",18:\"END_RAW_BLOCK\",19:\"OPEN_RAW_BLOCK\",23:\"CLOSE_RAW_BLOCK\",29:\"OPEN_BLOCK\",33:\"CLOSE\",34:\"OPEN_INVERSE\",39:\"OPEN_INVERSE_CHAIN\",44:\"INVERSE\",47:\"OPEN_ENDBLOCK\",48:\"OPEN\",51:\"OPEN_UNESCAPED\",54:\"CLOSE_UNESCAPED\",55:\"OPEN_PARTIAL\",60:\"OPEN_PARTIAL_BLOCK\",65:\"OPEN_SEXPR\",68:\"CLOSE_SEXPR\",72:\"ID\",73:\"EQUALS\",75:\"OPEN_BLOCK_PARAMS\",77:\"CLOSE_BLOCK_PARAMS\",80:\"STRING\",81:\"NUMBER\",82:\"BOOLEAN\",83:\"UNDEFINED\",84:\"NULL\",85:\"DATA\",87:\"SEP\"},\nproductions_: [0,[3,2],[4,1],[7,1],[7,1],[7,1],[7,1],[7,1],[7,1],[7,1],[13,1],[10,3],[16,5],[9,4],[9,4],[24,6],[27,6],[38,6],[43,2],[45,3],[45,1],[26,3],[8,5],[8,5],[11,5],[12,3],[59,5],[63,1],[63,1],[64,5],[69,1],[71,3],[74,3],[20,1],[20,1],[20,1],[20,1],[20,1],[20,1],[20,1],[56,1],[56,1],[79,2],[78,1],[86,3],[86,1],[6,0],[6,2],[17,0],[17,2],[21,0],[21,2],[22,0],[22,1],[25,0],[25,1],[28,0],[28,1],[30,0],[30,2],[31,0],[31,1],[32,0],[32,1],[35,0],[35,2],[36,0],[36,1],[37,0],[37,1],[40,0],[40,2],[41,0],[41,1],[42,0],[42,1],[46,0],[46,1],[49,0],[49,2],[50,0],[50,1],[52,0],[52,2],[53,0],[53,1],[57,0],[57,2],[58,0],[58,1],[61,0],[61,2],[62,0],[62,1],[66,0],[66,2],[67,0],[67,1],[70,1],[70,2],[76,1],[76,2]],\nperformAction: function anonymous(yytext,yyleng,yylineno,yy,yystate,$$,_$\n) {\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1: return $$[$0-1]; \nbreak;\ncase 2:this.$ = yy.prepareProgram($$[$0]);\nbreak;\ncase 3:this.$ = $$[$0];\nbreak;\ncase 4:this.$ = $$[$0];\nbreak;\ncase 5:this.$ = $$[$0];\nbreak;\ncase 6:this.$ = $$[$0];\nbreak;\ncase 7:this.$ = $$[$0];\nbreak;\ncase 8:this.$ = $$[$0];\nbreak;\ncase 9:\n    this.$ = {\n      type: 'CommentStatement',\n      value: yy.stripComment($$[$0]),\n      strip: yy.stripFlags($$[$0], $$[$0]),\n      loc: yy.locInfo(this._$)\n    };\n  \nbreak;\ncase 10:\n    this.$ = {\n      type: 'ContentStatement',\n      original: $$[$0],\n      value: $$[$0],\n      loc: yy.locInfo(this._$)\n    };\n  \nbreak;\ncase 11:this.$ = yy.prepareRawBlock($$[$0-2], $$[$0-1], $$[$0], this._$);\nbreak;\ncase 12:this.$ = { path: $$[$0-3], params: $$[$0-2], hash: $$[$0-1] };\nbreak;\ncase 13:this.$ = yy.prepareBlock($$[$0-3], $$[$0-2], $$[$0-1], $$[$0], false, this._$);\nbreak;\ncase 14:this.$ = yy.prepareBlock($$[$0-3], $$[$0-2], $$[$0-1], $$[$0], true, this._$);\nbreak;\ncase 15:this.$ = { open: $$[$0-5], path: $$[$0-4], params: $$[$0-3], hash: $$[$0-2], blockParams: $$[$0-1], strip: yy.stripFlags($$[$0-5], $$[$0]) };\nbreak;\ncase 16:this.$ = { path: $$[$0-4], params: $$[$0-3], hash: $$[$0-2], blockParams: $$[$0-1], strip: yy.stripFlags($$[$0-5], $$[$0]) };\nbreak;\ncase 17:this.$ = { path: $$[$0-4], params: $$[$0-3], hash: $$[$0-2], blockParams: $$[$0-1], strip: yy.stripFlags($$[$0-5], $$[$0]) };\nbreak;\ncase 18:this.$ = { strip: yy.stripFlags($$[$0-1], $$[$0-1]), program: $$[$0] };\nbreak;\ncase 19:\n    var inverse = yy.prepareBlock($$[$0-2], $$[$0-1], $$[$0], $$[$0], false, this._$),\n        program = yy.prepareProgram([inverse], $$[$0-1].loc);\n    program.chained = true;\n\n    this.$ = { strip: $$[$0-2].strip, program: program, chain: true };\n  \nbreak;\ncase 20:this.$ = $$[$0];\nbreak;\ncase 21:this.$ = {path: $$[$0-1], strip: yy.stripFlags($$[$0-2], $$[$0])};\nbreak;\ncase 22:this.$ = yy.prepareMustache($$[$0-3], $$[$0-2], $$[$0-1], $$[$0-4], yy.stripFlags($$[$0-4], $$[$0]), this._$);\nbreak;\ncase 23:this.$ = yy.prepareMustache($$[$0-3], $$[$0-2], $$[$0-1], $$[$0-4], yy.stripFlags($$[$0-4], $$[$0]), this._$);\nbreak;\ncase 24:\n    this.$ = {\n      type: 'PartialStatement',\n      name: $$[$0-3],\n      params: $$[$0-2],\n      hash: $$[$0-1],\n      indent: '',\n      strip: yy.stripFlags($$[$0-4], $$[$0]),\n      loc: yy.locInfo(this._$)\n    };\n  \nbreak;\ncase 25:this.$ = yy.preparePartialBlock($$[$0-2], $$[$0-1], $$[$0], this._$);\nbreak;\ncase 26:this.$ = { path: $$[$0-3], params: $$[$0-2], hash: $$[$0-1], strip: yy.stripFlags($$[$0-4], $$[$0]) };\nbreak;\ncase 27:this.$ = $$[$0];\nbreak;\ncase 28:this.$ = $$[$0];\nbreak;\ncase 29:\n    this.$ = {\n      type: 'SubExpression',\n      path: $$[$0-3],\n      params: $$[$0-2],\n      hash: $$[$0-1],\n      loc: yy.locInfo(this._$)\n    };\n  \nbreak;\ncase 30:this.$ = {type: 'Hash', pairs: $$[$0], loc: yy.locInfo(this._$)};\nbreak;\ncase 31:this.$ = {type: 'HashPair', key: yy.id($$[$0-2]), value: $$[$0], loc: yy.locInfo(this._$)};\nbreak;\ncase 32:this.$ = yy.id($$[$0-1]);\nbreak;\ncase 33:this.$ = $$[$0];\nbreak;\ncase 34:this.$ = $$[$0];\nbreak;\ncase 35:this.$ = {type: 'StringLiteral', value: $$[$0], original: $$[$0], loc: yy.locInfo(this._$)};\nbreak;\ncase 36:this.$ = {type: 'NumberLiteral', value: Number($$[$0]), original: Number($$[$0]), loc: yy.locInfo(this._$)};\nbreak;\ncase 37:this.$ = {type: 'BooleanLiteral', value: $$[$0] === 'true', original: $$[$0] === 'true', loc: yy.locInfo(this._$)};\nbreak;\ncase 38:this.$ = {type: 'UndefinedLiteral', original: undefined, value: undefined, loc: yy.locInfo(this._$)};\nbreak;\ncase 39:this.$ = {type: 'NullLiteral', original: null, value: null, loc: yy.locInfo(this._$)};\nbreak;\ncase 40:this.$ = $$[$0];\nbreak;\ncase 41:this.$ = $$[$0];\nbreak;\ncase 42:this.$ = yy.preparePath(true, $$[$0], this._$);\nbreak;\ncase 43:this.$ = yy.preparePath(false, $$[$0], this._$);\nbreak;\ncase 44: $$[$0-2].push({part: yy.id($$[$0]), original: $$[$0], separator: $$[$0-1]}); this.$ = $$[$0-2]; \nbreak;\ncase 45:this.$ = [{part: yy.id($$[$0]), original: $$[$0]}];\nbreak;\ncase 46:this.$ = [];\nbreak;\ncase 47:$$[$0-1].push($$[$0]);\nbreak;\ncase 48:this.$ = [];\nbreak;\ncase 49:$$[$0-1].push($$[$0]);\nbreak;\ncase 50:this.$ = [];\nbreak;\ncase 51:$$[$0-1].push($$[$0]);\nbreak;\ncase 58:this.$ = [];\nbreak;\ncase 59:$$[$0-1].push($$[$0]);\nbreak;\ncase 64:this.$ = [];\nbreak;\ncase 65:$$[$0-1].push($$[$0]);\nbreak;\ncase 70:this.$ = [];\nbreak;\ncase 71:$$[$0-1].push($$[$0]);\nbreak;\ncase 78:this.$ = [];\nbreak;\ncase 79:$$[$0-1].push($$[$0]);\nbreak;\ncase 82:this.$ = [];\nbreak;\ncase 83:$$[$0-1].push($$[$0]);\nbreak;\ncase 86:this.$ = [];\nbreak;\ncase 87:$$[$0-1].push($$[$0]);\nbreak;\ncase 90:this.$ = [];\nbreak;\ncase 91:$$[$0-1].push($$[$0]);\nbreak;\ncase 94:this.$ = [];\nbreak;\ncase 95:$$[$0-1].push($$[$0]);\nbreak;\ncase 98:this.$ = [$$[$0]];\nbreak;\ncase 99:$$[$0-1].push($$[$0]);\nbreak;\ncase 100:this.$ = [$$[$0]];\nbreak;\ncase 101:$$[$0-1].push($$[$0]);\nbreak;\n}\n},\ntable: [{3:1,4:2,5:[2,46],6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{1:[3]},{5:[1,4]},{5:[2,2],7:5,8:6,9:7,10:8,11:9,12:10,13:11,14:[1,12],15:[1,20],16:17,19:[1,23],24:15,27:16,29:[1,21],34:[1,22],39:[2,2],44:[2,2],47:[2,2],48:[1,13],51:[1,14],55:[1,18],59:19,60:[1,24]},{1:[2,1]},{5:[2,47],14:[2,47],15:[2,47],19:[2,47],29:[2,47],34:[2,47],39:[2,47],44:[2,47],47:[2,47],48:[2,47],51:[2,47],55:[2,47],60:[2,47]},{5:[2,3],14:[2,3],15:[2,3],19:[2,3],29:[2,3],34:[2,3],39:[2,3],44:[2,3],47:[2,3],48:[2,3],51:[2,3],55:[2,3],60:[2,3]},{5:[2,4],14:[2,4],15:[2,4],19:[2,4],29:[2,4],34:[2,4],39:[2,4],44:[2,4],47:[2,4],48:[2,4],51:[2,4],55:[2,4],60:[2,4]},{5:[2,5],14:[2,5],15:[2,5],19:[2,5],29:[2,5],34:[2,5],39:[2,5],44:[2,5],47:[2,5],48:[2,5],51:[2,5],55:[2,5],60:[2,5]},{5:[2,6],14:[2,6],15:[2,6],19:[2,6],29:[2,6],34:[2,6],39:[2,6],44:[2,6],47:[2,6],48:[2,6],51:[2,6],55:[2,6],60:[2,6]},{5:[2,7],14:[2,7],15:[2,7],19:[2,7],29:[2,7],34:[2,7],39:[2,7],44:[2,7],47:[2,7],48:[2,7],51:[2,7],55:[2,7],60:[2,7]},{5:[2,8],14:[2,8],15:[2,8],19:[2,8],29:[2,8],34:[2,8],39:[2,8],44:[2,8],47:[2,8],48:[2,8],51:[2,8],55:[2,8],60:[2,8]},{5:[2,9],14:[2,9],15:[2,9],19:[2,9],29:[2,9],34:[2,9],39:[2,9],44:[2,9],47:[2,9],48:[2,9],51:[2,9],55:[2,9],60:[2,9]},{20:25,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:36,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{4:37,6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],39:[2,46],44:[2,46],47:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{4:38,6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],44:[2,46],47:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{15:[2,48],17:39,18:[2,48]},{20:41,56:40,64:42,65:[1,43],72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{4:44,6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],47:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{5:[2,10],14:[2,10],15:[2,10],18:[2,10],19:[2,10],29:[2,10],34:[2,10],39:[2,10],44:[2,10],47:[2,10],48:[2,10],51:[2,10],55:[2,10],60:[2,10]},{20:45,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:46,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:47,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:41,56:48,64:42,65:[1,43],72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{33:[2,78],49:49,65:[2,78],72:[2,78],80:[2,78],81:[2,78],82:[2,78],83:[2,78],84:[2,78],85:[2,78]},{23:[2,33],33:[2,33],54:[2,33],65:[2,33],68:[2,33],72:[2,33],75:[2,33],80:[2,33],81:[2,33],82:[2,33],83:[2,33],84:[2,33],85:[2,33]},{23:[2,34],33:[2,34],54:[2,34],65:[2,34],68:[2,34],72:[2,34],75:[2,34],80:[2,34],81:[2,34],82:[2,34],83:[2,34],84:[2,34],85:[2,34]},{23:[2,35],33:[2,35],54:[2,35],65:[2,35],68:[2,35],72:[2,35],75:[2,35],80:[2,35],81:[2,35],82:[2,35],83:[2,35],84:[2,35],85:[2,35]},{23:[2,36],33:[2,36],54:[2,36],65:[2,36],68:[2,36],72:[2,36],75:[2,36],80:[2,36],81:[2,36],82:[2,36],83:[2,36],84:[2,36],85:[2,36]},{23:[2,37],33:[2,37],54:[2,37],65:[2,37],68:[2,37],72:[2,37],75:[2,37],80:[2,37],81:[2,37],82:[2,37],83:[2,37],84:[2,37],85:[2,37]},{23:[2,38],33:[2,38],54:[2,38],65:[2,38],68:[2,38],72:[2,38],75:[2,38],80:[2,38],81:[2,38],82:[2,38],83:[2,38],84:[2,38],85:[2,38]},{23:[2,39],33:[2,39],54:[2,39],65:[2,39],68:[2,39],72:[2,39],75:[2,39],80:[2,39],81:[2,39],82:[2,39],83:[2,39],84:[2,39],85:[2,39]},{23:[2,43],33:[2,43],54:[2,43],65:[2,43],68:[2,43],72:[2,43],75:[2,43],80:[2,43],81:[2,43],82:[2,43],83:[2,43],84:[2,43],85:[2,43],87:[1,50]},{72:[1,35],86:51},{23:[2,45],33:[2,45],54:[2,45],65:[2,45],68:[2,45],72:[2,45],75:[2,45],80:[2,45],81:[2,45],82:[2,45],83:[2,45],84:[2,45],85:[2,45],87:[2,45]},{52:52,54:[2,82],65:[2,82],72:[2,82],80:[2,82],81:[2,82],82:[2,82],83:[2,82],84:[2,82],85:[2,82]},{25:53,38:55,39:[1,57],43:56,44:[1,58],45:54,47:[2,54]},{28:59,43:60,44:[1,58],47:[2,56]},{13:62,15:[1,20],18:[1,61]},{33:[2,86],57:63,65:[2,86],72:[2,86],80:[2,86],81:[2,86],82:[2,86],83:[2,86],84:[2,86],85:[2,86]},{33:[2,40],65:[2,40],72:[2,40],80:[2,40],81:[2,40],82:[2,40],83:[2,40],84:[2,40],85:[2,40]},{33:[2,41],65:[2,41],72:[2,41],80:[2,41],81:[2,41],82:[2,41],83:[2,41],84:[2,41],85:[2,41]},{20:64,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{26:65,47:[1,66]},{30:67,33:[2,58],65:[2,58],72:[2,58],75:[2,58],80:[2,58],81:[2,58],82:[2,58],83:[2,58],84:[2,58],85:[2,58]},{33:[2,64],35:68,65:[2,64],72:[2,64],75:[2,64],80:[2,64],81:[2,64],82:[2,64],83:[2,64],84:[2,64],85:[2,64]},{21:69,23:[2,50],65:[2,50],72:[2,50],80:[2,50],81:[2,50],82:[2,50],83:[2,50],84:[2,50],85:[2,50]},{33:[2,90],61:70,65:[2,90],72:[2,90],80:[2,90],81:[2,90],82:[2,90],83:[2,90],84:[2,90],85:[2,90]},{20:74,33:[2,80],50:71,63:72,64:75,65:[1,43],69:73,70:76,71:77,72:[1,78],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{72:[1,79]},{23:[2,42],33:[2,42],54:[2,42],65:[2,42],68:[2,42],72:[2,42],75:[2,42],80:[2,42],81:[2,42],82:[2,42],83:[2,42],84:[2,42],85:[2,42],87:[1,50]},{20:74,53:80,54:[2,84],63:81,64:75,65:[1,43],69:82,70:76,71:77,72:[1,78],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{26:83,47:[1,66]},{47:[2,55]},{4:84,6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],39:[2,46],44:[2,46],47:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{47:[2,20]},{20:85,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{4:86,6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],47:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{26:87,47:[1,66]},{47:[2,57]},{5:[2,11],14:[2,11],15:[2,11],19:[2,11],29:[2,11],34:[2,11],39:[2,11],44:[2,11],47:[2,11],48:[2,11],51:[2,11],55:[2,11],60:[2,11]},{15:[2,49],18:[2,49]},{20:74,33:[2,88],58:88,63:89,64:75,65:[1,43],69:90,70:76,71:77,72:[1,78],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{65:[2,94],66:91,68:[2,94],72:[2,94],80:[2,94],81:[2,94],82:[2,94],83:[2,94],84:[2,94],85:[2,94]},{5:[2,25],14:[2,25],15:[2,25],19:[2,25],29:[2,25],34:[2,25],39:[2,25],44:[2,25],47:[2,25],48:[2,25],51:[2,25],55:[2,25],60:[2,25]},{20:92,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:74,31:93,33:[2,60],63:94,64:75,65:[1,43],69:95,70:76,71:77,72:[1,78],75:[2,60],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:74,33:[2,66],36:96,63:97,64:75,65:[1,43],69:98,70:76,71:77,72:[1,78],75:[2,66],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:74,22:99,23:[2,52],63:100,64:75,65:[1,43],69:101,70:76,71:77,72:[1,78],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:74,33:[2,92],62:102,63:103,64:75,65:[1,43],69:104,70:76,71:77,72:[1,78],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{33:[1,105]},{33:[2,79],65:[2,79],72:[2,79],80:[2,79],81:[2,79],82:[2,79],83:[2,79],84:[2,79],85:[2,79]},{33:[2,81]},{23:[2,27],33:[2,27],54:[2,27],65:[2,27],68:[2,27],72:[2,27],75:[2,27],80:[2,27],81:[2,27],82:[2,27],83:[2,27],84:[2,27],85:[2,27]},{23:[2,28],33:[2,28],54:[2,28],65:[2,28],68:[2,28],72:[2,28],75:[2,28],80:[2,28],81:[2,28],82:[2,28],83:[2,28],84:[2,28],85:[2,28]},{23:[2,30],33:[2,30],54:[2,30],68:[2,30],71:106,72:[1,107],75:[2,30]},{23:[2,98],33:[2,98],54:[2,98],68:[2,98],72:[2,98],75:[2,98]},{23:[2,45],33:[2,45],54:[2,45],65:[2,45],68:[2,45],72:[2,45],73:[1,108],75:[2,45],80:[2,45],81:[2,45],82:[2,45],83:[2,45],84:[2,45],85:[2,45],87:[2,45]},{23:[2,44],33:[2,44],54:[2,44],65:[2,44],68:[2,44],72:[2,44],75:[2,44],80:[2,44],81:[2,44],82:[2,44],83:[2,44],84:[2,44],85:[2,44],87:[2,44]},{54:[1,109]},{54:[2,83],65:[2,83],72:[2,83],80:[2,83],81:[2,83],82:[2,83],83:[2,83],84:[2,83],85:[2,83]},{54:[2,85]},{5:[2,13],14:[2,13],15:[2,13],19:[2,13],29:[2,13],34:[2,13],39:[2,13],44:[2,13],47:[2,13],48:[2,13],51:[2,13],55:[2,13],60:[2,13]},{38:55,39:[1,57],43:56,44:[1,58],45:111,46:110,47:[2,76]},{33:[2,70],40:112,65:[2,70],72:[2,70],75:[2,70],80:[2,70],81:[2,70],82:[2,70],83:[2,70],84:[2,70],85:[2,70]},{47:[2,18]},{5:[2,14],14:[2,14],15:[2,14],19:[2,14],29:[2,14],34:[2,14],39:[2,14],44:[2,14],47:[2,14],48:[2,14],51:[2,14],55:[2,14],60:[2,14]},{33:[1,113]},{33:[2,87],65:[2,87],72:[2,87],80:[2,87],81:[2,87],82:[2,87],83:[2,87],84:[2,87],85:[2,87]},{33:[2,89]},{20:74,63:115,64:75,65:[1,43],67:114,68:[2,96],69:116,70:76,71:77,72:[1,78],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{33:[1,117]},{32:118,33:[2,62],74:119,75:[1,120]},{33:[2,59],65:[2,59],72:[2,59],75:[2,59],80:[2,59],81:[2,59],82:[2,59],83:[2,59],84:[2,59],85:[2,59]},{33:[2,61],75:[2,61]},{33:[2,68],37:121,74:122,75:[1,120]},{33:[2,65],65:[2,65],72:[2,65],75:[2,65],80:[2,65],81:[2,65],82:[2,65],83:[2,65],84:[2,65],85:[2,65]},{33:[2,67],75:[2,67]},{23:[1,123]},{23:[2,51],65:[2,51],72:[2,51],80:[2,51],81:[2,51],82:[2,51],83:[2,51],84:[2,51],85:[2,51]},{23:[2,53]},{33:[1,124]},{33:[2,91],65:[2,91],72:[2,91],80:[2,91],81:[2,91],82:[2,91],83:[2,91],84:[2,91],85:[2,91]},{33:[2,93]},{5:[2,22],14:[2,22],15:[2,22],19:[2,22],29:[2,22],34:[2,22],39:[2,22],44:[2,22],47:[2,22],48:[2,22],51:[2,22],55:[2,22],60:[2,22]},{23:[2,99],33:[2,99],54:[2,99],68:[2,99],72:[2,99],75:[2,99]},{73:[1,108]},{20:74,63:125,64:75,65:[1,43],72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{5:[2,23],14:[2,23],15:[2,23],19:[2,23],29:[2,23],34:[2,23],39:[2,23],44:[2,23],47:[2,23],48:[2,23],51:[2,23],55:[2,23],60:[2,23]},{47:[2,19]},{47:[2,77]},{20:74,33:[2,72],41:126,63:127,64:75,65:[1,43],69:128,70:76,71:77,72:[1,78],75:[2,72],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{5:[2,24],14:[2,24],15:[2,24],19:[2,24],29:[2,24],34:[2,24],39:[2,24],44:[2,24],47:[2,24],48:[2,24],51:[2,24],55:[2,24],60:[2,24]},{68:[1,129]},{65:[2,95],68:[2,95],72:[2,95],80:[2,95],81:[2,95],82:[2,95],83:[2,95],84:[2,95],85:[2,95]},{68:[2,97]},{5:[2,21],14:[2,21],15:[2,21],19:[2,21],29:[2,21],34:[2,21],39:[2,21],44:[2,21],47:[2,21],48:[2,21],51:[2,21],55:[2,21],60:[2,21]},{33:[1,130]},{33:[2,63]},{72:[1,132],76:131},{33:[1,133]},{33:[2,69]},{15:[2,12],18:[2,12]},{14:[2,26],15:[2,26],19:[2,26],29:[2,26],34:[2,26],47:[2,26],48:[2,26],51:[2,26],55:[2,26],60:[2,26]},{23:[2,31],33:[2,31],54:[2,31],68:[2,31],72:[2,31],75:[2,31]},{33:[2,74],42:134,74:135,75:[1,120]},{33:[2,71],65:[2,71],72:[2,71],75:[2,71],80:[2,71],81:[2,71],82:[2,71],83:[2,71],84:[2,71],85:[2,71]},{33:[2,73],75:[2,73]},{23:[2,29],33:[2,29],54:[2,29],65:[2,29],68:[2,29],72:[2,29],75:[2,29],80:[2,29],81:[2,29],82:[2,29],83:[2,29],84:[2,29],85:[2,29]},{14:[2,15],15:[2,15],19:[2,15],29:[2,15],34:[2,15],39:[2,15],44:[2,15],47:[2,15],48:[2,15],51:[2,15],55:[2,15],60:[2,15]},{72:[1,137],77:[1,136]},{72:[2,100],77:[2,100]},{14:[2,16],15:[2,16],19:[2,16],29:[2,16],34:[2,16],44:[2,16],47:[2,16],48:[2,16],51:[2,16],55:[2,16],60:[2,16]},{33:[1,138]},{33:[2,75]},{33:[2,32]},{72:[2,101],77:[2,101]},{14:[2,17],15:[2,17],19:[2,17],29:[2,17],34:[2,17],39:[2,17],44:[2,17],47:[2,17],48:[2,17],51:[2,17],55:[2,17],60:[2,17]}],\ndefaultActions: {4:[2,1],54:[2,55],56:[2,20],60:[2,57],73:[2,81],82:[2,85],86:[2,18],90:[2,89],101:[2,53],104:[2,93],110:[2,19],111:[2,77],116:[2,97],119:[2,63],122:[2,69],135:[2,75],136:[2,32]},\nparseError: function parseError (str, hash) {\n    throw new Error(str);\n},\nparse: function parse(input) {\n    var self = this, stack = [0], vstack = [null], lstack = [], table = this.table, yytext = \"\", yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    this.lexer.setInput(input);\n    this.lexer.yy = this.yy;\n    this.yy.lexer = this.lexer;\n    this.yy.parser = this;\n    if (typeof this.lexer.yylloc == \"undefined\")\n        this.lexer.yylloc = {};\n    var yyloc = this.lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = this.lexer.options && this.lexer.options.ranges;\n    if (typeof this.yy.parseError === \"function\")\n        this.parseError = this.yy.parseError;\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    function lex() {\n        var token;\n        token = self.lexer.lex() || 1;\n        if (typeof token !== \"number\") {\n            token = self.symbols_[token] || token;\n        }\n        return token;\n    }\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == \"undefined\") {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n        if (typeof action === \"undefined\" || !action.length || !action[0]) {\n            var errStr = \"\";\n            if (!recovering) {\n                expected = [];\n                for (p in table[state])\n                    if (this.terminals_[p] && p > 2) {\n                        expected.push(\"'\" + this.terminals_[p] + \"'\");\n                    }\n                if (this.lexer.showPosition) {\n                    errStr = \"Parse error on line \" + (yylineno + 1) + \":\\n\" + this.lexer.showPosition() + \"\\nExpecting \" + expected.join(\", \") + \", got '\" + (this.terminals_[symbol] || symbol) + \"'\";\n                } else {\n                    errStr = \"Parse error on line \" + (yylineno + 1) + \": Unexpected \" + (symbol == 1?\"end of input\":\"'\" + (this.terminals_[symbol] || symbol) + \"'\");\n                }\n                this.parseError(errStr, {text: this.lexer.match, token: this.terminals_[symbol] || symbol, line: this.lexer.yylineno, loc: yyloc, expected: expected});\n            }\n        }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error(\"Parse Error: multiple actions possible at state: \" + state + \", token: \" + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(this.lexer.yytext);\n            lstack.push(this.lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = this.lexer.yyleng;\n                yytext = this.lexer.yytext;\n                yylineno = this.lexer.yylineno;\n                yyloc = this.lexer.yylloc;\n                if (recovering > 0)\n                    recovering--;\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {first_line: lstack[lstack.length - (len || 1)].first_line, last_line: lstack[lstack.length - 1].last_line, first_column: lstack[lstack.length - (len || 1)].first_column, last_column: lstack[lstack.length - 1].last_column};\n            if (ranges) {\n                yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];\n            }\n            r = this.performAction.call(yyval, yytext, yyleng, yylineno, this.yy, action[1], vstack, lstack);\n            if (typeof r !== \"undefined\") {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}\n};\n/* Jison generated lexer */\nvar lexer = (function(){\nvar lexer = ({EOF:1,\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\nsetInput:function (input) {\n        this._input = input;\n        this._more = this._less = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {first_line:1,first_column:0,last_line:1,last_column:0};\n        if (this.options.ranges) this.yylloc.range = [0,0];\n        this.offset = 0;\n        return this;\n    },\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) this.yylloc.range[1]++;\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length-len-1);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length-1);\n        this.matched = this.matched.substr(0, this.matched.length-1);\n\n        if (lines.length-1) this.yylineno -= lines.length-1;\n        var r = this.yylloc.range;\n\n        this.yylloc = {first_line: this.yylloc.first_line,\n          last_line: this.yylineno+1,\n          first_column: this.yylloc.first_column,\n          last_column: lines ?\n              (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length:\n              this.yylloc.first_column - len\n          };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        return this;\n    },\nmore:function () {\n        this._more = true;\n        return this;\n    },\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20)+(next.length > 20 ? '...':'')).replace(/\\n/g, \"\");\n    },\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c+\"^\";\n    },\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) this.done = true;\n\n        var token,\n            match,\n            tempMatch,\n            index,\n            col,\n            lines;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i=0;i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (!this.options.flex) break;\n            }\n        }\n        if (match) {\n            lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n            if (lines) this.yylineno += lines.length;\n            this.yylloc = {first_line: this.yylloc.last_line,\n                           last_line: this.yylineno+1,\n                           first_column: this.yylloc.last_column,\n                           last_column: lines ? lines[lines.length-1].length-lines[lines.length-1].match(/\\r?\\n?/)[0].length : this.yylloc.last_column + match[0].length};\n            this.yytext += match[0];\n            this.match += match[0];\n            this.matches = match;\n            this.yyleng = this.yytext.length;\n            if (this.options.ranges) {\n                this.yylloc.range = [this.offset, this.offset += this.yyleng];\n            }\n            this._more = false;\n            this._input = this._input.slice(match[0].length);\n            this.matched += match[0];\n            token = this.performAction.call(this, this.yy, this, rules[index],this.conditionStack[this.conditionStack.length-1]);\n            if (this.done && this._input) this.done = false;\n            if (token) return token;\n            else return;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line '+(this.yylineno+1)+'. Unrecognized text.\\n'+this.showPosition(),\n                    {text: \"\", token: null, line: this.yylineno});\n        }\n    },\nlex:function lex () {\n        var r = this.next();\n        if (typeof r !== 'undefined') {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\npopState:function popState () {\n        return this.conditionStack.pop();\n    },\n_currentRules:function _currentRules () {\n        return this.conditions[this.conditionStack[this.conditionStack.length-1]].rules;\n    },\ntopState:function () {\n        return this.conditionStack[this.conditionStack.length-2];\n    },\npushState:function begin (condition) {\n        this.begin(condition);\n    }});\nlexer.options = {};\nlexer.performAction = function anonymous(yy,yy_,$avoiding_name_collisions,YY_START\n) {\n\n\nfunction strip(start, end) {\n  return yy_.yytext = yy_.yytext.substring(start, yy_.yyleng - end + start);\n}\n\n\nvar YYSTATE=YY_START\nswitch($avoiding_name_collisions) {\ncase 0:\n                                   if(yy_.yytext.slice(-2) === \"\\\\\\\\\") {\n                                     strip(0,1);\n                                     this.begin(\"mu\");\n                                   } else if(yy_.yytext.slice(-1) === \"\\\\\") {\n                                     strip(0,1);\n                                     this.begin(\"emu\");\n                                   } else {\n                                     this.begin(\"mu\");\n                                   }\n                                   if(yy_.yytext) return 15;\n                                 \nbreak;\ncase 1:return 15;\nbreak;\ncase 2:\n                                   this.popState();\n                                   return 15;\n                                 \nbreak;\ncase 3:this.begin('raw'); return 15;\nbreak;\ncase 4:\n                                  this.popState();\n                                  // Should be using `this.topState()` below, but it currently\n                                  // returns the second top instead of the first top. Opened an\n                                  // issue about it at https://github.com/zaach/jison/issues/291\n                                  if (this.conditionStack[this.conditionStack.length-1] === 'raw') {\n                                    return 15;\n                                  } else {\n                                    strip(5, 9);\n                                    return 'END_RAW_BLOCK';\n                                  }\n                                 \nbreak;\ncase 5: return 15; \nbreak;\ncase 6:\n  this.popState();\n  return 14;\n\nbreak;\ncase 7:return 65;\nbreak;\ncase 8:return 68;\nbreak;\ncase 9: return 19; \nbreak;\ncase 10:\n                                  this.popState();\n                                  this.begin('raw');\n                                  return 23;\n                                 \nbreak;\ncase 11:return 55;\nbreak;\ncase 12:return 60;\nbreak;\ncase 13:return 29;\nbreak;\ncase 14:return 47;\nbreak;\ncase 15:this.popState(); return 44;\nbreak;\ncase 16:this.popState(); return 44;\nbreak;\ncase 17:return 34;\nbreak;\ncase 18:return 39;\nbreak;\ncase 19:return 51;\nbreak;\ncase 20:return 48;\nbreak;\ncase 21:\n  this.unput(yy_.yytext);\n  this.popState();\n  this.begin('com');\n\nbreak;\ncase 22:\n  this.popState();\n  return 14;\n\nbreak;\ncase 23:return 48;\nbreak;\ncase 24:return 73;\nbreak;\ncase 25:return 72;\nbreak;\ncase 26:return 72;\nbreak;\ncase 27:return 87;\nbreak;\ncase 28:// ignore whitespace\nbreak;\ncase 29:this.popState(); return 54;\nbreak;\ncase 30:this.popState(); return 33;\nbreak;\ncase 31:yy_.yytext = strip(1,2).replace(/\\\\\"/g,'\"'); return 80;\nbreak;\ncase 32:yy_.yytext = strip(1,2).replace(/\\\\'/g,\"'\"); return 80;\nbreak;\ncase 33:return 85;\nbreak;\ncase 34:return 82;\nbreak;\ncase 35:return 82;\nbreak;\ncase 36:return 83;\nbreak;\ncase 37:return 84;\nbreak;\ncase 38:return 81;\nbreak;\ncase 39:return 75;\nbreak;\ncase 40:return 77;\nbreak;\ncase 41:return 72;\nbreak;\ncase 42:yy_.yytext = yy_.yytext.replace(/\\\\([\\\\\\]])/g,'$1'); return 72;\nbreak;\ncase 43:return 'INVALID';\nbreak;\ncase 44:return 5;\nbreak;\n}\n};\nlexer.rules = [/^(?:[^\\x00]*?(?=(\\{\\{)))/,/^(?:[^\\x00]+)/,/^(?:[^\\x00]{2,}?(?=(\\{\\{|\\\\\\{\\{|\\\\\\\\\\{\\{|$)))/,/^(?:\\{\\{\\{\\{(?=[^\\/]))/,/^(?:\\{\\{\\{\\{\\/[^\\s!\"#%-,\\.\\/;->@\\[-\\^`\\{-~]+(?=[=}\\s\\/.])\\}\\}\\}\\})/,/^(?:[^\\x00]+?(?=(\\{\\{\\{\\{)))/,/^(?:[\\s\\S]*?--(~)?\\}\\})/,/^(?:\\()/,/^(?:\\))/,/^(?:\\{\\{\\{\\{)/,/^(?:\\}\\}\\}\\})/,/^(?:\\{\\{(~)?>)/,/^(?:\\{\\{(~)?#>)/,/^(?:\\{\\{(~)?#\\*?)/,/^(?:\\{\\{(~)?\\/)/,/^(?:\\{\\{(~)?\\^\\s*(~)?\\}\\})/,/^(?:\\{\\{(~)?\\s*else\\s*(~)?\\}\\})/,/^(?:\\{\\{(~)?\\^)/,/^(?:\\{\\{(~)?\\s*else\\b)/,/^(?:\\{\\{(~)?\\{)/,/^(?:\\{\\{(~)?&)/,/^(?:\\{\\{(~)?!--)/,/^(?:\\{\\{(~)?![\\s\\S]*?\\}\\})/,/^(?:\\{\\{(~)?\\*?)/,/^(?:=)/,/^(?:\\.\\.)/,/^(?:\\.(?=([=~}\\s\\/.)|])))/,/^(?:[\\/.])/,/^(?:\\s+)/,/^(?:\\}(~)?\\}\\})/,/^(?:(~)?\\}\\})/,/^(?:\"(\\\\[\"]|[^\"])*\")/,/^(?:'(\\\\[']|[^'])*')/,/^(?:@)/,/^(?:true(?=([~}\\s)])))/,/^(?:false(?=([~}\\s)])))/,/^(?:undefined(?=([~}\\s)])))/,/^(?:null(?=([~}\\s)])))/,/^(?:-?[0-9]+(?:\\.[0-9]+)?(?=([~}\\s)])))/,/^(?:as\\s+\\|)/,/^(?:\\|)/,/^(?:([^\\s!\"#%-,\\.\\/;->@\\[-\\^`\\{-~]+(?=([=~}\\s\\/.)|]))))/,/^(?:\\[(\\\\\\]|[^\\]])*\\])/,/^(?:.)/,/^(?:$)/];\nlexer.conditions = {\"mu\":{\"rules\":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44],\"inclusive\":false},\"emu\":{\"rules\":[2],\"inclusive\":false},\"com\":{\"rules\":[6],\"inclusive\":false},\"raw\":{\"rules\":[3,4,5],\"inclusive\":false},\"INITIAL\":{\"rules\":[0,1,44],\"inclusive\":true}};\nreturn lexer;})()\nparser.lexer = lexer;\nfunction Parser () { this.yy = {}; }Parser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();export default handlebars;\n","import Visitor from './visitor';\n\nfunction WhitespaceControl(options = {}) {\n  this.options = options;\n}\nWhitespaceControl.prototype = new Visitor();\n\nWhitespaceControl.prototype.Program = function(program) {\n  const doStandalone = !this.options.ignoreStandalone;\n\n  let isRoot = !this.isRootSeen;\n  this.isRootSeen = true;\n\n  let body = program.body;\n  for (let i = 0, l = body.length; i < l; i++) {\n    let current = body[i],\n      strip = this.accept(current);\n\n    if (!strip) {\n      continue;\n    }\n\n    let _isPrevWhitespace = isPrevWhitespace(body, i, isRoot),\n      _isNextWhitespace = isNextWhitespace(body, i, isRoot),\n      openStandalone = strip.openStandalone && _isPrevWhitespace,\n      closeStandalone = strip.closeStandalone && _isNextWhitespace,\n      inlineStandalone =\n        strip.inlineStandalone && _isPrevWhitespace && _isNextWhitespace;\n\n    if (strip.close) {\n      omitRight(body, i, true);\n    }\n    if (strip.open) {\n      omitLeft(body, i, true);\n    }\n\n    if (doStandalone && inlineStandalone) {\n      omitRight(body, i);\n\n      if (omitLeft(body, i)) {\n        // If we are on a standalone node, save the indent info for partials\n        if (current.type === 'PartialStatement') {\n          // Pull out the whitespace from the final line\n          current.indent = /([ \\t]+$)/.exec(body[i - 1].original)[1];\n        }\n      }\n    }\n    if (doStandalone && openStandalone) {\n      omitRight((current.program || current.inverse).body);\n\n      // Strip out the previous content node if it's whitespace only\n      omitLeft(body, i);\n    }\n    if (doStandalone && closeStandalone) {\n      // Always strip the next node\n      omitRight(body, i);\n\n      omitLeft((current.inverse || current.program).body);\n    }\n  }\n\n  return program;\n};\n\nWhitespaceControl.prototype.BlockStatement = WhitespaceControl.prototype.DecoratorBlock = WhitespaceControl.prototype.PartialBlockStatement = function(\n  block\n) {\n  this.accept(block.program);\n  this.accept(block.inverse);\n\n  // Find the inverse program that is involed with whitespace stripping.\n  let program = block.program || block.inverse,\n    inverse = block.program && block.inverse,\n    firstInverse = inverse,\n    lastInverse = inverse;\n\n  if (inverse && inverse.chained) {\n    firstInverse = inverse.body[0].program;\n\n    // Walk the inverse chain to find the last inverse that is actually in the chain.\n    while (lastInverse.chained) {\n      lastInverse = lastInverse.body[lastInverse.body.length - 1].program;\n    }\n  }\n\n  let strip = {\n    open: block.openStrip.open,\n    close: block.closeStrip.close,\n\n    // Determine the standalone candiacy. Basically flag our content as being possibly standalone\n    // so our parent can determine if we actually are standalone\n    openStandalone: isNextWhitespace(program.body),\n    closeStandalone: isPrevWhitespace((firstInverse || program).body)\n  };\n\n  if (block.openStrip.close) {\n    omitRight(program.body, null, true);\n  }\n\n  if (inverse) {\n    let inverseStrip = block.inverseStrip;\n\n    if (inverseStrip.open) {\n      omitLeft(program.body, null, true);\n    }\n\n    if (inverseStrip.close) {\n      omitRight(firstInverse.body, null, true);\n    }\n    if (block.closeStrip.open) {\n      omitLeft(lastInverse.body, null, true);\n    }\n\n    // Find standalone else statments\n    if (\n      !this.options.ignoreStandalone &&\n      isPrevWhitespace(program.body) &&\n      isNextWhitespace(firstInverse.body)\n    ) {\n      omitLeft(program.body);\n      omitRight(firstInverse.body);\n    }\n  } else if (block.closeStrip.open) {\n    omitLeft(program.body, null, true);\n  }\n\n  return strip;\n};\n\nWhitespaceControl.prototype.Decorator = WhitespaceControl.prototype.MustacheStatement = function(\n  mustache\n) {\n  return mustache.strip;\n};\n\nWhitespaceControl.prototype.PartialStatement = WhitespaceControl.prototype.CommentStatement = function(\n  node\n) {\n  /* istanbul ignore next */\n  let strip = node.strip || {};\n  return {\n    inlineStandalone: true,\n    open: strip.open,\n    close: strip.close\n  };\n};\n\nfunction isPrevWhitespace(body, i, isRoot) {\n  if (i === undefined) {\n    i = body.length;\n  }\n\n  // Nodes that end with newlines are considered whitespace (but are special\n  // cased for strip operations)\n  let prev = body[i - 1],\n    sibling = body[i - 2];\n  if (!prev) {\n    return isRoot;\n  }\n\n  if (prev.type === 'ContentStatement') {\n    return (sibling || !isRoot ? /\\r?\\n\\s*?$/ : /(^|\\r?\\n)\\s*?$/).test(\n      prev.original\n    );\n  }\n}\nfunction isNextWhitespace(body, i, isRoot) {\n  if (i === undefined) {\n    i = -1;\n  }\n\n  let next = body[i + 1],\n    sibling = body[i + 2];\n  if (!next) {\n    return isRoot;\n  }\n\n  if (next.type === 'ContentStatement') {\n    return (sibling || !isRoot ? /^\\s*?\\r?\\n/ : /^\\s*?(\\r?\\n|$)/).test(\n      next.original\n    );\n  }\n}\n\n// Marks the node to the right of the position as omitted.\n// I.e. {{foo}}' ' will mark the ' ' node as omitted.\n//\n// If i is undefined, then the first child will be marked as such.\n//\n// If mulitple is truthy then all whitespace will be stripped out until non-whitespace\n// content is met.\nfunction omitRight(body, i, multiple) {\n  let current = body[i == null ? 0 : i + 1];\n  if (\n    !current ||\n    current.type !== 'ContentStatement' ||\n    (!multiple && current.rightStripped)\n  ) {\n    return;\n  }\n\n  let original = current.value;\n  current.value = current.value.replace(\n    multiple ? /^\\s+/ : /^[ \\t]*\\r?\\n?/,\n    ''\n  );\n  current.rightStripped = current.value !== original;\n}\n\n// Marks the node to the left of the position as omitted.\n// I.e. ' '{{foo}} will mark the ' ' node as omitted.\n//\n// If i is undefined then the last child will be marked as such.\n//\n// If mulitple is truthy then all whitespace will be stripped out until non-whitespace\n// content is met.\nfunction omitLeft(body, i, multiple) {\n  let current = body[i == null ? body.length - 1 : i - 1];\n  if (\n    !current ||\n    current.type !== 'ContentStatement' ||\n    (!multiple && current.leftStripped)\n  ) {\n    return;\n  }\n\n  // We omit the last node if it's whitespace only and not preceded by a non-content node.\n  let original = current.value;\n  current.value = current.value.replace(multiple ? /\\s+$/ : /[ \\t]+$/, '');\n  current.leftStripped = current.value !== original;\n  return current.leftStripped;\n}\n\nexport default WhitespaceControl;\n","import Exception from '../exception';\n\nfunction Visitor() {\n  this.parents = [];\n}\n\nVisitor.prototype = {\n  constructor: Visitor,\n  mutating: false,\n\n  // Visits a given value. If mutating, will replace the value if necessary.\n  acceptKey: function(node, name) {\n    let value = this.accept(node[name]);\n    if (this.mutating) {\n      // Hacky sanity check: This may have a few false positives for type for the helper\n      // methods but will generally do the right thing without a lot of overhead.\n      if (value && !Visitor.prototype[value.type]) {\n        throw new Exception(\n          'Unexpected node type \"' +\n            value.type +\n            '\" found when accepting ' +\n            name +\n            ' on ' +\n            node.type\n        );\n      }\n      node[name] = value;\n    }\n  },\n\n  // Performs an accept operation with added sanity check to ensure\n  // required keys are not removed.\n  acceptRequired: function(node, name) {\n    this.acceptKey(node, name);\n\n    if (!node[name]) {\n      throw new Exception(node.type + ' requires ' + name);\n    }\n  },\n\n  // Traverses a given array. If mutating, empty respnses will be removed\n  // for child elements.\n  acceptArray: function(array) {\n    for (let i = 0, l = array.length; i < l; i++) {\n      this.acceptKey(array, i);\n\n      if (!array[i]) {\n        array.splice(i, 1);\n        i--;\n        l--;\n      }\n    }\n  },\n\n  accept: function(object) {\n    if (!object) {\n      return;\n    }\n\n    /* istanbul ignore next: Sanity code */\n    if (!this[object.type]) {\n      throw new Exception('Unknown type: ' + object.type, object);\n    }\n\n    if (this.current) {\n      this.parents.unshift(this.current);\n    }\n    this.current = object;\n\n    let ret = this[object.type](object);\n\n    this.current = this.parents.shift();\n\n    if (!this.mutating || ret) {\n      return ret;\n    } else if (ret !== false) {\n      return object;\n    }\n  },\n\n  Program: function(program) {\n    this.acceptArray(program.body);\n  },\n\n  MustacheStatement: visitSubExpression,\n  Decorator: visitSubExpression,\n\n  BlockStatement: visitBlock,\n  DecoratorBlock: visitBlock,\n\n  PartialStatement: visitPartial,\n  PartialBlockStatement: function(partial) {\n    visitPartial.call(this, partial);\n\n    this.acceptKey(partial, 'program');\n  },\n\n  ContentStatement: function(/* content */) {},\n  CommentStatement: function(/* comment */) {},\n\n  SubExpression: visitSubExpression,\n\n  PathExpression: function(/* path */) {},\n\n  StringLiteral: function(/* string */) {},\n  NumberLiteral: function(/* number */) {},\n  BooleanLiteral: function(/* bool */) {},\n  UndefinedLiteral: function(/* literal */) {},\n  NullLiteral: function(/* literal */) {},\n\n  Hash: function(hash) {\n    this.acceptArray(hash.pairs);\n  },\n  HashPair: function(pair) {\n    this.acceptRequired(pair, 'value');\n  }\n};\n\nfunction visitSubExpression(mustache) {\n  this.acceptRequired(mustache, 'path');\n  this.acceptArray(mustache.params);\n  this.acceptKey(mustache, 'hash');\n}\nfunction visitBlock(block) {\n  visitSubExpression.call(this, block);\n\n  this.acceptKey(block, 'program');\n  this.acceptKey(block, 'inverse');\n}\nfunction visitPartial(partial) {\n  this.acceptRequired(partial, 'name');\n  this.acceptArray(partial.params);\n  this.acceptKey(partial, 'hash');\n}\n\nexport default Visitor;\n","import Exception from '../exception';\n\nfunction validateClose(open, close) {\n  close = close.path ? close.path.original : close;\n\n  if (open.path.original !== close) {\n    let errorNode = { loc: open.path.loc };\n\n    throw new Exception(\n      open.path.original + \" doesn't match \" + close,\n      errorNode\n    );\n  }\n}\n\nexport function SourceLocation(source, locInfo) {\n  this.source = source;\n  this.start = {\n    line: locInfo.first_line,\n    column: locInfo.first_column\n  };\n  this.end = {\n    line: locInfo.last_line,\n    column: locInfo.last_column\n  };\n}\n\nexport function id(token) {\n  if (/^\\[.*\\]$/.test(token)) {\n    return token.substring(1, token.length - 1);\n  } else {\n    return token;\n  }\n}\n\nexport function stripFlags(open, close) {\n  return {\n    open: open.charAt(2) === '~',\n    close: close.charAt(close.length - 3) === '~'\n  };\n}\n\nexport function stripComment(comment) {\n  return comment.replace(/^\\{\\{~?!-?-?/, '').replace(/-?-?~?\\}\\}$/, '');\n}\n\nexport function preparePath(data, parts, loc) {\n  loc = this.locInfo(loc);\n\n  let original = data ? '@' : '',\n    dig = [],\n    depth = 0;\n\n  for (let i = 0, l = parts.length; i < l; i++) {\n    let part = parts[i].part,\n      // If we have [] syntax then we do not treat path references as operators,\n      // i.e. foo.[this] resolves to approximately context.foo['this']\n      isLiteral = parts[i].original !== part;\n    original += (parts[i].separator || '') + part;\n\n    if (!isLiteral && (part === '..' || part === '.' || part === 'this')) {\n      if (dig.length > 0) {\n        throw new Exception('Invalid path: ' + original, { loc });\n      } else if (part === '..') {\n        depth++;\n      }\n    } else {\n      dig.push(part);\n    }\n  }\n\n  return {\n    type: 'PathExpression',\n    data,\n    depth,\n    parts: dig,\n    original,\n    loc\n  };\n}\n\nexport function prepareMustache(path, params, hash, open, strip, locInfo) {\n  // Must use charAt to support IE pre-10\n  let escapeFlag = open.charAt(3) || open.charAt(2),\n    escaped = escapeFlag !== '{' && escapeFlag !== '&';\n\n  let decorator = /\\*/.test(open);\n  return {\n    type: decorator ? 'Decorator' : 'MustacheStatement',\n    path,\n    params,\n    hash,\n    escaped,\n    strip,\n    loc: this.locInfo(locInfo)\n  };\n}\n\nexport function prepareRawBlock(openRawBlock, contents, close, locInfo) {\n  validateClose(openRawBlock, close);\n\n  locInfo = this.locInfo(locInfo);\n  let program = {\n    type: 'Program',\n    body: contents,\n    strip: {},\n    loc: locInfo\n  };\n\n  return {\n    type: 'BlockStatement',\n    path: openRawBlock.path,\n    params: openRawBlock.params,\n    hash: openRawBlock.hash,\n    program,\n    openStrip: {},\n    inverseStrip: {},\n    closeStrip: {},\n    loc: locInfo\n  };\n}\n\nexport function prepareBlock(\n  openBlock,\n  program,\n  inverseAndProgram,\n  close,\n  inverted,\n  locInfo\n) {\n  if (close && close.path) {\n    validateClose(openBlock, close);\n  }\n\n  let decorator = /\\*/.test(openBlock.open);\n\n  program.blockParams = openBlock.blockParams;\n\n  let inverse, inverseStrip;\n\n  if (inverseAndProgram) {\n    if (decorator) {\n      throw new Exception(\n        'Unexpected inverse block on decorator',\n        inverseAndProgram\n      );\n    }\n\n    if (inverseAndProgram.chain) {\n      inverseAndProgram.program.body[0].closeStrip = close.strip;\n    }\n\n    inverseStrip = inverseAndProgram.strip;\n    inverse = inverseAndProgram.program;\n  }\n\n  if (inverted) {\n    inverted = inverse;\n    inverse = program;\n    program = inverted;\n  }\n\n  return {\n    type: decorator ? 'DecoratorBlock' : 'BlockStatement',\n    path: openBlock.path,\n    params: openBlock.params,\n    hash: openBlock.hash,\n    program,\n    inverse,\n    openStrip: openBlock.strip,\n    inverseStrip,\n    closeStrip: close && close.strip,\n    loc: this.locInfo(locInfo)\n  };\n}\n\nexport function prepareProgram(statements, loc) {\n  if (!loc && statements.length) {\n    const firstLoc = statements[0].loc,\n      lastLoc = statements[statements.length - 1].loc;\n\n    /* istanbul ignore else */\n    if (firstLoc && lastLoc) {\n      loc = {\n        source: firstLoc.source,\n        start: {\n          line: firstLoc.start.line,\n          column: firstLoc.start.column\n        },\n        end: {\n          line: lastLoc.end.line,\n          column: lastLoc.end.column\n        }\n      };\n    }\n  }\n\n  return {\n    type: 'Program',\n    body: statements,\n    strip: {},\n    loc: loc\n  };\n}\n\nexport function preparePartialBlock(open, program, close, locInfo) {\n  validateClose(open, close);\n\n  return {\n    type: 'PartialBlockStatement',\n    name: open.path,\n    params: open.params,\n    hash: open.hash,\n    program,\n    openStrip: open.strip,\n    closeStrip: close && close.strip,\n    loc: this.locInfo(locInfo)\n  };\n}\n","/* eslint-disable new-cap */\n\nimport Exception from '../exception';\nimport { isArray, indexOf, extend } from '../utils';\nimport AST from './ast';\n\nconst slice = [].slice;\n\nexport function Compiler() {}\n\n// the foundHelper register will disambiguate helper lookup from finding a\n// function in a context. This is necessary for mustache compatibility, which\n// requires that context functions in blocks are evaluated by blockHelperMissing,\n// and then proceed as if the resulting value was provided to blockHelperMissing.\n\nCompiler.prototype = {\n  compiler: Compiler,\n\n  equals: function(other) {\n    let len = this.opcodes.length;\n    if (other.opcodes.length !== len) {\n      return false;\n    }\n\n    for (let i = 0; i < len; i++) {\n      let opcode = this.opcodes[i],\n        otherOpcode = other.opcodes[i];\n      if (\n        opcode.opcode !== otherOpcode.opcode ||\n        !argEquals(opcode.args, otherOpcode.args)\n      ) {\n        return false;\n      }\n    }\n\n    // We know that length is the same between the two arrays because they are directly tied\n    // to the opcode behavior above.\n    len = this.children.length;\n    for (let i = 0; i < len; i++) {\n      if (!this.children[i].equals(other.children[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  },\n\n  guid: 0,\n\n  compile: function(program, options) {\n    this.sourceNode = [];\n    this.opcodes = [];\n    this.children = [];\n    this.options = options;\n    this.stringParams = options.stringParams;\n    this.trackIds = options.trackIds;\n\n    options.blockParams = options.blockParams || [];\n\n    options.knownHelpers = extend(\n      Object.create(null),\n      {\n        helperMissing: true,\n        blockHelperMissing: true,\n        each: true,\n        if: true,\n        unless: true,\n        with: true,\n        log: true,\n        lookup: true\n      },\n      options.knownHelpers\n    );\n\n    return this.accept(program);\n  },\n\n  compileProgram: function(program) {\n    let childCompiler = new this.compiler(), // eslint-disable-line new-cap\n      result = childCompiler.compile(program, this.options),\n      guid = this.guid++;\n\n    this.usePartial = this.usePartial || result.usePartial;\n\n    this.children[guid] = result;\n    this.useDepths = this.useDepths || result.useDepths;\n\n    return guid;\n  },\n\n  accept: function(node) {\n    /* istanbul ignore next: Sanity code */\n    if (!this[node.type]) {\n      throw new Exception('Unknown type: ' + node.type, node);\n    }\n\n    this.sourceNode.unshift(node);\n    let ret = this[node.type](node);\n    this.sourceNode.shift();\n    return ret;\n  },\n\n  Program: function(program) {\n    this.options.blockParams.unshift(program.blockParams);\n\n    let body = program.body,\n      bodyLength = body.length;\n    for (let i = 0; i < bodyLength; i++) {\n      this.accept(body[i]);\n    }\n\n    this.options.blockParams.shift();\n\n    this.isSimple = bodyLength === 1;\n    this.blockParams = program.blockParams ? program.blockParams.length : 0;\n\n    return this;\n  },\n\n  BlockStatement: function(block) {\n    transformLiteralToPath(block);\n\n    let program = block.program,\n      inverse = block.inverse;\n\n    program = program && this.compileProgram(program);\n    inverse = inverse && this.compileProgram(inverse);\n\n    let type = this.classifySexpr(block);\n\n    if (type === 'helper') {\n      this.helperSexpr(block, program, inverse);\n    } else if (type === 'simple') {\n      this.simpleSexpr(block);\n\n      // now that the simple mustache is resolved, we need to\n      // evaluate it by executing `blockHelperMissing`\n      this.opcode('pushProgram', program);\n      this.opcode('pushProgram', inverse);\n      this.opcode('emptyHash');\n      this.opcode('blockValue', block.path.original);\n    } else {\n      this.ambiguousSexpr(block, program, inverse);\n\n      // now that the simple mustache is resolved, we need to\n      // evaluate it by executing `blockHelperMissing`\n      this.opcode('pushProgram', program);\n      this.opcode('pushProgram', inverse);\n      this.opcode('emptyHash');\n      this.opcode('ambiguousBlockValue');\n    }\n\n    this.opcode('append');\n  },\n\n  DecoratorBlock(decorator) {\n    let program = decorator.program && this.compileProgram(decorator.program);\n    let params = this.setupFullMustacheParams(decorator, program, undefined),\n      path = decorator.path;\n\n    this.useDecorators = true;\n    this.opcode('registerDecorator', params.length, path.original);\n  },\n\n  PartialStatement: function(partial) {\n    this.usePartial = true;\n\n    let program = partial.program;\n    if (program) {\n      program = this.compileProgram(partial.program);\n    }\n\n    let params = partial.params;\n    if (params.length > 1) {\n      throw new Exception(\n        'Unsupported number of partial arguments: ' + params.length,\n        partial\n      );\n    } else if (!params.length) {\n      if (this.options.explicitPartialContext) {\n        this.opcode('pushLiteral', 'undefined');\n      } else {\n        params.push({ type: 'PathExpression', parts: [], depth: 0 });\n      }\n    }\n\n    let partialName = partial.name.original,\n      isDynamic = partial.name.type === 'SubExpression';\n    if (isDynamic) {\n      this.accept(partial.name);\n    }\n\n    this.setupFullMustacheParams(partial, program, undefined, true);\n\n    let indent = partial.indent || '';\n    if (this.options.preventIndent && indent) {\n      this.opcode('appendContent', indent);\n      indent = '';\n    }\n\n    this.opcode('invokePartial', isDynamic, partialName, indent);\n    this.opcode('append');\n  },\n  PartialBlockStatement: function(partialBlock) {\n    this.PartialStatement(partialBlock);\n  },\n\n  MustacheStatement: function(mustache) {\n    this.SubExpression(mustache);\n\n    if (mustache.escaped && !this.options.noEscape) {\n      this.opcode('appendEscaped');\n    } else {\n      this.opcode('append');\n    }\n  },\n  Decorator(decorator) {\n    this.DecoratorBlock(decorator);\n  },\n\n  ContentStatement: function(content) {\n    if (content.value) {\n      this.opcode('appendContent', content.value);\n    }\n  },\n\n  CommentStatement: function() {},\n\n  SubExpression: function(sexpr) {\n    transformLiteralToPath(sexpr);\n    let type = this.classifySexpr(sexpr);\n\n    if (type === 'simple') {\n      this.simpleSexpr(sexpr);\n    } else if (type === 'helper') {\n      this.helperSexpr(sexpr);\n    } else {\n      this.ambiguousSexpr(sexpr);\n    }\n  },\n  ambiguousSexpr: function(sexpr, program, inverse) {\n    let path = sexpr.path,\n      name = path.parts[0],\n      isBlock = program != null || inverse != null;\n\n    this.opcode('getContext', path.depth);\n\n    this.opcode('pushProgram', program);\n    this.opcode('pushProgram', inverse);\n\n    path.strict = true;\n    this.accept(path);\n\n    this.opcode('invokeAmbiguous', name, isBlock);\n  },\n\n  simpleSexpr: function(sexpr) {\n    let path = sexpr.path;\n    path.strict = true;\n    this.accept(path);\n    this.opcode('resolvePossibleLambda');\n  },\n\n  helperSexpr: function(sexpr, program, inverse) {\n    let params = this.setupFullMustacheParams(sexpr, program, inverse),\n      path = sexpr.path,\n      name = path.parts[0];\n\n    if (this.options.knownHelpers[name]) {\n      this.opcode('invokeKnownHelper', params.length, name);\n    } else if (this.options.knownHelpersOnly) {\n      throw new Exception(\n        'You specified knownHelpersOnly, but used the unknown helper ' + name,\n        sexpr\n      );\n    } else {\n      path.strict = true;\n      path.falsy = true;\n\n      this.accept(path);\n      this.opcode(\n        'invokeHelper',\n        params.length,\n        path.original,\n        AST.helpers.simpleId(path)\n      );\n    }\n  },\n\n  PathExpression: function(path) {\n    this.addDepth(path.depth);\n    this.opcode('getContext', path.depth);\n\n    let name = path.parts[0],\n      scoped = AST.helpers.scopedId(path),\n      blockParamId = !path.depth && !scoped && this.blockParamIndex(name);\n\n    if (blockParamId) {\n      this.opcode('lookupBlockParam', blockParamId, path.parts);\n    } else if (!name) {\n      // Context reference, i.e. `{{foo .}}` or `{{foo ..}}`\n      this.opcode('pushContext');\n    } else if (path.data) {\n      this.options.data = true;\n      this.opcode('lookupData', path.depth, path.parts, path.strict);\n    } else {\n      this.opcode(\n        'lookupOnContext',\n        path.parts,\n        path.falsy,\n        path.strict,\n        scoped\n      );\n    }\n  },\n\n  StringLiteral: function(string) {\n    this.opcode('pushString', string.value);\n  },\n\n  NumberLiteral: function(number) {\n    this.opcode('pushLiteral', number.value);\n  },\n\n  BooleanLiteral: function(bool) {\n    this.opcode('pushLiteral', bool.value);\n  },\n\n  UndefinedLiteral: function() {\n    this.opcode('pushLiteral', 'undefined');\n  },\n\n  NullLiteral: function() {\n    this.opcode('pushLiteral', 'null');\n  },\n\n  Hash: function(hash) {\n    let pairs = hash.pairs,\n      i = 0,\n      l = pairs.length;\n\n    this.opcode('pushHash');\n\n    for (; i < l; i++) {\n      this.pushParam(pairs[i].value);\n    }\n    while (i--) {\n      this.opcode('assignToHash', pairs[i].key);\n    }\n    this.opcode('popHash');\n  },\n\n  // HELPERS\n  opcode: function(name) {\n    this.opcodes.push({\n      opcode: name,\n      args: slice.call(arguments, 1),\n      loc: this.sourceNode[0].loc\n    });\n  },\n\n  addDepth: function(depth) {\n    if (!depth) {\n      return;\n    }\n\n    this.useDepths = true;\n  },\n\n  classifySexpr: function(sexpr) {\n    let isSimple = AST.helpers.simpleId(sexpr.path);\n\n    let isBlockParam = isSimple && !!this.blockParamIndex(sexpr.path.parts[0]);\n\n    // a mustache is an eligible helper if:\n    // * its id is simple (a single part, not `this` or `..`)\n    let isHelper = !isBlockParam && AST.helpers.helperExpression(sexpr);\n\n    // if a mustache is an eligible helper but not a definite\n    // helper, it is ambiguous, and will be resolved in a later\n    // pass or at runtime.\n    let isEligible = !isBlockParam && (isHelper || isSimple);\n\n    // if ambiguous, we can possibly resolve the ambiguity now\n    // An eligible helper is one that does not have a complex path, i.e. `this.foo`, `../foo` etc.\n    if (isEligible && !isHelper) {\n      let name = sexpr.path.parts[0],\n        options = this.options;\n      if (options.knownHelpers[name]) {\n        isHelper = true;\n      } else if (options.knownHelpersOnly) {\n        isEligible = false;\n      }\n    }\n\n    if (isHelper) {\n      return 'helper';\n    } else if (isEligible) {\n      return 'ambiguous';\n    } else {\n      return 'simple';\n    }\n  },\n\n  pushParams: function(params) {\n    for (let i = 0, l = params.length; i < l; i++) {\n      this.pushParam(params[i]);\n    }\n  },\n\n  pushParam: function(val) {\n    let value = val.value != null ? val.value : val.original || '';\n\n    if (this.stringParams) {\n      if (value.replace) {\n        value = value.replace(/^(\\.?\\.\\/)*/g, '').replace(/\\//g, '.');\n      }\n\n      if (val.depth) {\n        this.addDepth(val.depth);\n      }\n      this.opcode('getContext', val.depth || 0);\n      this.opcode('pushStringParam', value, val.type);\n\n      if (val.type === 'SubExpression') {\n        // SubExpressions get evaluated and passed in\n        // in string params mode.\n        this.accept(val);\n      }\n    } else {\n      if (this.trackIds) {\n        let blockParamIndex;\n        if (val.parts && !AST.helpers.scopedId(val) && !val.depth) {\n          blockParamIndex = this.blockParamIndex(val.parts[0]);\n        }\n        if (blockParamIndex) {\n          let blockParamChild = val.parts.slice(1).join('.');\n          this.opcode('pushId', 'BlockParam', blockParamIndex, blockParamChild);\n        } else {\n          value = val.original || value;\n          if (value.replace) {\n            value = value\n              .replace(/^this(?:\\.|$)/, '')\n              .replace(/^\\.\\//, '')\n              .replace(/^\\.$/, '');\n          }\n\n          this.opcode('pushId', val.type, value);\n        }\n      }\n      this.accept(val);\n    }\n  },\n\n  setupFullMustacheParams: function(sexpr, program, inverse, omitEmpty) {\n    let params = sexpr.params;\n    this.pushParams(params);\n\n    this.opcode('pushProgram', program);\n    this.opcode('pushProgram', inverse);\n\n    if (sexpr.hash) {\n      this.accept(sexpr.hash);\n    } else {\n      this.opcode('emptyHash', omitEmpty);\n    }\n\n    return params;\n  },\n\n  blockParamIndex: function(name) {\n    for (\n      let depth = 0, len = this.options.blockParams.length;\n      depth < len;\n      depth++\n    ) {\n      let blockParams = this.options.blockParams[depth],\n        param = blockParams && indexOf(blockParams, name);\n      if (blockParams && param >= 0) {\n        return [depth, param];\n      }\n    }\n  }\n};\n\nexport function precompile(input, options, env) {\n  if (\n    input == null ||\n    (typeof input !== 'string' && input.type !== 'Program')\n  ) {\n    throw new Exception(\n      'You must pass a string or Handlebars AST to Handlebars.precompile. You passed ' +\n        input\n    );\n  }\n\n  options = options || {};\n  if (!('data' in options)) {\n    options.data = true;\n  }\n  if (options.compat) {\n    options.useDepths = true;\n  }\n\n  let ast = env.parse(input, options),\n    environment = new env.Compiler().compile(ast, options);\n  return new env.JavaScriptCompiler().compile(environment, options);\n}\n\nexport function compile(input, options = {}, env) {\n  if (\n    input == null ||\n    (typeof input !== 'string' && input.type !== 'Program')\n  ) {\n    throw new Exception(\n      'You must pass a string or Handlebars AST to Handlebars.compile. You passed ' +\n        input\n    );\n  }\n\n  options = extend({}, options);\n  if (!('data' in options)) {\n    options.data = true;\n  }\n  if (options.compat) {\n    options.useDepths = true;\n  }\n\n  let compiled;\n\n  function compileInput() {\n    let ast = env.parse(input, options),\n      environment = new env.Compiler().compile(ast, options),\n      templateSpec = new env.JavaScriptCompiler().compile(\n        environment,\n        options,\n        undefined,\n        true\n      );\n    return env.template(templateSpec);\n  }\n\n  // Template is only compiled on first use and cached after that point.\n  function ret(context, execOptions) {\n    if (!compiled) {\n      compiled = compileInput();\n    }\n    return compiled.call(this, context, execOptions);\n  }\n  ret._setup = function(setupOptions) {\n    if (!compiled) {\n      compiled = compileInput();\n    }\n    return compiled._setup(setupOptions);\n  };\n  ret._child = function(i, data, blockParams, depths) {\n    if (!compiled) {\n      compiled = compileInput();\n    }\n    return compiled._child(i, data, blockParams, depths);\n  };\n  return ret;\n}\n\nfunction argEquals(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (isArray(a) && isArray(b) && a.length === b.length) {\n    for (let i = 0; i < a.length; i++) {\n      if (!argEquals(a[i], b[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\nfunction transformLiteralToPath(sexpr) {\n  if (!sexpr.path.parts) {\n    let literal = sexpr.path;\n    // Casting to string here to make false and 0 literal values play nicely with the rest\n    // of the system.\n    sexpr.path = {\n      type: 'PathExpression',\n      data: false,\n      depth: 0,\n      parts: [literal.original + ''],\n      original: literal.original + '',\n      loc: literal.loc\n    };\n  }\n}\n","import { COMPILER_REVISION, REVISION_CHANGES } from '../base';\nimport Exception from '../exception';\nimport { isArray } from '../utils';\nimport CodeGen from './code-gen';\n\nfunction Literal(value) {\n  this.value = value;\n}\n\nfunction JavaScriptCompiler() {}\n\nJavaScriptCompiler.prototype = {\n  // PUBLIC API: You can override these methods in a subclass to provide\n  // alternative compiled forms for name lookup and buffering semantics\n  nameLookup: function(parent, name /*,  type */) {\n    return this.internalNameLookup(parent, name);\n  },\n  depthedLookup: function(name) {\n    return [\n      this.aliasable('container.lookup'),\n      '(depths, ',\n      JSON.stringify(name),\n      ')'\n    ];\n  },\n\n  compilerInfo: function() {\n    const revision = COMPILER_REVISION,\n      versions = REVISION_CHANGES[revision];\n    return [revision, versions];\n  },\n\n  appendToBuffer: function(source, location, explicit) {\n    // Force a source as this simplifies the merge logic.\n    if (!isArray(source)) {\n      source = [source];\n    }\n    source = this.source.wrap(source, location);\n\n    if (this.environment.isSimple) {\n      return ['return ', source, ';'];\n    } else if (explicit) {\n      // This is a case where the buffer operation occurs as a child of another\n      // construct, generally braces. We have to explicitly output these buffer\n      // operations to ensure that the emitted code goes in the correct location.\n      return ['buffer += ', source, ';'];\n    } else {\n      source.appendToBuffer = true;\n      return source;\n    }\n  },\n\n  initializeBuffer: function() {\n    return this.quotedString('');\n  },\n  // END PUBLIC API\n  internalNameLookup: function(parent, name) {\n    this.lookupPropertyFunctionIsUsed = true;\n    return ['lookupProperty(', parent, ',', JSON.stringify(name), ')'];\n  },\n\n  lookupPropertyFunctionIsUsed: false,\n\n  compile: function(environment, options, context, asObject) {\n    this.environment = environment;\n    this.options = options;\n    this.stringParams = this.options.stringParams;\n    this.trackIds = this.options.trackIds;\n    this.precompile = !asObject;\n\n    this.name = this.environment.name;\n    this.isChild = !!context;\n    this.context = context || {\n      decorators: [],\n      programs: [],\n      environments: []\n    };\n\n    this.preamble();\n\n    this.stackSlot = 0;\n    this.stackVars = [];\n    this.aliases = {};\n    this.registers = { list: [] };\n    this.hashes = [];\n    this.compileStack = [];\n    this.inlineStack = [];\n    this.blockParams = [];\n\n    this.compileChildren(environment, options);\n\n    this.useDepths =\n      this.useDepths ||\n      environment.useDepths ||\n      environment.useDecorators ||\n      this.options.compat;\n    this.useBlockParams = this.useBlockParams || environment.useBlockParams;\n\n    let opcodes = environment.opcodes,\n      opcode,\n      firstLoc,\n      i,\n      l;\n\n    for (i = 0, l = opcodes.length; i < l; i++) {\n      opcode = opcodes[i];\n\n      this.source.currentLocation = opcode.loc;\n      firstLoc = firstLoc || opcode.loc;\n      this[opcode.opcode].apply(this, opcode.args);\n    }\n\n    // Flush any trailing content that might be pending.\n    this.source.currentLocation = firstLoc;\n    this.pushSource('');\n\n    /* istanbul ignore next */\n    if (this.stackSlot || this.inlineStack.length || this.compileStack.length) {\n      throw new Exception('Compile completed with content left on stack');\n    }\n\n    if (!this.decorators.isEmpty()) {\n      this.useDecorators = true;\n\n      this.decorators.prepend([\n        'var decorators = container.decorators, ',\n        this.lookupPropertyFunctionVarDeclaration(),\n        ';\\n'\n      ]);\n      this.decorators.push('return fn;');\n\n      if (asObject) {\n        this.decorators = Function.apply(this, [\n          'fn',\n          'props',\n          'container',\n          'depth0',\n          'data',\n          'blockParams',\n          'depths',\n          this.decorators.merge()\n        ]);\n      } else {\n        this.decorators.prepend(\n          'function(fn, props, container, depth0, data, blockParams, depths) {\\n'\n        );\n        this.decorators.push('}\\n');\n        this.decorators = this.decorators.merge();\n      }\n    } else {\n      this.decorators = undefined;\n    }\n\n    let fn = this.createFunctionContext(asObject);\n    if (!this.isChild) {\n      let ret = {\n        compiler: this.compilerInfo(),\n        main: fn\n      };\n\n      if (this.decorators) {\n        ret.main_d = this.decorators; // eslint-disable-line camelcase\n        ret.useDecorators = true;\n      }\n\n      let { programs, decorators } = this.context;\n      for (i = 0, l = programs.length; i < l; i++) {\n        if (programs[i]) {\n          ret[i] = programs[i];\n          if (decorators[i]) {\n            ret[i + '_d'] = decorators[i];\n            ret.useDecorators = true;\n          }\n        }\n      }\n\n      if (this.environment.usePartial) {\n        ret.usePartial = true;\n      }\n      if (this.options.data) {\n        ret.useData = true;\n      }\n      if (this.useDepths) {\n        ret.useDepths = true;\n      }\n      if (this.useBlockParams) {\n        ret.useBlockParams = true;\n      }\n      if (this.options.compat) {\n        ret.compat = true;\n      }\n\n      if (!asObject) {\n        ret.compiler = JSON.stringify(ret.compiler);\n\n        this.source.currentLocation = { start: { line: 1, column: 0 } };\n        ret = this.objectLiteral(ret);\n\n        if (options.srcName) {\n          ret = ret.toStringWithSourceMap({ file: options.destName });\n          ret.map = ret.map && ret.map.toString();\n        } else {\n          ret = ret.toString();\n        }\n      } else {\n        ret.compilerOptions = this.options;\n      }\n\n      return ret;\n    } else {\n      return fn;\n    }\n  },\n\n  preamble: function() {\n    // track the last context pushed into place to allow skipping the\n    // getContext opcode when it would be a noop\n    this.lastContext = 0;\n    this.source = new CodeGen(this.options.srcName);\n    this.decorators = new CodeGen(this.options.srcName);\n  },\n\n  createFunctionContext: function(asObject) {\n    let varDeclarations = '';\n\n    let locals = this.stackVars.concat(this.registers.list);\n    if (locals.length > 0) {\n      varDeclarations += ', ' + locals.join(', ');\n    }\n\n    // Generate minimizer alias mappings\n    //\n    // When using true SourceNodes, this will update all references to the given alias\n    // as the source nodes are reused in situ. For the non-source node compilation mode,\n    // aliases will not be used, but this case is already being run on the client and\n    // we aren't concern about minimizing the template size.\n    let aliasCount = 0;\n    Object.keys(this.aliases).forEach(alias => {\n      let node = this.aliases[alias];\n      if (node.children && node.referenceCount > 1) {\n        varDeclarations += ', alias' + ++aliasCount + '=' + alias;\n        node.children[0] = 'alias' + aliasCount;\n      }\n    });\n\n    if (this.lookupPropertyFunctionIsUsed) {\n      varDeclarations += ', ' + this.lookupPropertyFunctionVarDeclaration();\n    }\n\n    let params = ['container', 'depth0', 'helpers', 'partials', 'data'];\n\n    if (this.useBlockParams || this.useDepths) {\n      params.push('blockParams');\n    }\n    if (this.useDepths) {\n      params.push('depths');\n    }\n\n    // Perform a second pass over the output to merge content when possible\n    let source = this.mergeSource(varDeclarations);\n\n    if (asObject) {\n      params.push(source);\n\n      return Function.apply(this, params);\n    } else {\n      return this.source.wrap([\n        'function(',\n        params.join(','),\n        ') {\\n  ',\n        source,\n        '}'\n      ]);\n    }\n  },\n  mergeSource: function(varDeclarations) {\n    let isSimple = this.environment.isSimple,\n      appendOnly = !this.forceBuffer,\n      appendFirst,\n      sourceSeen,\n      bufferStart,\n      bufferEnd;\n    this.source.each(line => {\n      if (line.appendToBuffer) {\n        if (bufferStart) {\n          line.prepend('  + ');\n        } else {\n          bufferStart = line;\n        }\n        bufferEnd = line;\n      } else {\n        if (bufferStart) {\n          if (!sourceSeen) {\n            appendFirst = true;\n          } else {\n            bufferStart.prepend('buffer += ');\n          }\n          bufferEnd.add(';');\n          bufferStart = bufferEnd = undefined;\n        }\n\n        sourceSeen = true;\n        if (!isSimple) {\n          appendOnly = false;\n        }\n      }\n    });\n\n    if (appendOnly) {\n      if (bufferStart) {\n        bufferStart.prepend('return ');\n        bufferEnd.add(';');\n      } else if (!sourceSeen) {\n        this.source.push('return \"\";');\n      }\n    } else {\n      varDeclarations +=\n        ', buffer = ' + (appendFirst ? '' : this.initializeBuffer());\n\n      if (bufferStart) {\n        bufferStart.prepend('return buffer + ');\n        bufferEnd.add(';');\n      } else {\n        this.source.push('return buffer;');\n      }\n    }\n\n    if (varDeclarations) {\n      this.source.prepend(\n        'var ' + varDeclarations.substring(2) + (appendFirst ? '' : ';\\n')\n      );\n    }\n\n    return this.source.merge();\n  },\n\n  lookupPropertyFunctionVarDeclaration: function() {\n    return `\n      lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    }\n    `.trim();\n  },\n\n  // [blockValue]\n  //\n  // On stack, before: hash, inverse, program, value\n  // On stack, after: return value of blockHelperMissing\n  //\n  // The purpose of this opcode is to take a block of the form\n  // `{{#this.foo}}...{{/this.foo}}`, resolve the value of `foo`, and\n  // replace it on the stack with the result of properly\n  // invoking blockHelperMissing.\n  blockValue: function(name) {\n    let blockHelperMissing = this.aliasable(\n        'container.hooks.blockHelperMissing'\n      ),\n      params = [this.contextName(0)];\n    this.setupHelperArgs(name, 0, params);\n\n    let blockName = this.popStack();\n    params.splice(1, 0, blockName);\n\n    this.push(this.source.functionCall(blockHelperMissing, 'call', params));\n  },\n\n  // [ambiguousBlockValue]\n  //\n  // On stack, before: hash, inverse, program, value\n  // Compiler value, before: lastHelper=value of last found helper, if any\n  // On stack, after, if no lastHelper: same as [blockValue]\n  // On stack, after, if lastHelper: value\n  ambiguousBlockValue: function() {\n    // We're being a bit cheeky and reusing the options value from the prior exec\n    let blockHelperMissing = this.aliasable(\n        'container.hooks.blockHelperMissing'\n      ),\n      params = [this.contextName(0)];\n    this.setupHelperArgs('', 0, params, true);\n\n    this.flushInline();\n\n    let current = this.topStack();\n    params.splice(1, 0, current);\n\n    this.pushSource([\n      'if (!',\n      this.lastHelper,\n      ') { ',\n      current,\n      ' = ',\n      this.source.functionCall(blockHelperMissing, 'call', params),\n      '}'\n    ]);\n  },\n\n  // [appendContent]\n  //\n  // On stack, before: ...\n  // On stack, after: ...\n  //\n  // Appends the string value of `content` to the current buffer\n  appendContent: function(content) {\n    if (this.pendingContent) {\n      content = this.pendingContent + content;\n    } else {\n      this.pendingLocation = this.source.currentLocation;\n    }\n\n    this.pendingContent = content;\n  },\n\n  // [append]\n  //\n  // On stack, before: value, ...\n  // On stack, after: ...\n  //\n  // Coerces `value` to a String and appends it to the current buffer.\n  //\n  // If `value` is truthy, or 0, it is coerced into a string and appended\n  // Otherwise, the empty string is appended\n  append: function() {\n    if (this.isInline()) {\n      this.replaceStack(current => [' != null ? ', current, ' : \"\"']);\n\n      this.pushSource(this.appendToBuffer(this.popStack()));\n    } else {\n      let local = this.popStack();\n      this.pushSource([\n        'if (',\n        local,\n        ' != null) { ',\n        this.appendToBuffer(local, undefined, true),\n        ' }'\n      ]);\n      if (this.environment.isSimple) {\n        this.pushSource([\n          'else { ',\n          this.appendToBuffer(\"''\", undefined, true),\n          ' }'\n        ]);\n      }\n    }\n  },\n\n  // [appendEscaped]\n  //\n  // On stack, before: value, ...\n  // On stack, after: ...\n  //\n  // Escape `value` and append it to the buffer\n  appendEscaped: function() {\n    this.pushSource(\n      this.appendToBuffer([\n        this.aliasable('container.escapeExpression'),\n        '(',\n        this.popStack(),\n        ')'\n      ])\n    );\n  },\n\n  // [getContext]\n  //\n  // On stack, before: ...\n  // On stack, after: ...\n  // Compiler value, after: lastContext=depth\n  //\n  // Set the value of the `lastContext` compiler value to the depth\n  getContext: function(depth) {\n    this.lastContext = depth;\n  },\n\n  // [pushContext]\n  //\n  // On stack, before: ...\n  // On stack, after: currentContext, ...\n  //\n  // Pushes the value of the current context onto the stack.\n  pushContext: function() {\n    this.pushStackLiteral(this.contextName(this.lastContext));\n  },\n\n  // [lookupOnContext]\n  //\n  // On stack, before: ...\n  // On stack, after: currentContext[name], ...\n  //\n  // Looks up the value of `name` on the current context and pushes\n  // it onto the stack.\n  lookupOnContext: function(parts, falsy, strict, scoped) {\n    let i = 0;\n\n    if (!scoped && this.options.compat && !this.lastContext) {\n      // The depthed query is expected to handle the undefined logic for the root level that\n      // is implemented below, so we evaluate that directly in compat mode\n      this.push(this.depthedLookup(parts[i++]));\n    } else {\n      this.pushContext();\n    }\n\n    this.resolvePath('context', parts, i, falsy, strict);\n  },\n\n  // [lookupBlockParam]\n  //\n  // On stack, before: ...\n  // On stack, after: blockParam[name], ...\n  //\n  // Looks up the value of `parts` on the given block param and pushes\n  // it onto the stack.\n  lookupBlockParam: function(blockParamId, parts) {\n    this.useBlockParams = true;\n\n    this.push(['blockParams[', blockParamId[0], '][', blockParamId[1], ']']);\n    this.resolvePath('context', parts, 1);\n  },\n\n  // [lookupData]\n  //\n  // On stack, before: ...\n  // On stack, after: data, ...\n  //\n  // Push the data lookup operator\n  lookupData: function(depth, parts, strict) {\n    if (!depth) {\n      this.pushStackLiteral('data');\n    } else {\n      this.pushStackLiteral('container.data(data, ' + depth + ')');\n    }\n\n    this.resolvePath('data', parts, 0, true, strict);\n  },\n\n  resolvePath: function(type, parts, i, falsy, strict) {\n    if (this.options.strict || this.options.assumeObjects) {\n      this.push(strictLookup(this.options.strict && strict, this, parts, type));\n      return;\n    }\n\n    let len = parts.length;\n    for (; i < len; i++) {\n      /* eslint-disable no-loop-func */\n      this.replaceStack(current => {\n        let lookup = this.nameLookup(current, parts[i], type);\n        // We want to ensure that zero and false are handled properly if the context (falsy flag)\n        // needs to have the special handling for these values.\n        if (!falsy) {\n          return [' != null ? ', lookup, ' : ', current];\n        } else {\n          // Otherwise we can use generic falsy handling\n          return [' && ', lookup];\n        }\n      });\n      /* eslint-enable no-loop-func */\n    }\n  },\n\n  // [resolvePossibleLambda]\n  //\n  // On stack, before: value, ...\n  // On stack, after: resolved value, ...\n  //\n  // If the `value` is a lambda, replace it on the stack by\n  // the return value of the lambda\n  resolvePossibleLambda: function() {\n    this.push([\n      this.aliasable('container.lambda'),\n      '(',\n      this.popStack(),\n      ', ',\n      this.contextName(0),\n      ')'\n    ]);\n  },\n\n  // [pushStringParam]\n  //\n  // On stack, before: ...\n  // On stack, after: string, currentContext, ...\n  //\n  // This opcode is designed for use in string mode, which\n  // provides the string value of a parameter along with its\n  // depth rather than resolving it immediately.\n  pushStringParam: function(string, type) {\n    this.pushContext();\n    this.pushString(type);\n\n    // If it's a subexpression, the string result\n    // will be pushed after this opcode.\n    if (type !== 'SubExpression') {\n      if (typeof string === 'string') {\n        this.pushString(string);\n      } else {\n        this.pushStackLiteral(string);\n      }\n    }\n  },\n\n  emptyHash: function(omitEmpty) {\n    if (this.trackIds) {\n      this.push('{}'); // hashIds\n    }\n    if (this.stringParams) {\n      this.push('{}'); // hashContexts\n      this.push('{}'); // hashTypes\n    }\n    this.pushStackLiteral(omitEmpty ? 'undefined' : '{}');\n  },\n  pushHash: function() {\n    if (this.hash) {\n      this.hashes.push(this.hash);\n    }\n    this.hash = { values: {}, types: [], contexts: [], ids: [] };\n  },\n  popHash: function() {\n    let hash = this.hash;\n    this.hash = this.hashes.pop();\n\n    if (this.trackIds) {\n      this.push(this.objectLiteral(hash.ids));\n    }\n    if (this.stringParams) {\n      this.push(this.objectLiteral(hash.contexts));\n      this.push(this.objectLiteral(hash.types));\n    }\n\n    this.push(this.objectLiteral(hash.values));\n  },\n\n  // [pushString]\n  //\n  // On stack, before: ...\n  // On stack, after: quotedString(string), ...\n  //\n  // Push a quoted version of `string` onto the stack\n  pushString: function(string) {\n    this.pushStackLiteral(this.quotedString(string));\n  },\n\n  // [pushLiteral]\n  //\n  // On stack, before: ...\n  // On stack, after: value, ...\n  //\n  // Pushes a value onto the stack. This operation prevents\n  // the compiler from creating a temporary variable to hold\n  // it.\n  pushLiteral: function(value) {\n    this.pushStackLiteral(value);\n  },\n\n  // [pushProgram]\n  //\n  // On stack, before: ...\n  // On stack, after: program(guid), ...\n  //\n  // Push a program expression onto the stack. This takes\n  // a compile-time guid and converts it into a runtime-accessible\n  // expression.\n  pushProgram: function(guid) {\n    if (guid != null) {\n      this.pushStackLiteral(this.programExpression(guid));\n    } else {\n      this.pushStackLiteral(null);\n    }\n  },\n\n  // [registerDecorator]\n  //\n  // On stack, before: hash, program, params..., ...\n  // On stack, after: ...\n  //\n  // Pops off the decorator's parameters, invokes the decorator,\n  // and inserts the decorator into the decorators list.\n  registerDecorator(paramSize, name) {\n    let foundDecorator = this.nameLookup('decorators', name, 'decorator'),\n      options = this.setupHelperArgs(name, paramSize);\n\n    this.decorators.push([\n      'fn = ',\n      this.decorators.functionCall(foundDecorator, '', [\n        'fn',\n        'props',\n        'container',\n        options\n      ]),\n      ' || fn;'\n    ]);\n  },\n\n  // [invokeHelper]\n  //\n  // On stack, before: hash, inverse, program, params..., ...\n  // On stack, after: result of helper invocation\n  //\n  // Pops off the helper's parameters, invokes the helper,\n  // and pushes the helper's return value onto the stack.\n  //\n  // If the helper is not found, `helperMissing` is called.\n  invokeHelper: function(paramSize, name, isSimple) {\n    let nonHelper = this.popStack(),\n      helper = this.setupHelper(paramSize, name);\n\n    let possibleFunctionCalls = [];\n\n    if (isSimple) {\n      // direct call to helper\n      possibleFunctionCalls.push(helper.name);\n    }\n    // call a function from the input object\n    possibleFunctionCalls.push(nonHelper);\n    if (!this.options.strict) {\n      possibleFunctionCalls.push(\n        this.aliasable('container.hooks.helperMissing')\n      );\n    }\n\n    let functionLookupCode = [\n      '(',\n      this.itemsSeparatedBy(possibleFunctionCalls, '||'),\n      ')'\n    ];\n    let functionCall = this.source.functionCall(\n      functionLookupCode,\n      'call',\n      helper.callParams\n    );\n    this.push(functionCall);\n  },\n\n  itemsSeparatedBy: function(items, separator) {\n    let result = [];\n    result.push(items[0]);\n    for (let i = 1; i < items.length; i++) {\n      result.push(separator, items[i]);\n    }\n    return result;\n  },\n  // [invokeKnownHelper]\n  //\n  // On stack, before: hash, inverse, program, params..., ...\n  // On stack, after: result of helper invocation\n  //\n  // This operation is used when the helper is known to exist,\n  // so a `helperMissing` fallback is not required.\n  invokeKnownHelper: function(paramSize, name) {\n    let helper = this.setupHelper(paramSize, name);\n    this.push(this.source.functionCall(helper.name, 'call', helper.callParams));\n  },\n\n  // [invokeAmbiguous]\n  //\n  // On stack, before: hash, inverse, program, params..., ...\n  // On stack, after: result of disambiguation\n  //\n  // This operation is used when an expression like `{{foo}}`\n  // is provided, but we don't know at compile-time whether it\n  // is a helper or a path.\n  //\n  // This operation emits more code than the other options,\n  // and can be avoided by passing the `knownHelpers` and\n  // `knownHelpersOnly` flags at compile-time.\n  invokeAmbiguous: function(name, helperCall) {\n    this.useRegister('helper');\n\n    let nonHelper = this.popStack();\n\n    this.emptyHash();\n    let helper = this.setupHelper(0, name, helperCall);\n\n    let helperName = (this.lastHelper = this.nameLookup(\n      'helpers',\n      name,\n      'helper'\n    ));\n\n    let lookup = ['(', '(helper = ', helperName, ' || ', nonHelper, ')'];\n    if (!this.options.strict) {\n      lookup[0] = '(helper = ';\n      lookup.push(\n        ' != null ? helper : ',\n        this.aliasable('container.hooks.helperMissing')\n      );\n    }\n\n    this.push([\n      '(',\n      lookup,\n      helper.paramsInit ? ['),(', helper.paramsInit] : [],\n      '),',\n      '(typeof helper === ',\n      this.aliasable('\"function\"'),\n      ' ? ',\n      this.source.functionCall('helper', 'call', helper.callParams),\n      ' : helper))'\n    ]);\n  },\n\n  // [invokePartial]\n  //\n  // On stack, before: context, ...\n  // On stack after: result of partial invocation\n  //\n  // This operation pops off a context, invokes a partial with that context,\n  // and pushes the result of the invocation back.\n  invokePartial: function(isDynamic, name, indent) {\n    let params = [],\n      options = this.setupParams(name, 1, params);\n\n    if (isDynamic) {\n      name = this.popStack();\n      delete options.name;\n    }\n\n    if (indent) {\n      options.indent = JSON.stringify(indent);\n    }\n    options.helpers = 'helpers';\n    options.partials = 'partials';\n    options.decorators = 'container.decorators';\n\n    if (!isDynamic) {\n      params.unshift(this.nameLookup('partials', name, 'partial'));\n    } else {\n      params.unshift(name);\n    }\n\n    if (this.options.compat) {\n      options.depths = 'depths';\n    }\n    options = this.objectLiteral(options);\n    params.push(options);\n\n    this.push(this.source.functionCall('container.invokePartial', '', params));\n  },\n\n  // [assignToHash]\n  //\n  // On stack, before: value, ..., hash, ...\n  // On stack, after: ..., hash, ...\n  //\n  // Pops a value off the stack and assigns it to the current hash\n  assignToHash: function(key) {\n    let value = this.popStack(),\n      context,\n      type,\n      id;\n\n    if (this.trackIds) {\n      id = this.popStack();\n    }\n    if (this.stringParams) {\n      type = this.popStack();\n      context = this.popStack();\n    }\n\n    let hash = this.hash;\n    if (context) {\n      hash.contexts[key] = context;\n    }\n    if (type) {\n      hash.types[key] = type;\n    }\n    if (id) {\n      hash.ids[key] = id;\n    }\n    hash.values[key] = value;\n  },\n\n  pushId: function(type, name, child) {\n    if (type === 'BlockParam') {\n      this.pushStackLiteral(\n        'blockParams[' +\n          name[0] +\n          '].path[' +\n          name[1] +\n          ']' +\n          (child ? ' + ' + JSON.stringify('.' + child) : '')\n      );\n    } else if (type === 'PathExpression') {\n      this.pushString(name);\n    } else if (type === 'SubExpression') {\n      this.pushStackLiteral('true');\n    } else {\n      this.pushStackLiteral('null');\n    }\n  },\n\n  // HELPERS\n\n  compiler: JavaScriptCompiler,\n\n  compileChildren: function(environment, options) {\n    let children = environment.children,\n      child,\n      compiler;\n\n    for (let i = 0, l = children.length; i < l; i++) {\n      child = children[i];\n      compiler = new this.compiler(); // eslint-disable-line new-cap\n\n      let existing = this.matchExistingProgram(child);\n\n      if (existing == null) {\n        this.context.programs.push(''); // Placeholder to prevent name conflicts for nested children\n        let index = this.context.programs.length;\n        child.index = index;\n        child.name = 'program' + index;\n        this.context.programs[index] = compiler.compile(\n          child,\n          options,\n          this.context,\n          !this.precompile\n        );\n        this.context.decorators[index] = compiler.decorators;\n        this.context.environments[index] = child;\n\n        this.useDepths = this.useDepths || compiler.useDepths;\n        this.useBlockParams = this.useBlockParams || compiler.useBlockParams;\n        child.useDepths = this.useDepths;\n        child.useBlockParams = this.useBlockParams;\n      } else {\n        child.index = existing.index;\n        child.name = 'program' + existing.index;\n\n        this.useDepths = this.useDepths || existing.useDepths;\n        this.useBlockParams = this.useBlockParams || existing.useBlockParams;\n      }\n    }\n  },\n  matchExistingProgram: function(child) {\n    for (let i = 0, len = this.context.environments.length; i < len; i++) {\n      let environment = this.context.environments[i];\n      if (environment && environment.equals(child)) {\n        return environment;\n      }\n    }\n  },\n\n  programExpression: function(guid) {\n    let child = this.environment.children[guid],\n      programParams = [child.index, 'data', child.blockParams];\n\n    if (this.useBlockParams || this.useDepths) {\n      programParams.push('blockParams');\n    }\n    if (this.useDepths) {\n      programParams.push('depths');\n    }\n\n    return 'container.program(' + programParams.join(', ') + ')';\n  },\n\n  useRegister: function(name) {\n    if (!this.registers[name]) {\n      this.registers[name] = true;\n      this.registers.list.push(name);\n    }\n  },\n\n  push: function(expr) {\n    if (!(expr instanceof Literal)) {\n      expr = this.source.wrap(expr);\n    }\n\n    this.inlineStack.push(expr);\n    return expr;\n  },\n\n  pushStackLiteral: function(item) {\n    this.push(new Literal(item));\n  },\n\n  pushSource: function(source) {\n    if (this.pendingContent) {\n      this.source.push(\n        this.appendToBuffer(\n          this.source.quotedString(this.pendingContent),\n          this.pendingLocation\n        )\n      );\n      this.pendingContent = undefined;\n    }\n\n    if (source) {\n      this.source.push(source);\n    }\n  },\n\n  replaceStack: function(callback) {\n    let prefix = ['('],\n      stack,\n      createdStack,\n      usedLiteral;\n\n    /* istanbul ignore next */\n    if (!this.isInline()) {\n      throw new Exception('replaceStack on non-inline');\n    }\n\n    // We want to merge the inline statement into the replacement statement via ','\n    let top = this.popStack(true);\n\n    if (top instanceof Literal) {\n      // Literals do not need to be inlined\n      stack = [top.value];\n      prefix = ['(', stack];\n      usedLiteral = true;\n    } else {\n      // Get or create the current stack name for use by the inline\n      createdStack = true;\n      let name = this.incrStack();\n\n      prefix = ['((', this.push(name), ' = ', top, ')'];\n      stack = this.topStack();\n    }\n\n    let item = callback.call(this, stack);\n\n    if (!usedLiteral) {\n      this.popStack();\n    }\n    if (createdStack) {\n      this.stackSlot--;\n    }\n    this.push(prefix.concat(item, ')'));\n  },\n\n  incrStack: function() {\n    this.stackSlot++;\n    if (this.stackSlot > this.stackVars.length) {\n      this.stackVars.push('stack' + this.stackSlot);\n    }\n    return this.topStackName();\n  },\n  topStackName: function() {\n    return 'stack' + this.stackSlot;\n  },\n  flushInline: function() {\n    let inlineStack = this.inlineStack;\n    this.inlineStack = [];\n    for (let i = 0, len = inlineStack.length; i < len; i++) {\n      let entry = inlineStack[i];\n      /* istanbul ignore if */\n      if (entry instanceof Literal) {\n        this.compileStack.push(entry);\n      } else {\n        let stack = this.incrStack();\n        this.pushSource([stack, ' = ', entry, ';']);\n        this.compileStack.push(stack);\n      }\n    }\n  },\n  isInline: function() {\n    return this.inlineStack.length;\n  },\n\n  popStack: function(wrapped) {\n    let inline = this.isInline(),\n      item = (inline ? this.inlineStack : this.compileStack).pop();\n\n    if (!wrapped && item instanceof Literal) {\n      return item.value;\n    } else {\n      if (!inline) {\n        /* istanbul ignore next */\n        if (!this.stackSlot) {\n          throw new Exception('Invalid stack pop');\n        }\n        this.stackSlot--;\n      }\n      return item;\n    }\n  },\n\n  topStack: function() {\n    let stack = this.isInline() ? this.inlineStack : this.compileStack,\n      item = stack[stack.length - 1];\n\n    /* istanbul ignore if */\n    if (item instanceof Literal) {\n      return item.value;\n    } else {\n      return item;\n    }\n  },\n\n  contextName: function(context) {\n    if (this.useDepths && context) {\n      return 'depths[' + context + ']';\n    } else {\n      return 'depth' + context;\n    }\n  },\n\n  quotedString: function(str) {\n    return this.source.quotedString(str);\n  },\n\n  objectLiteral: function(obj) {\n    return this.source.objectLiteral(obj);\n  },\n\n  aliasable: function(name) {\n    let ret = this.aliases[name];\n    if (ret) {\n      ret.referenceCount++;\n      return ret;\n    }\n\n    ret = this.aliases[name] = this.source.wrap(name);\n    ret.aliasable = true;\n    ret.referenceCount = 1;\n\n    return ret;\n  },\n\n  setupHelper: function(paramSize, name, blockHelper) {\n    let params = [],\n      paramsInit = this.setupHelperArgs(name, paramSize, params, blockHelper);\n    let foundHelper = this.nameLookup('helpers', name, 'helper'),\n      callContext = this.aliasable(\n        `${this.contextName(0)} != null ? ${this.contextName(\n          0\n        )} : (container.nullContext || {})`\n      );\n\n    return {\n      params: params,\n      paramsInit: paramsInit,\n      name: foundHelper,\n      callParams: [callContext].concat(params)\n    };\n  },\n\n  setupParams: function(helper, paramSize, params) {\n    let options = {},\n      contexts = [],\n      types = [],\n      ids = [],\n      objectArgs = !params,\n      param;\n\n    if (objectArgs) {\n      params = [];\n    }\n\n    options.name = this.quotedString(helper);\n    options.hash = this.popStack();\n\n    if (this.trackIds) {\n      options.hashIds = this.popStack();\n    }\n    if (this.stringParams) {\n      options.hashTypes = this.popStack();\n      options.hashContexts = this.popStack();\n    }\n\n    let inverse = this.popStack(),\n      program = this.popStack();\n\n    // Avoid setting fn and inverse if neither are set. This allows\n    // helpers to do a check for `if (options.fn)`\n    if (program || inverse) {\n      options.fn = program || 'container.noop';\n      options.inverse = inverse || 'container.noop';\n    }\n\n    // The parameters go on to the stack in order (making sure that they are evaluated in order)\n    // so we need to pop them off the stack in reverse order\n    let i = paramSize;\n    while (i--) {\n      param = this.popStack();\n      params[i] = param;\n\n      if (this.trackIds) {\n        ids[i] = this.popStack();\n      }\n      if (this.stringParams) {\n        types[i] = this.popStack();\n        contexts[i] = this.popStack();\n      }\n    }\n\n    if (objectArgs) {\n      options.args = this.source.generateArray(params);\n    }\n\n    if (this.trackIds) {\n      options.ids = this.source.generateArray(ids);\n    }\n    if (this.stringParams) {\n      options.types = this.source.generateArray(types);\n      options.contexts = this.source.generateArray(contexts);\n    }\n\n    if (this.options.data) {\n      options.data = 'data';\n    }\n    if (this.useBlockParams) {\n      options.blockParams = 'blockParams';\n    }\n    return options;\n  },\n\n  setupHelperArgs: function(helper, paramSize, params, useRegister) {\n    let options = this.setupParams(helper, paramSize, params);\n    options.loc = JSON.stringify(this.source.currentLocation);\n    options = this.objectLiteral(options);\n    if (useRegister) {\n      this.useRegister('options');\n      params.push('options');\n      return ['options=', options];\n    } else if (params) {\n      params.push(options);\n      return '';\n    } else {\n      return options;\n    }\n  }\n};\n\n(function() {\n  const reservedWords = (\n    'break else new var' +\n    ' case finally return void' +\n    ' catch for switch while' +\n    ' continue function this with' +\n    ' default if throw' +\n    ' delete in try' +\n    ' do instanceof typeof' +\n    ' abstract enum int short' +\n    ' boolean export interface static' +\n    ' byte extends long super' +\n    ' char final native synchronized' +\n    ' class float package throws' +\n    ' const goto private transient' +\n    ' debugger implements protected volatile' +\n    ' double import public let yield await' +\n    ' null true false'\n  ).split(' ');\n\n  const compilerWords = (JavaScriptCompiler.RESERVED_WORDS = {});\n\n  for (let i = 0, l = reservedWords.length; i < l; i++) {\n    compilerWords[reservedWords[i]] = true;\n  }\n})();\n\n/**\n * @deprecated May be removed in the next major version\n */\nJavaScriptCompiler.isValidJavaScriptVariableName = function(name) {\n  return (\n    !JavaScriptCompiler.RESERVED_WORDS[name] &&\n    /^[a-zA-Z_$][0-9a-zA-Z_$]*$/.test(name)\n  );\n};\n\nfunction strictLookup(requireTerminal, compiler, parts, type) {\n  let stack = compiler.popStack(),\n    i = 0,\n    len = parts.length;\n  if (requireTerminal) {\n    len--;\n  }\n\n  for (; i < len; i++) {\n    stack = compiler.nameLookup(stack, parts[i], type);\n  }\n\n  if (requireTerminal) {\n    return [\n      compiler.aliasable('container.strict'),\n      '(',\n      stack,\n      ', ',\n      compiler.quotedString(parts[i]),\n      ', ',\n      JSON.stringify(compiler.source.currentLocation),\n      ' )'\n    ];\n  } else {\n    return stack;\n  }\n}\n\nexport default JavaScriptCompiler;\n","/* global define */\nimport { isArray } from '../utils';\n\nlet SourceNode;\n\ntry {\n  /* istanbul ignore next */\n  if (typeof define !== 'function' || !define.amd) {\n    // We don't support this in AMD environments. For these environments, we asusme that\n    // they are running on the browser and thus have no need for the source-map library.\n    let SourceMap = require('source-map');\n    SourceNode = SourceMap.SourceNode;\n  }\n} catch (err) {\n  /* NOP */\n}\n\n/* istanbul ignore if: tested but not covered in istanbul due to dist build  */\nif (!SourceNode) {\n  SourceNode = function(line, column, srcFile, chunks) {\n    this.src = '';\n    if (chunks) {\n      this.add(chunks);\n    }\n  };\n  /* istanbul ignore next */\n  SourceNode.prototype = {\n    add: function(chunks) {\n      if (isArray(chunks)) {\n        chunks = chunks.join('');\n      }\n      this.src += chunks;\n    },\n    prepend: function(chunks) {\n      if (isArray(chunks)) {\n        chunks = chunks.join('');\n      }\n      this.src = chunks + this.src;\n    },\n    toStringWithSourceMap: function() {\n      return { code: this.toString() };\n    },\n    toString: function() {\n      return this.src;\n    }\n  };\n}\n\nfunction castChunk(chunk, codeGen, loc) {\n  if (isArray(chunk)) {\n    let ret = [];\n\n    for (let i = 0, len = chunk.length; i < len; i++) {\n      ret.push(codeGen.wrap(chunk[i], loc));\n    }\n    return ret;\n  } else if (typeof chunk === 'boolean' || typeof chunk === 'number') {\n    // Handle primitives that the SourceNode will throw up on\n    return chunk + '';\n  }\n  return chunk;\n}\n\nfunction CodeGen(srcFile) {\n  this.srcFile = srcFile;\n  this.source = [];\n}\n\nCodeGen.prototype = {\n  isEmpty() {\n    return !this.source.length;\n  },\n  prepend: function(source, loc) {\n    this.source.unshift(this.wrap(source, loc));\n  },\n  push: function(source, loc) {\n    this.source.push(this.wrap(source, loc));\n  },\n\n  merge: function() {\n    let source = this.empty();\n    this.each(function(line) {\n      source.add(['  ', line, '\\n']);\n    });\n    return source;\n  },\n\n  each: function(iter) {\n    for (let i = 0, len = this.source.length; i < len; i++) {\n      iter(this.source[i]);\n    }\n  },\n\n  empty: function() {\n    let loc = this.currentLocation || { start: {} };\n    return new SourceNode(loc.start.line, loc.start.column, this.srcFile);\n  },\n  wrap: function(chunk, loc = this.currentLocation || { start: {} }) {\n    if (chunk instanceof SourceNode) {\n      return chunk;\n    }\n\n    chunk = castChunk(chunk, this, loc);\n\n    return new SourceNode(\n      loc.start.line,\n      loc.start.column,\n      this.srcFile,\n      chunk\n    );\n  },\n\n  functionCall: function(fn, type, params) {\n    params = this.generateList(params);\n    return this.wrap([fn, type ? '.' + type + '(' : '(', params, ')']);\n  },\n\n  quotedString: function(str) {\n    return (\n      '\"' +\n      (str + '')\n        .replace(/\\\\/g, '\\\\\\\\')\n        .replace(/\"/g, '\\\\\"')\n        .replace(/\\n/g, '\\\\n')\n        .replace(/\\r/g, '\\\\r')\n        .replace(/\\u2028/g, '\\\\u2028') // Per Ecma-262 7.3 + 7.8.4\n        .replace(/\\u2029/g, '\\\\u2029') +\n      '\"'\n    );\n  },\n\n  objectLiteral: function(obj) {\n    let pairs = [];\n\n    Object.keys(obj).forEach(key => {\n      let value = castChunk(obj[key], this);\n      if (value !== 'undefined') {\n        pairs.push([this.quotedString(key), ':', value]);\n      }\n    });\n\n    let ret = this.generateList(pairs);\n    ret.prepend('{');\n    ret.add('}');\n    return ret;\n  },\n\n  generateList: function(entries) {\n    let ret = this.empty();\n\n    for (let i = 0, len = entries.length; i < len; i++) {\n      if (i) {\n        ret.add(',');\n      }\n\n      ret.add(castChunk(entries[i], this));\n    }\n\n    return ret;\n  },\n\n  generateArray: function(entries) {\n    let ret = this.generateList(entries);\n    ret.prepend('[');\n    ret.add(']');\n\n    return ret;\n  }\n};\n\nexport default CodeGen;\n","/*\n * Copyright 2009-2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE.txt or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nexports.SourceMapGenerator = require('./lib/source-map-generator').SourceMapGenerator;\nexports.SourceMapConsumer = require('./lib/source-map-consumer').SourceMapConsumer;\nexports.SourceNode = require('./lib/source-node').SourceNode;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar base64VLQ = require('./base64-vlq');\nvar util = require('./util');\nvar ArraySet = require('./array-set').ArraySet;\nvar MappingList = require('./mapping-list').MappingList;\n\n/**\n * An instance of the SourceMapGenerator represents a source map which is\n * being built incrementally. You may pass an object with the following\n * properties:\n *\n *   - file: The filename of the generated source.\n *   - sourceRoot: A root for all relative URLs in this source map.\n */\nfunction SourceMapGenerator(aArgs) {\n  if (!aArgs) {\n    aArgs = {};\n  }\n  this._file = util.getArg(aArgs, 'file', null);\n  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n  this._mappings = new MappingList();\n  this._sourcesContents = null;\n}\n\nSourceMapGenerator.prototype._version = 3;\n\n/**\n * Creates a new SourceMapGenerator based on a SourceMapConsumer\n *\n * @param aSourceMapConsumer The SourceMap.\n */\nSourceMapGenerator.fromSourceMap =\n  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n    var sourceRoot = aSourceMapConsumer.sourceRoot;\n    var generator = new SourceMapGenerator({\n      file: aSourceMapConsumer.file,\n      sourceRoot: sourceRoot\n    });\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      var newMapping = {\n        generated: {\n          line: mapping.generatedLine,\n          column: mapping.generatedColumn\n        }\n      };\n\n      if (mapping.source != null) {\n        newMapping.source = mapping.source;\n        if (sourceRoot != null) {\n          newMapping.source = util.relative(sourceRoot, newMapping.source);\n        }\n\n        newMapping.original = {\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        };\n\n        if (mapping.name != null) {\n          newMapping.name = mapping.name;\n        }\n      }\n\n      generator.addMapping(newMapping);\n    });\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var sourceRelative = sourceFile;\n      if (sourceRoot !== null) {\n        sourceRelative = util.relative(sourceRoot, sourceFile);\n      }\n\n      if (!generator._sources.has(sourceRelative)) {\n        generator._sources.add(sourceRelative);\n      }\n\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        generator.setSourceContent(sourceFile, content);\n      }\n    });\n    return generator;\n  };\n\n/**\n * Add a single mapping from original source line and column to the generated\n * source's line and column for this source map being created. The mapping\n * object should have the following properties:\n *\n *   - generated: An object with the generated line and column positions.\n *   - original: An object with the original line and column positions.\n *   - source: The original source file (relative to the sourceRoot).\n *   - name: An optional original token name for this mapping.\n */\nSourceMapGenerator.prototype.addMapping =\n  function SourceMapGenerator_addMapping(aArgs) {\n    var generated = util.getArg(aArgs, 'generated');\n    var original = util.getArg(aArgs, 'original', null);\n    var source = util.getArg(aArgs, 'source', null);\n    var name = util.getArg(aArgs, 'name', null);\n\n    if (!this._skipValidation) {\n      this._validateMapping(generated, original, source, name);\n    }\n\n    if (source != null) {\n      source = String(source);\n      if (!this._sources.has(source)) {\n        this._sources.add(source);\n      }\n    }\n\n    if (name != null) {\n      name = String(name);\n      if (!this._names.has(name)) {\n        this._names.add(name);\n      }\n    }\n\n    this._mappings.add({\n      generatedLine: generated.line,\n      generatedColumn: generated.column,\n      originalLine: original != null && original.line,\n      originalColumn: original != null && original.column,\n      source: source,\n      name: name\n    });\n  };\n\n/**\n * Set the source content for a source file.\n */\nSourceMapGenerator.prototype.setSourceContent =\n  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n    var source = aSourceFile;\n    if (this._sourceRoot != null) {\n      source = util.relative(this._sourceRoot, source);\n    }\n\n    if (aSourceContent != null) {\n      // Add the source content to the _sourcesContents map.\n      // Create a new _sourcesContents map if the property is null.\n      if (!this._sourcesContents) {\n        this._sourcesContents = Object.create(null);\n      }\n      this._sourcesContents[util.toSetString(source)] = aSourceContent;\n    } else if (this._sourcesContents) {\n      // Remove the source file from the _sourcesContents map.\n      // If the _sourcesContents map is empty, set the property to null.\n      delete this._sourcesContents[util.toSetString(source)];\n      if (Object.keys(this._sourcesContents).length === 0) {\n        this._sourcesContents = null;\n      }\n    }\n  };\n\n/**\n * Applies the mappings of a sub-source-map for a specific source file to the\n * source map being generated. Each mapping to the supplied source file is\n * rewritten using the supplied source map. Note: The resolution for the\n * resulting mappings is the minimium of this map and the supplied map.\n *\n * @param aSourceMapConsumer The source map to be applied.\n * @param aSourceFile Optional. The filename of the source file.\n *        If omitted, SourceMapConsumer's file property will be used.\n * @param aSourceMapPath Optional. The dirname of the path to the source map\n *        to be applied. If relative, it is relative to the SourceMapConsumer.\n *        This parameter is needed when the two source maps aren't in the same\n *        directory, and the source map to be applied contains relative source\n *        paths. If so, those relative source paths need to be rewritten\n *        relative to the SourceMapGenerator.\n */\nSourceMapGenerator.prototype.applySourceMap =\n  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n    var sourceFile = aSourceFile;\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\n    if (aSourceFile == null) {\n      if (aSourceMapConsumer.file == null) {\n        throw new Error(\n          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\n          'or the source map\\'s \"file\" property. Both were omitted.'\n        );\n      }\n      sourceFile = aSourceMapConsumer.file;\n    }\n    var sourceRoot = this._sourceRoot;\n    // Make \"sourceFile\" relative if an absolute Url is passed.\n    if (sourceRoot != null) {\n      sourceFile = util.relative(sourceRoot, sourceFile);\n    }\n    // Applying the SourceMap can add and remove items from the sources and\n    // the names array.\n    var newSources = new ArraySet();\n    var newNames = new ArraySet();\n\n    // Find mappings for the \"sourceFile\"\n    this._mappings.unsortedForEach(function (mapping) {\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\n        // Check if it can be mapped by the source map, then update the mapping.\n        var original = aSourceMapConsumer.originalPositionFor({\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        });\n        if (original.source != null) {\n          // Copy mapping\n          mapping.source = original.source;\n          if (aSourceMapPath != null) {\n            mapping.source = util.join(aSourceMapPath, mapping.source)\n          }\n          if (sourceRoot != null) {\n            mapping.source = util.relative(sourceRoot, mapping.source);\n          }\n          mapping.originalLine = original.line;\n          mapping.originalColumn = original.column;\n          if (original.name != null) {\n            mapping.name = original.name;\n          }\n        }\n      }\n\n      var source = mapping.source;\n      if (source != null && !newSources.has(source)) {\n        newSources.add(source);\n      }\n\n      var name = mapping.name;\n      if (name != null && !newNames.has(name)) {\n        newNames.add(name);\n      }\n\n    }, this);\n    this._sources = newSources;\n    this._names = newNames;\n\n    // Copy sourcesContents of applied map.\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aSourceMapPath != null) {\n          sourceFile = util.join(aSourceMapPath, sourceFile);\n        }\n        if (sourceRoot != null) {\n          sourceFile = util.relative(sourceRoot, sourceFile);\n        }\n        this.setSourceContent(sourceFile, content);\n      }\n    }, this);\n  };\n\n/**\n * A mapping can have one of the three levels of data:\n *\n *   1. Just the generated position.\n *   2. The Generated position, original position, and original source.\n *   3. Generated and original position, original source, as well as a name\n *      token.\n *\n * To maintain consistency, we validate that any new mapping being added falls\n * in to one of these categories.\n */\nSourceMapGenerator.prototype._validateMapping =\n  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\n                                              aName) {\n    // When aOriginal is truthy but has empty values for .line and .column,\n    // it is most likely a programmer error. In this case we throw a very\n    // specific error message to try to guide them the right way.\n    // For example: https://github.com/Polymer/polymer-bundler/pull/519\n    if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {\n        throw new Error(\n            'original.line and original.column are not numbers -- you probably meant to omit ' +\n            'the original mapping entirely and only map the generated position. If so, pass ' +\n            'null for the original mapping instead of an object with empty or null values.'\n        );\n    }\n\n    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n        && aGenerated.line > 0 && aGenerated.column >= 0\n        && !aOriginal && !aSource && !aName) {\n      // Case 1.\n      return;\n    }\n    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n             && aOriginal && 'line' in aOriginal && 'column' in aOriginal\n             && aGenerated.line > 0 && aGenerated.column >= 0\n             && aOriginal.line > 0 && aOriginal.column >= 0\n             && aSource) {\n      // Cases 2 and 3.\n      return;\n    }\n    else {\n      throw new Error('Invalid mapping: ' + JSON.stringify({\n        generated: aGenerated,\n        source: aSource,\n        original: aOriginal,\n        name: aName\n      }));\n    }\n  };\n\n/**\n * Serialize the accumulated mappings in to the stream of base 64 VLQs\n * specified by the source map format.\n */\nSourceMapGenerator.prototype._serializeMappings =\n  function SourceMapGenerator_serializeMappings() {\n    var previousGeneratedColumn = 0;\n    var previousGeneratedLine = 1;\n    var previousOriginalColumn = 0;\n    var previousOriginalLine = 0;\n    var previousName = 0;\n    var previousSource = 0;\n    var result = '';\n    var next;\n    var mapping;\n    var nameIdx;\n    var sourceIdx;\n\n    var mappings = this._mappings.toArray();\n    for (var i = 0, len = mappings.length; i < len; i++) {\n      mapping = mappings[i];\n      next = ''\n\n      if (mapping.generatedLine !== previousGeneratedLine) {\n        previousGeneratedColumn = 0;\n        while (mapping.generatedLine !== previousGeneratedLine) {\n          next += ';';\n          previousGeneratedLine++;\n        }\n      }\n      else {\n        if (i > 0) {\n          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n            continue;\n          }\n          next += ',';\n        }\n      }\n\n      next += base64VLQ.encode(mapping.generatedColumn\n                                 - previousGeneratedColumn);\n      previousGeneratedColumn = mapping.generatedColumn;\n\n      if (mapping.source != null) {\n        sourceIdx = this._sources.indexOf(mapping.source);\n        next += base64VLQ.encode(sourceIdx - previousSource);\n        previousSource = sourceIdx;\n\n        // lines are stored 0-based in SourceMap spec version 3\n        next += base64VLQ.encode(mapping.originalLine - 1\n                                   - previousOriginalLine);\n        previousOriginalLine = mapping.originalLine - 1;\n\n        next += base64VLQ.encode(mapping.originalColumn\n                                   - previousOriginalColumn);\n        previousOriginalColumn = mapping.originalColumn;\n\n        if (mapping.name != null) {\n          nameIdx = this._names.indexOf(mapping.name);\n          next += base64VLQ.encode(nameIdx - previousName);\n          previousName = nameIdx;\n        }\n      }\n\n      result += next;\n    }\n\n    return result;\n  };\n\nSourceMapGenerator.prototype._generateSourcesContent =\n  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n    return aSources.map(function (source) {\n      if (!this._sourcesContents) {\n        return null;\n      }\n      if (aSourceRoot != null) {\n        source = util.relative(aSourceRoot, source);\n      }\n      var key = util.toSetString(source);\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\n        ? this._sourcesContents[key]\n        : null;\n    }, this);\n  };\n\n/**\n * Externalize the source map.\n */\nSourceMapGenerator.prototype.toJSON =\n  function SourceMapGenerator_toJSON() {\n    var map = {\n      version: this._version,\n      sources: this._sources.toArray(),\n      names: this._names.toArray(),\n      mappings: this._serializeMappings()\n    };\n    if (this._file != null) {\n      map.file = this._file;\n    }\n    if (this._sourceRoot != null) {\n      map.sourceRoot = this._sourceRoot;\n    }\n    if (this._sourcesContents) {\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n    }\n\n    return map;\n  };\n\n/**\n * Render the source map being generated to a string.\n */\nSourceMapGenerator.prototype.toString =\n  function SourceMapGenerator_toString() {\n    return JSON.stringify(this.toJSON());\n  };\n\nexports.SourceMapGenerator = SourceMapGenerator;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar base64 = require('./base64');\n\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nvar VLQ_BASE_SHIFT = 5;\n\n// binary: 100000\nvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n// binary: 011111\nvar VLQ_BASE_MASK = VLQ_BASE - 1;\n\n// binary: 100000\nvar VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n */\nfunction toVLQSigned(aValue) {\n  return aValue < 0\n    ? ((-aValue) << 1) + 1\n    : (aValue << 1) + 0;\n}\n\n/**\n * Converts to a two-complement value from a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n */\nfunction fromVLQSigned(aValue) {\n  var isNegative = (aValue & 1) === 1;\n  var shifted = aValue >> 1;\n  return isNegative\n    ? -shifted\n    : shifted;\n}\n\n/**\n * Returns the base 64 VLQ encoded value.\n */\nexports.encode = function base64VLQ_encode(aValue) {\n  var encoded = \"\";\n  var digit;\n\n  var vlq = toVLQSigned(aValue);\n\n  do {\n    digit = vlq & VLQ_BASE_MASK;\n    vlq >>>= VLQ_BASE_SHIFT;\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make sure the\n      // continuation bit is marked.\n      digit |= VLQ_CONTINUATION_BIT;\n    }\n    encoded += base64.encode(digit);\n  } while (vlq > 0);\n\n  return encoded;\n};\n\n/**\n * Decodes the next base 64 VLQ value from the given string and returns the\n * value and the rest of the string via the out parameter.\n */\nexports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\n  var strLen = aStr.length;\n  var result = 0;\n  var shift = 0;\n  var continuation, digit;\n\n  do {\n    if (aIndex >= strLen) {\n      throw new Error(\"Expected more digits in base 64 VLQ value.\");\n    }\n\n    digit = base64.decode(aStr.charCodeAt(aIndex++));\n    if (digit === -1) {\n      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\n    }\n\n    continuation = !!(digit & VLQ_CONTINUATION_BIT);\n    digit &= VLQ_BASE_MASK;\n    result = result + (digit << shift);\n    shift += VLQ_BASE_SHIFT;\n  } while (continuation);\n\n  aOutParam.value = fromVLQSigned(result);\n  aOutParam.rest = aIndex;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\nexports.encode = function (number) {\n  if (0 <= number && number < intToCharMap.length) {\n    return intToCharMap[number];\n  }\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\n};\n\n/**\n * Decode a single base 64 character code digit to an integer. Returns -1 on\n * failure.\n */\nexports.decode = function (charCode) {\n  var bigA = 65;     // 'A'\n  var bigZ = 90;     // 'Z'\n\n  var littleA = 97;  // 'a'\n  var littleZ = 122; // 'z'\n\n  var zero = 48;     // '0'\n  var nine = 57;     // '9'\n\n  var plus = 43;     // '+'\n  var slash = 47;    // '/'\n\n  var littleOffset = 26;\n  var numberOffset = 52;\n\n  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n  if (bigA <= charCode && charCode <= bigZ) {\n    return (charCode - bigA);\n  }\n\n  // 26 - 51: abcdefghijklmnopqrstuvwxyz\n  if (littleA <= charCode && charCode <= littleZ) {\n    return (charCode - littleA + littleOffset);\n  }\n\n  // 52 - 61: 0123456789\n  if (zero <= charCode && charCode <= nine) {\n    return (charCode - zero + numberOffset);\n  }\n\n  // 62: +\n  if (charCode == plus) {\n    return 62;\n  }\n\n  // 63: /\n  if (charCode == slash) {\n    return 63;\n  }\n\n  // Invalid base64 digit.\n  return -1;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * This is a helper function for getting values from parameter/options\n * objects.\n *\n * @param args The object we are extracting values from\n * @param name The name of the property we are getting.\n * @param defaultValue An optional value to return if the property is missing\n * from the object. If this is not specified and the property is missing, an\n * error will be thrown.\n */\nfunction getArg(aArgs, aName, aDefaultValue) {\n  if (aName in aArgs) {\n    return aArgs[aName];\n  } else if (arguments.length === 3) {\n    return aDefaultValue;\n  } else {\n    throw new Error('\"' + aName + '\" is a required argument.');\n  }\n}\nexports.getArg = getArg;\n\nvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)(?::(\\d+))?(.*)$/;\nvar dataUrlRegexp = /^data:.+\\,.+$/;\n\nfunction urlParse(aUrl) {\n  var match = aUrl.match(urlRegexp);\n  if (!match) {\n    return null;\n  }\n  return {\n    scheme: match[1],\n    auth: match[2],\n    host: match[3],\n    port: match[4],\n    path: match[5]\n  };\n}\nexports.urlParse = urlParse;\n\nfunction urlGenerate(aParsedUrl) {\n  var url = '';\n  if (aParsedUrl.scheme) {\n    url += aParsedUrl.scheme + ':';\n  }\n  url += '//';\n  if (aParsedUrl.auth) {\n    url += aParsedUrl.auth + '@';\n  }\n  if (aParsedUrl.host) {\n    url += aParsedUrl.host;\n  }\n  if (aParsedUrl.port) {\n    url += \":\" + aParsedUrl.port\n  }\n  if (aParsedUrl.path) {\n    url += aParsedUrl.path;\n  }\n  return url;\n}\nexports.urlGenerate = urlGenerate;\n\n/**\n * Normalizes a path, or the path portion of a URL:\n *\n * - Replaces consecutive slashes with one slash.\n * - Removes unnecessary '.' parts.\n * - Removes unnecessary '<dir>/..' parts.\n *\n * Based on code in the Node.js 'path' core module.\n *\n * @param aPath The path or url to normalize.\n */\nfunction normalize(aPath) {\n  var path = aPath;\n  var url = urlParse(aPath);\n  if (url) {\n    if (!url.path) {\n      return aPath;\n    }\n    path = url.path;\n  }\n  var isAbsolute = exports.isAbsolute(path);\n\n  var parts = path.split(/\\/+/);\n  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n    part = parts[i];\n    if (part === '.') {\n      parts.splice(i, 1);\n    } else if (part === '..') {\n      up++;\n    } else if (up > 0) {\n      if (part === '') {\n        // The first part is blank if the path is absolute. Trying to go\n        // above the root is a no-op. Therefore we can remove all '..' parts\n        // directly after the root.\n        parts.splice(i + 1, up);\n        up = 0;\n      } else {\n        parts.splice(i, 2);\n        up--;\n      }\n    }\n  }\n  path = parts.join('/');\n\n  if (path === '') {\n    path = isAbsolute ? '/' : '.';\n  }\n\n  if (url) {\n    url.path = path;\n    return urlGenerate(url);\n  }\n  return path;\n}\nexports.normalize = normalize;\n\n/**\n * Joins two paths/URLs.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be joined with the root.\n *\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n *   first.\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n *   is updated with the result and aRoot is returned. Otherwise the result\n *   is returned.\n *   - If aPath is absolute, the result is aPath.\n *   - Otherwise the two paths are joined with a slash.\n * - Joining for example 'http://' and 'www.example.com' is also supported.\n */\nfunction join(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n  if (aPath === \"\") {\n    aPath = \".\";\n  }\n  var aPathUrl = urlParse(aPath);\n  var aRootUrl = urlParse(aRoot);\n  if (aRootUrl) {\n    aRoot = aRootUrl.path || '/';\n  }\n\n  // `join(foo, '//www.example.org')`\n  if (aPathUrl && !aPathUrl.scheme) {\n    if (aRootUrl) {\n      aPathUrl.scheme = aRootUrl.scheme;\n    }\n    return urlGenerate(aPathUrl);\n  }\n\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n    return aPath;\n  }\n\n  // `join('http://', 'www.example.com')`\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n    aRootUrl.host = aPath;\n    return urlGenerate(aRootUrl);\n  }\n\n  var joined = aPath.charAt(0) === '/'\n    ? aPath\n    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n  if (aRootUrl) {\n    aRootUrl.path = joined;\n    return urlGenerate(aRootUrl);\n  }\n  return joined;\n}\nexports.join = join;\n\nexports.isAbsolute = function (aPath) {\n  return aPath.charAt(0) === '/' || urlRegexp.test(aPath);\n};\n\n/**\n * Make a path relative to a URL or another path.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be made relative to aRoot.\n */\nfunction relative(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n\n  aRoot = aRoot.replace(/\\/$/, '');\n\n  // It is possible for the path to be above the root. In this case, simply\n  // checking whether the root is a prefix of the path won't work. Instead, we\n  // need to remove components from the root one by one, until either we find\n  // a prefix that fits, or we run out of components to remove.\n  var level = 0;\n  while (aPath.indexOf(aRoot + '/') !== 0) {\n    var index = aRoot.lastIndexOf(\"/\");\n    if (index < 0) {\n      return aPath;\n    }\n\n    // If the only part of the root that is left is the scheme (i.e. http://,\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n    // have exhausted all components, so the path is not relative to the root.\n    aRoot = aRoot.slice(0, index);\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n      return aPath;\n    }\n\n    ++level;\n  }\n\n  // Make sure we add a \"../\" for each component we removed from the root.\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n}\nexports.relative = relative;\n\nvar supportsNullProto = (function () {\n  var obj = Object.create(null);\n  return !('__proto__' in obj);\n}());\n\nfunction identity (s) {\n  return s;\n}\n\n/**\n * Because behavior goes wacky when you set `__proto__` on objects, we\n * have to prefix all the strings in our set with an arbitrary character.\n *\n * See https://github.com/mozilla/source-map/pull/31 and\n * https://github.com/mozilla/source-map/issues/30\n *\n * @param String aStr\n */\nfunction toSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return '$' + aStr;\n  }\n\n  return aStr;\n}\nexports.toSetString = supportsNullProto ? identity : toSetString;\n\nfunction fromSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return aStr.slice(1);\n  }\n\n  return aStr;\n}\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\n\nfunction isProtoString(s) {\n  if (!s) {\n    return false;\n  }\n\n  var length = s.length;\n\n  if (length < 9 /* \"__proto__\".length */) {\n    return false;\n  }\n\n  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n    return false;\n  }\n\n  for (var i = length - 10; i >= 0; i--) {\n    if (s.charCodeAt(i) !== 36 /* '$' */) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Comparator between two mappings where the original positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same original source/line/column, but different generated\n * line and column the same. Useful when searching for a mapping with a\n * stubbed out mapping.\n */\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByOriginalPositions = compareByOriginalPositions;\n\n/**\n * Comparator between two mappings with deflated source and name indices where\n * the generated positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same generated line and column, but different\n * source/name/original line and column the same. Useful when searching for a\n * mapping with a stubbed out mapping.\n */\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\nfunction strcmp(aStr1, aStr2) {\n  if (aStr1 === aStr2) {\n    return 0;\n  }\n\n  if (aStr1 === null) {\n    return 1; // aStr2 !== null\n  }\n\n  if (aStr2 === null) {\n    return -1; // aStr1 !== null\n  }\n\n  if (aStr1 > aStr2) {\n    return 1;\n  }\n\n  return -1;\n}\n\n/**\n * Comparator between two mappings with inflated source and name strings where\n * the generated positions are compared.\n */\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n\n/**\n * Strip any JSON XSSI avoidance prefix from the string (as documented\n * in the source maps specification), and then parse the string as\n * JSON.\n */\nfunction parseSourceMapInput(str) {\n  return JSON.parse(str.replace(/^\\)]}'[^\\n]*\\n/, ''));\n}\nexports.parseSourceMapInput = parseSourceMapInput;\n\n/**\n * Compute the URL of a source given the the source root, the source's\n * URL, and the source map's URL.\n */\nfunction computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {\n  sourceURL = sourceURL || '';\n\n  if (sourceRoot) {\n    // This follows what Chrome does.\n    if (sourceRoot[sourceRoot.length - 1] !== '/' && sourceURL[0] !== '/') {\n      sourceRoot += '/';\n    }\n    // The spec says:\n    //   Line 4: An optional source root, useful for relocating source\n    //   files on a server or removing repeated values in the\n    //   “sources” entry.  This value is prepended to the individual\n    //   entries in the “source” field.\n    sourceURL = sourceRoot + sourceURL;\n  }\n\n  // Historically, SourceMapConsumer did not take the sourceMapURL as\n  // a parameter.  This mode is still somewhat supported, which is why\n  // this code block is conditional.  However, it's preferable to pass\n  // the source map URL to SourceMapConsumer, so that this function\n  // can implement the source URL resolution algorithm as outlined in\n  // the spec.  This block is basically the equivalent of:\n  //    new URL(sourceURL, sourceMapURL).toString()\n  // ... except it avoids using URL, which wasn't available in the\n  // older releases of node still supported by this library.\n  //\n  // The spec says:\n  //   If the sources are not absolute URLs after prepending of the\n  //   “sourceRoot”, the sources are resolved relative to the\n  //   SourceMap (like resolving script src in a html document).\n  if (sourceMapURL) {\n    var parsed = urlParse(sourceMapURL);\n    if (!parsed) {\n      throw new Error(\"sourceMapURL could not be parsed\");\n    }\n    if (parsed.path) {\n      // Strip the last path component, but keep the \"/\".\n      var index = parsed.path.lastIndexOf('/');\n      if (index >= 0) {\n        parsed.path = parsed.path.substring(0, index + 1);\n      }\n    }\n    sourceURL = join(urlGenerate(parsed), sourceURL);\n  }\n\n  return normalize(sourceURL);\n}\nexports.computeSourceURL = computeSourceURL;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar has = Object.prototype.hasOwnProperty;\nvar hasNativeMap = typeof Map !== \"undefined\";\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nfunction ArraySet() {\n  this._array = [];\n  this._set = hasNativeMap ? new Map() : Object.create(null);\n}\n\n/**\n * Static method for creating ArraySet instances from an existing array.\n */\nArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n  var set = new ArraySet();\n  for (var i = 0, len = aArray.length; i < len; i++) {\n    set.add(aArray[i], aAllowDuplicates);\n  }\n  return set;\n};\n\n/**\n * Return how many unique items are in this ArraySet. If duplicates have been\n * added, than those do not count towards the size.\n *\n * @returns Number\n */\nArraySet.prototype.size = function ArraySet_size() {\n  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;\n};\n\n/**\n * Add the given string to this set.\n *\n * @param String aStr\n */\nArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n  var sStr = hasNativeMap ? aStr : util.toSetString(aStr);\n  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);\n  var idx = this._array.length;\n  if (!isDuplicate || aAllowDuplicates) {\n    this._array.push(aStr);\n  }\n  if (!isDuplicate) {\n    if (hasNativeMap) {\n      this._set.set(aStr, idx);\n    } else {\n      this._set[sStr] = idx;\n    }\n  }\n};\n\n/**\n * Is the given string a member of this set?\n *\n * @param String aStr\n */\nArraySet.prototype.has = function ArraySet_has(aStr) {\n  if (hasNativeMap) {\n    return this._set.has(aStr);\n  } else {\n    var sStr = util.toSetString(aStr);\n    return has.call(this._set, sStr);\n  }\n};\n\n/**\n * What is the index of the given string in the array?\n *\n * @param String aStr\n */\nArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n  if (hasNativeMap) {\n    var idx = this._set.get(aStr);\n    if (idx >= 0) {\n        return idx;\n    }\n  } else {\n    var sStr = util.toSetString(aStr);\n    if (has.call(this._set, sStr)) {\n      return this._set[sStr];\n    }\n  }\n\n  throw new Error('\"' + aStr + '\" is not in the set.');\n};\n\n/**\n * What is the element at the given index?\n *\n * @param Number aIdx\n */\nArraySet.prototype.at = function ArraySet_at(aIdx) {\n  if (aIdx >= 0 && aIdx < this._array.length) {\n    return this._array[aIdx];\n  }\n  throw new Error('No element indexed by ' + aIdx);\n};\n\n/**\n * Returns the array representation of this set (which has the proper indices\n * indicated by indexOf). Note that this is a copy of the internal array used\n * for storing the members so that no one can mess with internal state.\n */\nArraySet.prototype.toArray = function ArraySet_toArray() {\n  return this._array.slice();\n};\n\nexports.ArraySet = ArraySet;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\n\n/**\n * Determine whether mappingB is after mappingA with respect to generated\n * position.\n */\nfunction generatedPositionAfter(mappingA, mappingB) {\n  // Optimized for most common case\n  var lineA = mappingA.generatedLine;\n  var lineB = mappingB.generatedLine;\n  var columnA = mappingA.generatedColumn;\n  var columnB = mappingB.generatedColumn;\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\n         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n}\n\n/**\n * A data structure to provide a sorted view of accumulated mappings in a\n * performance conscious manner. It trades a neglibable overhead in general\n * case for a large speedup in case of mappings being added in order.\n */\nfunction MappingList() {\n  this._array = [];\n  this._sorted = true;\n  // Serves as infimum\n  this._last = {generatedLine: -1, generatedColumn: 0};\n}\n\n/**\n * Iterate through internal items. This method takes the same arguments that\n * `Array.prototype.forEach` takes.\n *\n * NOTE: The order of the mappings is NOT guaranteed.\n */\nMappingList.prototype.unsortedForEach =\n  function MappingList_forEach(aCallback, aThisArg) {\n    this._array.forEach(aCallback, aThisArg);\n  };\n\n/**\n * Add the given source mapping.\n *\n * @param Object aMapping\n */\nMappingList.prototype.add = function MappingList_add(aMapping) {\n  if (generatedPositionAfter(this._last, aMapping)) {\n    this._last = aMapping;\n    this._array.push(aMapping);\n  } else {\n    this._sorted = false;\n    this._array.push(aMapping);\n  }\n};\n\n/**\n * Returns the flat, sorted array of mappings. The mappings are sorted by\n * generated position.\n *\n * WARNING: This method returns internal data without copying, for\n * performance. The return value must NOT be mutated, and should be treated as\n * an immutable borrow. If you want to take ownership, you must make your own\n * copy.\n */\nMappingList.prototype.toArray = function MappingList_toArray() {\n  if (!this._sorted) {\n    this._array.sort(util.compareByGeneratedPositionsInflated);\n    this._sorted = true;\n  }\n  return this._array;\n};\n\nexports.MappingList = MappingList;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar binarySearch = require('./binary-search');\nvar ArraySet = require('./array-set').ArraySet;\nvar base64VLQ = require('./base64-vlq');\nvar quickSort = require('./quick-sort').quickSort;\n\nfunction SourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  return sourceMap.sections != null\n    ? new IndexedSourceMapConsumer(sourceMap, aSourceMapURL)\n    : new BasicSourceMapConsumer(sourceMap, aSourceMapURL);\n}\n\nSourceMapConsumer.fromSourceMap = function(aSourceMap, aSourceMapURL) {\n  return BasicSourceMapConsumer.fromSourceMap(aSourceMap, aSourceMapURL);\n}\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nSourceMapConsumer.prototype._version = 3;\n\n// `__generatedMappings` and `__originalMappings` are arrays that hold the\n// parsed mapping coordinates from the source map's \"mappings\" attribute. They\n// are lazily instantiated, accessed via the `_generatedMappings` and\n// `_originalMappings` getters respectively, and we only parse the mappings\n// and create these arrays once queried for a source location. We jump through\n// these hoops because there can be many thousands of mappings, and parsing\n// them is expensive, so we only want to do it if we must.\n//\n// Each object in the arrays is of the form:\n//\n//     {\n//       generatedLine: The line number in the generated code,\n//       generatedColumn: The column number in the generated code,\n//       source: The path to the original source file that generated this\n//               chunk of code,\n//       originalLine: The line number in the original source that\n//                     corresponds to this chunk of generated code,\n//       originalColumn: The column number in the original source that\n//                       corresponds to this chunk of generated code,\n//       name: The name of the original symbol which generated this chunk of\n//             code.\n//     }\n//\n// All properties except for `generatedLine` and `generatedColumn` can be\n// `null`.\n//\n// `_generatedMappings` is ordered by the generated positions.\n//\n// `_originalMappings` is ordered by the original positions.\n\nSourceMapConsumer.prototype.__generatedMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__generatedMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__generatedMappings;\n  }\n});\n\nSourceMapConsumer.prototype.__originalMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__originalMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__originalMappings;\n  }\n});\n\nSourceMapConsumer.prototype._charIsMappingSeparator =\n  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\n    var c = aStr.charAt(index);\n    return c === \";\" || c === \",\";\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    throw new Error(\"Subclasses must implement _parseMappings\");\n  };\n\nSourceMapConsumer.GENERATED_ORDER = 1;\nSourceMapConsumer.ORIGINAL_ORDER = 2;\n\nSourceMapConsumer.GREATEST_LOWER_BOUND = 1;\nSourceMapConsumer.LEAST_UPPER_BOUND = 2;\n\n/**\n * Iterate over each mapping between an original source/line/column and a\n * generated line/column in this source map.\n *\n * @param Function aCallback\n *        The function that is called with each mapping.\n * @param Object aContext\n *        Optional. If specified, this object will be the value of `this` every\n *        time that `aCallback` is called.\n * @param aOrder\n *        Either `SourceMapConsumer.GENERATED_ORDER` or\n *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n *        iterate over the mappings sorted by the generated file's line/column\n *        order or the original's source/line/column order, respectively. Defaults to\n *        `SourceMapConsumer.GENERATED_ORDER`.\n */\nSourceMapConsumer.prototype.eachMapping =\n  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n    var context = aContext || null;\n    var order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n\n    var mappings;\n    switch (order) {\n    case SourceMapConsumer.GENERATED_ORDER:\n      mappings = this._generatedMappings;\n      break;\n    case SourceMapConsumer.ORIGINAL_ORDER:\n      mappings = this._originalMappings;\n      break;\n    default:\n      throw new Error(\"Unknown order of iteration.\");\n    }\n\n    var sourceRoot = this.sourceRoot;\n    mappings.map(function (mapping) {\n      var source = mapping.source === null ? null : this._sources.at(mapping.source);\n      source = util.computeSourceURL(sourceRoot, source, this._sourceMapURL);\n      return {\n        source: source,\n        generatedLine: mapping.generatedLine,\n        generatedColumn: mapping.generatedColumn,\n        originalLine: mapping.originalLine,\n        originalColumn: mapping.originalColumn,\n        name: mapping.name === null ? null : this._names.at(mapping.name)\n      };\n    }, this).forEach(aCallback, context);\n  };\n\n/**\n * Returns all generated line and column information for the original source,\n * line, and column provided. If no column is provided, returns all mappings\n * corresponding to a either the line we are searching for or the next\n * closest line that has any mappings. Otherwise, returns all mappings\n * corresponding to the given line and either the column we are searching for\n * or the next closest column that has any offsets.\n *\n * The only argument is an object with the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number is 1-based.\n *   - column: Optional. the column number in the original source.\n *    The column number is 0-based.\n *\n * and an array of objects is returned, each with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *    line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *    The column number is 0-based.\n */\nSourceMapConsumer.prototype.allGeneratedPositionsFor =\n  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\n    var line = util.getArg(aArgs, 'line');\n\n    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\n    // returns the index of the closest mapping less than the needle. By\n    // setting needle.originalColumn to 0, we thus find the last mapping for\n    // the given line, provided such a mapping exists.\n    var needle = {\n      source: util.getArg(aArgs, 'source'),\n      originalLine: line,\n      originalColumn: util.getArg(aArgs, 'column', 0)\n    };\n\n    needle.source = this._findSourceIndex(needle.source);\n    if (needle.source < 0) {\n      return [];\n    }\n\n    var mappings = [];\n\n    var index = this._findMapping(needle,\n                                  this._originalMappings,\n                                  \"originalLine\",\n                                  \"originalColumn\",\n                                  util.compareByOriginalPositions,\n                                  binarySearch.LEAST_UPPER_BOUND);\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (aArgs.column === undefined) {\n        var originalLine = mapping.originalLine;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we found. Since\n        // mappings are sorted, this is guaranteed to find all mappings for\n        // the line we found.\n        while (mapping && mapping.originalLine === originalLine) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      } else {\n        var originalColumn = mapping.originalColumn;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we were searching for.\n        // Since mappings are sorted, this is guaranteed to find all mappings for\n        // the line we are searching for.\n        while (mapping &&\n               mapping.originalLine === line &&\n               mapping.originalColumn == originalColumn) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      }\n    }\n\n    return mappings;\n  };\n\nexports.SourceMapConsumer = SourceMapConsumer;\n\n/**\n * A BasicSourceMapConsumer instance represents a parsed source map which we can\n * query for information about the original file positions by giving it a file\n * position in the generated source.\n *\n * The first parameter is the raw source map (either as a JSON string, or\n * already parsed to an object). According to the spec, source maps have the\n * following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - sources: An array of URLs to the original source files.\n *   - names: An array of identifiers which can be referrenced by individual mappings.\n *   - sourceRoot: Optional. The URL root from which all sources are relative.\n *   - sourcesContent: Optional. An array of contents of the original source files.\n *   - mappings: A string of base64 VLQs which contain the actual mappings.\n *   - file: Optional. The generated file this source map is associated with.\n *\n * Here is an example source map, taken from the source map spec[0]:\n *\n *     {\n *       version : 3,\n *       file: \"out.js\",\n *       sourceRoot : \"\",\n *       sources: [\"foo.js\", \"bar.js\"],\n *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n *       mappings: \"AA,AB;;ABCDE;\"\n *     }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n */\nfunction BasicSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sources = util.getArg(sourceMap, 'sources');\n  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n  // requires the array) to play nice here.\n  var names = util.getArg(sourceMap, 'names', []);\n  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);\n  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);\n  var mappings = util.getArg(sourceMap, 'mappings');\n  var file = util.getArg(sourceMap, 'file', null);\n\n  // Once again, Sass deviates from the spec and supplies the version as a\n  // string rather than a number, so we use loose equality checking here.\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  if (sourceRoot) {\n    sourceRoot = util.normalize(sourceRoot);\n  }\n\n  sources = sources\n    .map(String)\n    // Some source maps produce relative source paths like \"./foo.js\" instead of\n    // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n    // See bugzil.la/1090768.\n    .map(util.normalize)\n    // Always ensure that absolute sources are internally stored relative to\n    // the source root, if the source root is absolute. Not doing this would\n    // be particularly problematic when the source root is a prefix of the\n    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n    .map(function (source) {\n      return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)\n        ? util.relative(sourceRoot, source)\n        : source;\n    });\n\n  // Pass `true` below to allow duplicate names and sources. While source maps\n  // are intended to be compressed and deduplicated, the TypeScript compiler\n  // sometimes generates source maps with duplicates in them. See Github issue\n  // #72 and bugzil.la/889492.\n  this._names = ArraySet.fromArray(names.map(String), true);\n  this._sources = ArraySet.fromArray(sources, true);\n\n  this._absoluteSources = this._sources.toArray().map(function (s) {\n    return util.computeSourceURL(sourceRoot, s, aSourceMapURL);\n  });\n\n  this.sourceRoot = sourceRoot;\n  this.sourcesContent = sourcesContent;\n  this._mappings = mappings;\n  this._sourceMapURL = aSourceMapURL;\n  this.file = file;\n}\n\nBasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nBasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;\n\n/**\n * Utility function to find the index of a source.  Returns -1 if not\n * found.\n */\nBasicSourceMapConsumer.prototype._findSourceIndex = function(aSource) {\n  var relativeSource = aSource;\n  if (this.sourceRoot != null) {\n    relativeSource = util.relative(this.sourceRoot, relativeSource);\n  }\n\n  if (this._sources.has(relativeSource)) {\n    return this._sources.indexOf(relativeSource);\n  }\n\n  // Maybe aSource is an absolute URL as returned by |sources|.  In\n  // this case we can't simply undo the transform.\n  var i;\n  for (i = 0; i < this._absoluteSources.length; ++i) {\n    if (this._absoluteSources[i] == aSource) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\n/**\n * Create a BasicSourceMapConsumer from a SourceMapGenerator.\n *\n * @param SourceMapGenerator aSourceMap\n *        The source map that will be consumed.\n * @param String aSourceMapURL\n *        The URL at which the source map can be found (optional)\n * @returns BasicSourceMapConsumer\n */\nBasicSourceMapConsumer.fromSourceMap =\n  function SourceMapConsumer_fromSourceMap(aSourceMap, aSourceMapURL) {\n    var smc = Object.create(BasicSourceMapConsumer.prototype);\n\n    var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\n    var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\n    smc.sourceRoot = aSourceMap._sourceRoot;\n    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\n                                                            smc.sourceRoot);\n    smc.file = aSourceMap._file;\n    smc._sourceMapURL = aSourceMapURL;\n    smc._absoluteSources = smc._sources.toArray().map(function (s) {\n      return util.computeSourceURL(smc.sourceRoot, s, aSourceMapURL);\n    });\n\n    // Because we are modifying the entries (by converting string sources and\n    // names to indices into the sources and names ArraySets), we have to make\n    // a copy of the entry or else bad things happen. Shared mutable state\n    // strikes again! See github issue #191.\n\n    var generatedMappings = aSourceMap._mappings.toArray().slice();\n    var destGeneratedMappings = smc.__generatedMappings = [];\n    var destOriginalMappings = smc.__originalMappings = [];\n\n    for (var i = 0, length = generatedMappings.length; i < length; i++) {\n      var srcMapping = generatedMappings[i];\n      var destMapping = new Mapping;\n      destMapping.generatedLine = srcMapping.generatedLine;\n      destMapping.generatedColumn = srcMapping.generatedColumn;\n\n      if (srcMapping.source) {\n        destMapping.source = sources.indexOf(srcMapping.source);\n        destMapping.originalLine = srcMapping.originalLine;\n        destMapping.originalColumn = srcMapping.originalColumn;\n\n        if (srcMapping.name) {\n          destMapping.name = names.indexOf(srcMapping.name);\n        }\n\n        destOriginalMappings.push(destMapping);\n      }\n\n      destGeneratedMappings.push(destMapping);\n    }\n\n    quickSort(smc.__originalMappings, util.compareByOriginalPositions);\n\n    return smc;\n  };\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nBasicSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    return this._absoluteSources.slice();\n  }\n});\n\n/**\n * Provide the JIT with a nice shape / hidden class.\n */\nfunction Mapping() {\n  this.generatedLine = 0;\n  this.generatedColumn = 0;\n  this.source = null;\n  this.originalLine = null;\n  this.originalColumn = null;\n  this.name = null;\n}\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nBasicSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    var generatedLine = 1;\n    var previousGeneratedColumn = 0;\n    var previousOriginalLine = 0;\n    var previousOriginalColumn = 0;\n    var previousSource = 0;\n    var previousName = 0;\n    var length = aStr.length;\n    var index = 0;\n    var cachedSegments = {};\n    var temp = {};\n    var originalMappings = [];\n    var generatedMappings = [];\n    var mapping, str, segment, end, value;\n\n    while (index < length) {\n      if (aStr.charAt(index) === ';') {\n        generatedLine++;\n        index++;\n        previousGeneratedColumn = 0;\n      }\n      else if (aStr.charAt(index) === ',') {\n        index++;\n      }\n      else {\n        mapping = new Mapping();\n        mapping.generatedLine = generatedLine;\n\n        // Because each offset is encoded relative to the previous one,\n        // many segments often have the same encoding. We can exploit this\n        // fact by caching the parsed variable length fields of each segment,\n        // allowing us to avoid a second parse if we encounter the same\n        // segment again.\n        for (end = index; end < length; end++) {\n          if (this._charIsMappingSeparator(aStr, end)) {\n            break;\n          }\n        }\n        str = aStr.slice(index, end);\n\n        segment = cachedSegments[str];\n        if (segment) {\n          index += str.length;\n        } else {\n          segment = [];\n          while (index < end) {\n            base64VLQ.decode(aStr, index, temp);\n            value = temp.value;\n            index = temp.rest;\n            segment.push(value);\n          }\n\n          if (segment.length === 2) {\n            throw new Error('Found a source, but no line and column');\n          }\n\n          if (segment.length === 3) {\n            throw new Error('Found a source and line, but no column');\n          }\n\n          cachedSegments[str] = segment;\n        }\n\n        // Generated column.\n        mapping.generatedColumn = previousGeneratedColumn + segment[0];\n        previousGeneratedColumn = mapping.generatedColumn;\n\n        if (segment.length > 1) {\n          // Original source.\n          mapping.source = previousSource + segment[1];\n          previousSource += segment[1];\n\n          // Original line.\n          mapping.originalLine = previousOriginalLine + segment[2];\n          previousOriginalLine = mapping.originalLine;\n          // Lines are stored 0-based\n          mapping.originalLine += 1;\n\n          // Original column.\n          mapping.originalColumn = previousOriginalColumn + segment[3];\n          previousOriginalColumn = mapping.originalColumn;\n\n          if (segment.length > 4) {\n            // Original name.\n            mapping.name = previousName + segment[4];\n            previousName += segment[4];\n          }\n        }\n\n        generatedMappings.push(mapping);\n        if (typeof mapping.originalLine === 'number') {\n          originalMappings.push(mapping);\n        }\n      }\n    }\n\n    quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated);\n    this.__generatedMappings = generatedMappings;\n\n    quickSort(originalMappings, util.compareByOriginalPositions);\n    this.__originalMappings = originalMappings;\n  };\n\n/**\n * Find the mapping that best matches the hypothetical \"needle\" mapping that\n * we are searching for in the given \"haystack\" of mappings.\n */\nBasicSourceMapConsumer.prototype._findMapping =\n  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\n                                         aColumnName, aComparator, aBias) {\n    // To return the position we are searching for, we must first find the\n    // mapping for the given position and then return the opposite position it\n    // points to. Because the mappings are sorted, we can use binary search to\n    // find the best mapping.\n\n    if (aNeedle[aLineName] <= 0) {\n      throw new TypeError('Line must be greater than or equal to 1, got '\n                          + aNeedle[aLineName]);\n    }\n    if (aNeedle[aColumnName] < 0) {\n      throw new TypeError('Column must be greater than or equal to 0, got '\n                          + aNeedle[aColumnName]);\n    }\n\n    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);\n  };\n\n/**\n * Compute the last column for each generated mapping. The last column is\n * inclusive.\n */\nBasicSourceMapConsumer.prototype.computeColumnSpans =\n  function SourceMapConsumer_computeColumnSpans() {\n    for (var index = 0; index < this._generatedMappings.length; ++index) {\n      var mapping = this._generatedMappings[index];\n\n      // Mappings do not contain a field for the last generated columnt. We\n      // can come up with an optimistic estimate, however, by assuming that\n      // mappings are contiguous (i.e. given two consecutive mappings, the\n      // first mapping ends where the second one starts).\n      if (index + 1 < this._generatedMappings.length) {\n        var nextMapping = this._generatedMappings[index + 1];\n\n        if (mapping.generatedLine === nextMapping.generatedLine) {\n          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\n          continue;\n        }\n      }\n\n      // The last mapping for each line spans the entire line.\n      mapping.lastGeneratedColumn = Infinity;\n    }\n  };\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nBasicSourceMapConsumer.prototype.originalPositionFor =\n  function SourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._generatedMappings,\n      \"generatedLine\",\n      \"generatedColumn\",\n      util.compareByGeneratedPositionsDeflated,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._generatedMappings[index];\n\n      if (mapping.generatedLine === needle.generatedLine) {\n        var source = util.getArg(mapping, 'source', null);\n        if (source !== null) {\n          source = this._sources.at(source);\n          source = util.computeSourceURL(this.sourceRoot, source, this._sourceMapURL);\n        }\n        var name = util.getArg(mapping, 'name', null);\n        if (name !== null) {\n          name = this._names.at(name);\n        }\n        return {\n          source: source,\n          line: util.getArg(mapping, 'originalLine', null),\n          column: util.getArg(mapping, 'originalColumn', null),\n          name: name\n        };\n      }\n    }\n\n    return {\n      source: null,\n      line: null,\n      column: null,\n      name: null\n    };\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nBasicSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function BasicSourceMapConsumer_hasContentsOfAllSources() {\n    if (!this.sourcesContent) {\n      return false;\n    }\n    return this.sourcesContent.length >= this._sources.size() &&\n      !this.sourcesContent.some(function (sc) { return sc == null; });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nBasicSourceMapConsumer.prototype.sourceContentFor =\n  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    if (!this.sourcesContent) {\n      return null;\n    }\n\n    var index = this._findSourceIndex(aSource);\n    if (index >= 0) {\n      return this.sourcesContent[index];\n    }\n\n    var relativeSource = aSource;\n    if (this.sourceRoot != null) {\n      relativeSource = util.relative(this.sourceRoot, relativeSource);\n    }\n\n    var url;\n    if (this.sourceRoot != null\n        && (url = util.urlParse(this.sourceRoot))) {\n      // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n      // many users. We can help them out when they expect file:// URIs to\n      // behave like it would if they were running a local HTTP server. See\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n      var fileUriAbsPath = relativeSource.replace(/^file:\\/\\//, \"\");\n      if (url.scheme == \"file\"\n          && this._sources.has(fileUriAbsPath)) {\n        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\n      }\n\n      if ((!url.path || url.path == \"/\")\n          && this._sources.has(\"/\" + relativeSource)) {\n        return this.sourcesContent[this._sources.indexOf(\"/\" + relativeSource)];\n      }\n    }\n\n    // This function is used recursively from\n    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\n    // don't want to throw if we can't find the source - we just want to\n    // return null, so we provide a flag to exit gracefully.\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + relativeSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nBasicSourceMapConsumer.prototype.generatedPositionFor =\n  function SourceMapConsumer_generatedPositionFor(aArgs) {\n    var source = util.getArg(aArgs, 'source');\n    source = this._findSourceIndex(source);\n    if (source < 0) {\n      return {\n        line: null,\n        column: null,\n        lastColumn: null\n      };\n    }\n\n    var needle = {\n      source: source,\n      originalLine: util.getArg(aArgs, 'line'),\n      originalColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._originalMappings,\n      \"originalLine\",\n      \"originalColumn\",\n      util.compareByOriginalPositions,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (mapping.source === needle.source) {\n        return {\n          line: util.getArg(mapping, 'generatedLine', null),\n          column: util.getArg(mapping, 'generatedColumn', null),\n          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n        };\n      }\n    }\n\n    return {\n      line: null,\n      column: null,\n      lastColumn: null\n    };\n  };\n\nexports.BasicSourceMapConsumer = BasicSourceMapConsumer;\n\n/**\n * An IndexedSourceMapConsumer instance represents a parsed source map which\n * we can query for information. It differs from BasicSourceMapConsumer in\n * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\n * input.\n *\n * The first parameter is a raw source map (either as a JSON string, or already\n * parsed to an object). According to the spec for indexed source maps, they\n * have the following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - file: Optional. The generated file this source map is associated with.\n *   - sections: A list of section definitions.\n *\n * Each value under the \"sections\" field has two fields:\n *   - offset: The offset into the original specified at which this section\n *       begins to apply, defined as an object with a \"line\" and \"column\"\n *       field.\n *   - map: A source map definition. This source map could also be indexed,\n *       but doesn't have to be.\n *\n * Instead of the \"map\" field, it's also possible to have a \"url\" field\n * specifying a URL to retrieve a source map from, but that's currently\n * unsupported.\n *\n * Here's an example source map, taken from the source map spec[0], but\n * modified to omit a section which uses the \"url\" field.\n *\n *  {\n *    version : 3,\n *    file: \"app.js\",\n *    sections: [{\n *      offset: {line:100, column:10},\n *      map: {\n *        version : 3,\n *        file: \"section.js\",\n *        sources: [\"foo.js\", \"bar.js\"],\n *        names: [\"src\", \"maps\", \"are\", \"fun\"],\n *        mappings: \"AAAA,E;;ABCDE;\"\n *      }\n *    }],\n *  }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\n */\nfunction IndexedSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sections = util.getArg(sourceMap, 'sections');\n\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n\n  var lastOffset = {\n    line: -1,\n    column: 0\n  };\n  this._sections = sections.map(function (s) {\n    if (s.url) {\n      // The url field will require support for asynchronicity.\n      // See https://github.com/mozilla/source-map/issues/16\n      throw new Error('Support for url field in sections not implemented.');\n    }\n    var offset = util.getArg(s, 'offset');\n    var offsetLine = util.getArg(offset, 'line');\n    var offsetColumn = util.getArg(offset, 'column');\n\n    if (offsetLine < lastOffset.line ||\n        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {\n      throw new Error('Section offsets must be ordered and non-overlapping.');\n    }\n    lastOffset = offset;\n\n    return {\n      generatedOffset: {\n        // The offset fields are 0-based, but we use 1-based indices when\n        // encoding/decoding from VLQ.\n        generatedLine: offsetLine + 1,\n        generatedColumn: offsetColumn + 1\n      },\n      consumer: new SourceMapConsumer(util.getArg(s, 'map'), aSourceMapURL)\n    }\n  });\n}\n\nIndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nIndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nIndexedSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    var sources = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\n        sources.push(this._sections[i].consumer.sources[j]);\n      }\n    }\n    return sources;\n  }\n});\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nIndexedSourceMapConsumer.prototype.originalPositionFor =\n  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    // Find the section containing the generated position we're trying to map\n    // to an original position.\n    var sectionIndex = binarySearch.search(needle, this._sections,\n      function(needle, section) {\n        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;\n        if (cmp) {\n          return cmp;\n        }\n\n        return (needle.generatedColumn -\n                section.generatedOffset.generatedColumn);\n      });\n    var section = this._sections[sectionIndex];\n\n    if (!section) {\n      return {\n        source: null,\n        line: null,\n        column: null,\n        name: null\n      };\n    }\n\n    return section.consumer.originalPositionFor({\n      line: needle.generatedLine -\n        (section.generatedOffset.generatedLine - 1),\n      column: needle.generatedColumn -\n        (section.generatedOffset.generatedLine === needle.generatedLine\n         ? section.generatedOffset.generatedColumn - 1\n         : 0),\n      bias: aArgs.bias\n    });\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nIndexedSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function IndexedSourceMapConsumer_hasContentsOfAllSources() {\n    return this._sections.every(function (s) {\n      return s.consumer.hasContentsOfAllSources();\n    });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nIndexedSourceMapConsumer.prototype.sourceContentFor =\n  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      var content = section.consumer.sourceContentFor(aSource, true);\n      if (content) {\n        return content;\n      }\n    }\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based. \n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nIndexedSourceMapConsumer.prototype.generatedPositionFor =\n  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      // Only consider this section if the requested source is in the list of\n      // sources of the consumer.\n      if (section.consumer._findSourceIndex(util.getArg(aArgs, 'source')) === -1) {\n        continue;\n      }\n      var generatedPosition = section.consumer.generatedPositionFor(aArgs);\n      if (generatedPosition) {\n        var ret = {\n          line: generatedPosition.line +\n            (section.generatedOffset.generatedLine - 1),\n          column: generatedPosition.column +\n            (section.generatedOffset.generatedLine === generatedPosition.line\n             ? section.generatedOffset.generatedColumn - 1\n             : 0)\n        };\n        return ret;\n      }\n    }\n\n    return {\n      line: null,\n      column: null\n    };\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nIndexedSourceMapConsumer.prototype._parseMappings =\n  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    this.__generatedMappings = [];\n    this.__originalMappings = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n      var sectionMappings = section.consumer._generatedMappings;\n      for (var j = 0; j < sectionMappings.length; j++) {\n        var mapping = sectionMappings[j];\n\n        var source = section.consumer._sources.at(mapping.source);\n        source = util.computeSourceURL(section.consumer.sourceRoot, source, this._sourceMapURL);\n        this._sources.add(source);\n        source = this._sources.indexOf(source);\n\n        var name = null;\n        if (mapping.name) {\n          name = section.consumer._names.at(mapping.name);\n          this._names.add(name);\n          name = this._names.indexOf(name);\n        }\n\n        // The mappings coming from the consumer for the section have\n        // generated positions relative to the start of the section, so we\n        // need to offset them to be relative to the start of the concatenated\n        // generated file.\n        var adjustedMapping = {\n          source: source,\n          generatedLine: mapping.generatedLine +\n            (section.generatedOffset.generatedLine - 1),\n          generatedColumn: mapping.generatedColumn +\n            (section.generatedOffset.generatedLine === mapping.generatedLine\n            ? section.generatedOffset.generatedColumn - 1\n            : 0),\n          originalLine: mapping.originalLine,\n          originalColumn: mapping.originalColumn,\n          name: name\n        };\n\n        this.__generatedMappings.push(adjustedMapping);\n        if (typeof adjustedMapping.originalLine === 'number') {\n          this.__originalMappings.push(adjustedMapping);\n        }\n      }\n    }\n\n    quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);\n    quickSort(this.__originalMappings, util.compareByOriginalPositions);\n  };\n\nexports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nexports.GREATEST_LOWER_BOUND = 1;\nexports.LEAST_UPPER_BOUND = 2;\n\n/**\n * Recursive implementation of binary search.\n *\n * @param aLow Indices here and lower do not contain the needle.\n * @param aHigh Indices here and higher do not contain the needle.\n * @param aNeedle The element being searched for.\n * @param aHaystack The non-empty array being searched.\n * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n */\nfunction recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\n  // This function terminates when one of the following is true:\n  //\n  //   1. We find the exact element we are looking for.\n  //\n  //   2. We did not find the exact element, but we can return the index of\n  //      the next-closest element.\n  //\n  //   3. We did not find the exact element, and there is no next-closest\n  //      element than the one we are searching for, so we return -1.\n  var mid = Math.floor((aHigh - aLow) / 2) + aLow;\n  var cmp = aCompare(aNeedle, aHaystack[mid], true);\n  if (cmp === 0) {\n    // Found the element we are looking for.\n    return mid;\n  }\n  else if (cmp > 0) {\n    // Our needle is greater than aHaystack[mid].\n    if (aHigh - mid > 1) {\n      // The element is in the upper half.\n      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // The exact needle element was not found in this haystack. Determine if\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return aHigh < aHaystack.length ? aHigh : -1;\n    } else {\n      return mid;\n    }\n  }\n  else {\n    // Our needle is less than aHaystack[mid].\n    if (mid - aLow > 1) {\n      // The element is in the lower half.\n      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return mid;\n    } else {\n      return aLow < 0 ? -1 : aLow;\n    }\n  }\n}\n\n/**\n * This is an implementation of binary search which will always try and return\n * the index of the closest element if there is no exact hit. This is because\n * mappings between original and generated line/col pairs are single points,\n * and there is an implicit region between each of them, so a miss just means\n * that you aren't on the very start of a region.\n *\n * @param aNeedle The element you are looking for.\n * @param aHaystack The array that is being searched.\n * @param aCompare A function which takes the needle and an element in the\n *     array and returns -1, 0, or 1 depending on whether the needle is less\n *     than, equal to, or greater than the element, respectively.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\n */\nexports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\n  if (aHaystack.length === 0) {\n    return -1;\n  }\n\n  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,\n                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);\n  if (index < 0) {\n    return -1;\n  }\n\n  // We have found either the exact element, or the next-closest element than\n  // the one we are searching for. However, there may be more than one such\n  // element. Make sure we always return the smallest of these.\n  while (index - 1 >= 0) {\n    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\n      break;\n    }\n    --index;\n  }\n\n  return index;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n// It turns out that some (most?) JavaScript engines don't self-host\n// `Array.prototype.sort`. This makes sense because C++ will likely remain\n// faster than JS when doing raw CPU-intensive sorting. However, when using a\n// custom comparator function, calling back and forth between the VM's C++ and\n// JIT'd JS is rather slow *and* loses JIT type information, resulting in\n// worse generated code for the comparator function than would be optimal. In\n// fact, when sorting with a comparator, these costs outweigh the benefits of\n// sorting in C++. By using our own JS-implemented Quick Sort (below), we get\n// a ~3500ms mean speed-up in `bench/bench.html`.\n\n/**\n * Swap the elements indexed by `x` and `y` in the array `ary`.\n *\n * @param {Array} ary\n *        The array.\n * @param {Number} x\n *        The index of the first item.\n * @param {Number} y\n *        The index of the second item.\n */\nfunction swap(ary, x, y) {\n  var temp = ary[x];\n  ary[x] = ary[y];\n  ary[y] = temp;\n}\n\n/**\n * Returns a random integer within the range `low .. high` inclusive.\n *\n * @param {Number} low\n *        The lower bound on the range.\n * @param {Number} high\n *        The upper bound on the range.\n */\nfunction randomIntInRange(low, high) {\n  return Math.round(low + (Math.random() * (high - low)));\n}\n\n/**\n * The Quick Sort algorithm.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n * @param {Number} p\n *        Start index of the array\n * @param {Number} r\n *        End index of the array\n */\nfunction doQuickSort(ary, comparator, p, r) {\n  // If our lower bound is less than our upper bound, we (1) partition the\n  // array into two pieces and (2) recurse on each half. If it is not, this is\n  // the empty array and our base case.\n\n  if (p < r) {\n    // (1) Partitioning.\n    //\n    // The partitioning chooses a pivot between `p` and `r` and moves all\n    // elements that are less than or equal to the pivot to the before it, and\n    // all the elements that are greater than it after it. The effect is that\n    // once partition is done, the pivot is in the exact place it will be when\n    // the array is put in sorted order, and it will not need to be moved\n    // again. This runs in O(n) time.\n\n    // Always choose a random pivot so that an input array which is reverse\n    // sorted does not cause O(n^2) running time.\n    var pivotIndex = randomIntInRange(p, r);\n    var i = p - 1;\n\n    swap(ary, pivotIndex, r);\n    var pivot = ary[r];\n\n    // Immediately after `j` is incremented in this loop, the following hold\n    // true:\n    //\n    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.\n    //\n    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.\n    for (var j = p; j < r; j++) {\n      if (comparator(ary[j], pivot) <= 0) {\n        i += 1;\n        swap(ary, i, j);\n      }\n    }\n\n    swap(ary, i + 1, j);\n    var q = i + 1;\n\n    // (2) Recurse on each half.\n\n    doQuickSort(ary, comparator, p, q - 1);\n    doQuickSort(ary, comparator, q + 1, r);\n  }\n}\n\n/**\n * Sort the given array in-place with the given comparator function.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n */\nexports.quickSort = function (ary, comparator) {\n  doQuickSort(ary, comparator, 0, ary.length - 1);\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar SourceMapGenerator = require('./source-map-generator').SourceMapGenerator;\nvar util = require('./util');\n\n// Matches a Windows-style `\\r\\n` newline or a `\\n` newline used by all other\n// operating systems these days (capturing the result).\nvar REGEX_NEWLINE = /(\\r?\\n)/;\n\n// Newline character code for charCodeAt() comparisons\nvar NEWLINE_CODE = 10;\n\n// Private symbol for identifying `SourceNode`s when multiple versions of\n// the source-map library are loaded. This MUST NOT CHANGE across\n// versions!\nvar isSourceNode = \"$$$isSourceNode$$$\";\n\n/**\n * SourceNodes provide a way to abstract over interpolating/concatenating\n * snippets of generated JavaScript source code while maintaining the line and\n * column information associated with the original source code.\n *\n * @param aLine The original line number.\n * @param aColumn The original column number.\n * @param aSource The original source's filename.\n * @param aChunks Optional. An array of strings which are snippets of\n *        generated JS, or other SourceNodes.\n * @param aName The original identifier.\n */\nfunction SourceNode(aLine, aColumn, aSource, aChunks, aName) {\n  this.children = [];\n  this.sourceContents = {};\n  this.line = aLine == null ? null : aLine;\n  this.column = aColumn == null ? null : aColumn;\n  this.source = aSource == null ? null : aSource;\n  this.name = aName == null ? null : aName;\n  this[isSourceNode] = true;\n  if (aChunks != null) this.add(aChunks);\n}\n\n/**\n * Creates a SourceNode from generated code and a SourceMapConsumer.\n *\n * @param aGeneratedCode The generated code\n * @param aSourceMapConsumer The SourceMap for the generated code\n * @param aRelativePath Optional. The path that relative sources in the\n *        SourceMapConsumer should be relative to.\n */\nSourceNode.fromStringWithSourceMap =\n  function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {\n    // The SourceNode we want to fill with the generated code\n    // and the SourceMap\n    var node = new SourceNode();\n\n    // All even indices of this array are one line of the generated code,\n    // while all odd indices are the newlines between two adjacent lines\n    // (since `REGEX_NEWLINE` captures its match).\n    // Processed fragments are accessed by calling `shiftNextLine`.\n    var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);\n    var remainingLinesIndex = 0;\n    var shiftNextLine = function() {\n      var lineContents = getNextLine();\n      // The last line of a file might not have a newline.\n      var newLine = getNextLine() || \"\";\n      return lineContents + newLine;\n\n      function getNextLine() {\n        return remainingLinesIndex < remainingLines.length ?\n            remainingLines[remainingLinesIndex++] : undefined;\n      }\n    };\n\n    // We need to remember the position of \"remainingLines\"\n    var lastGeneratedLine = 1, lastGeneratedColumn = 0;\n\n    // The generate SourceNodes we need a code range.\n    // To extract it current and last mapping is used.\n    // Here we store the last mapping.\n    var lastMapping = null;\n\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      if (lastMapping !== null) {\n        // We add the code from \"lastMapping\" to \"mapping\":\n        // First check if there is a new line in between.\n        if (lastGeneratedLine < mapping.generatedLine) {\n          // Associate first line with \"lastMapping\"\n          addMappingWithCode(lastMapping, shiftNextLine());\n          lastGeneratedLine++;\n          lastGeneratedColumn = 0;\n          // The remaining code is added without mapping\n        } else {\n          // There is no new line in between.\n          // Associate the code between \"lastGeneratedColumn\" and\n          // \"mapping.generatedColumn\" with \"lastMapping\"\n          var nextLine = remainingLines[remainingLinesIndex] || '';\n          var code = nextLine.substr(0, mapping.generatedColumn -\n                                        lastGeneratedColumn);\n          remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn -\n                                              lastGeneratedColumn);\n          lastGeneratedColumn = mapping.generatedColumn;\n          addMappingWithCode(lastMapping, code);\n          // No more remaining code, continue\n          lastMapping = mapping;\n          return;\n        }\n      }\n      // We add the generated code until the first mapping\n      // to the SourceNode without any mapping.\n      // Each line is added as separate string.\n      while (lastGeneratedLine < mapping.generatedLine) {\n        node.add(shiftNextLine());\n        lastGeneratedLine++;\n      }\n      if (lastGeneratedColumn < mapping.generatedColumn) {\n        var nextLine = remainingLines[remainingLinesIndex] || '';\n        node.add(nextLine.substr(0, mapping.generatedColumn));\n        remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn);\n        lastGeneratedColumn = mapping.generatedColumn;\n      }\n      lastMapping = mapping;\n    }, this);\n    // We have processed all mappings.\n    if (remainingLinesIndex < remainingLines.length) {\n      if (lastMapping) {\n        // Associate the remaining code in the current line with \"lastMapping\"\n        addMappingWithCode(lastMapping, shiftNextLine());\n      }\n      // and add the remaining lines without any mapping\n      node.add(remainingLines.splice(remainingLinesIndex).join(\"\"));\n    }\n\n    // Copy sourcesContent into SourceNode\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aRelativePath != null) {\n          sourceFile = util.join(aRelativePath, sourceFile);\n        }\n        node.setSourceContent(sourceFile, content);\n      }\n    });\n\n    return node;\n\n    function addMappingWithCode(mapping, code) {\n      if (mapping === null || mapping.source === undefined) {\n        node.add(code);\n      } else {\n        var source = aRelativePath\n          ? util.join(aRelativePath, mapping.source)\n          : mapping.source;\n        node.add(new SourceNode(mapping.originalLine,\n                                mapping.originalColumn,\n                                source,\n                                code,\n                                mapping.name));\n      }\n    }\n  };\n\n/**\n * Add a chunk of generated JS to this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.add = function SourceNode_add(aChunk) {\n  if (Array.isArray(aChunk)) {\n    aChunk.forEach(function (chunk) {\n      this.add(chunk);\n    }, this);\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    if (aChunk) {\n      this.children.push(aChunk);\n    }\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Add a chunk of generated JS to the beginning of this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {\n  if (Array.isArray(aChunk)) {\n    for (var i = aChunk.length-1; i >= 0; i--) {\n      this.prepend(aChunk[i]);\n    }\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    this.children.unshift(aChunk);\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Walk over the tree of JS snippets in this node and its children. The\n * walking function is called once for each snippet of JS and is passed that\n * snippet and the its original associated source's line/column location.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walk = function SourceNode_walk(aFn) {\n  var chunk;\n  for (var i = 0, len = this.children.length; i < len; i++) {\n    chunk = this.children[i];\n    if (chunk[isSourceNode]) {\n      chunk.walk(aFn);\n    }\n    else {\n      if (chunk !== '') {\n        aFn(chunk, { source: this.source,\n                     line: this.line,\n                     column: this.column,\n                     name: this.name });\n      }\n    }\n  }\n};\n\n/**\n * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between\n * each of `this.children`.\n *\n * @param aSep The separator.\n */\nSourceNode.prototype.join = function SourceNode_join(aSep) {\n  var newChildren;\n  var i;\n  var len = this.children.length;\n  if (len > 0) {\n    newChildren = [];\n    for (i = 0; i < len-1; i++) {\n      newChildren.push(this.children[i]);\n      newChildren.push(aSep);\n    }\n    newChildren.push(this.children[i]);\n    this.children = newChildren;\n  }\n  return this;\n};\n\n/**\n * Call String.prototype.replace on the very right-most source snippet. Useful\n * for trimming whitespace from the end of a source node, etc.\n *\n * @param aPattern The pattern to replace.\n * @param aReplacement The thing to replace the pattern with.\n */\nSourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {\n  var lastChild = this.children[this.children.length - 1];\n  if (lastChild[isSourceNode]) {\n    lastChild.replaceRight(aPattern, aReplacement);\n  }\n  else if (typeof lastChild === 'string') {\n    this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);\n  }\n  else {\n    this.children.push(''.replace(aPattern, aReplacement));\n  }\n  return this;\n};\n\n/**\n * Set the source content for a source file. This will be added to the SourceMapGenerator\n * in the sourcesContent field.\n *\n * @param aSourceFile The filename of the source file\n * @param aSourceContent The content of the source file\n */\nSourceNode.prototype.setSourceContent =\n  function SourceNode_setSourceContent(aSourceFile, aSourceContent) {\n    this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;\n  };\n\n/**\n * Walk over the tree of SourceNodes. The walking function is called for each\n * source file content and is passed the filename and source content.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walkSourceContents =\n  function SourceNode_walkSourceContents(aFn) {\n    for (var i = 0, len = this.children.length; i < len; i++) {\n      if (this.children[i][isSourceNode]) {\n        this.children[i].walkSourceContents(aFn);\n      }\n    }\n\n    var sources = Object.keys(this.sourceContents);\n    for (var i = 0, len = sources.length; i < len; i++) {\n      aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);\n    }\n  };\n\n/**\n * Return the string representation of this source node. Walks over the tree\n * and concatenates all the various snippets together to one string.\n */\nSourceNode.prototype.toString = function SourceNode_toString() {\n  var str = \"\";\n  this.walk(function (chunk) {\n    str += chunk;\n  });\n  return str;\n};\n\n/**\n * Returns the string representation of this source node along with a source\n * map.\n */\nSourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {\n  var generated = {\n    code: \"\",\n    line: 1,\n    column: 0\n  };\n  var map = new SourceMapGenerator(aArgs);\n  var sourceMappingActive = false;\n  var lastOriginalSource = null;\n  var lastOriginalLine = null;\n  var lastOriginalColumn = null;\n  var lastOriginalName = null;\n  this.walk(function (chunk, original) {\n    generated.code += chunk;\n    if (original.source !== null\n        && original.line !== null\n        && original.column !== null) {\n      if(lastOriginalSource !== original.source\n         || lastOriginalLine !== original.line\n         || lastOriginalColumn !== original.column\n         || lastOriginalName !== original.name) {\n        map.addMapping({\n          source: original.source,\n          original: {\n            line: original.line,\n            column: original.column\n          },\n          generated: {\n            line: generated.line,\n            column: generated.column\n          },\n          name: original.name\n        });\n      }\n      lastOriginalSource = original.source;\n      lastOriginalLine = original.line;\n      lastOriginalColumn = original.column;\n      lastOriginalName = original.name;\n      sourceMappingActive = true;\n    } else if (sourceMappingActive) {\n      map.addMapping({\n        generated: {\n          line: generated.line,\n          column: generated.column\n        }\n      });\n      lastOriginalSource = null;\n      sourceMappingActive = false;\n    }\n    for (var idx = 0, length = chunk.length; idx < length; idx++) {\n      if (chunk.charCodeAt(idx) === NEWLINE_CODE) {\n        generated.line++;\n        generated.column = 0;\n        // Mappings end at eol\n        if (idx + 1 === length) {\n          lastOriginalSource = null;\n          sourceMappingActive = false;\n        } else if (sourceMappingActive) {\n          map.addMapping({\n            source: original.source,\n            original: {\n              line: original.line,\n              column: original.column\n            },\n            generated: {\n              line: generated.line,\n              column: generated.column\n            },\n            name: original.name\n          });\n        }\n      } else {\n        generated.column++;\n      }\n    }\n  });\n  this.walkSourceContents(function (sourceFile, sourceContent) {\n    map.setSourceContent(sourceFile, sourceContent);\n  });\n\n  return { code: generated.code, map: map };\n};\n\nexports.SourceNode = SourceNode;\n","/* eslint-disable new-cap */\nimport Visitor from './visitor';\n\nexport function print(ast) {\n  return new PrintVisitor().accept(ast);\n}\n\nexport function PrintVisitor() {\n  this.padding = 0;\n}\n\nPrintVisitor.prototype = new Visitor();\n\nPrintVisitor.prototype.pad = function(string) {\n  let out = '';\n\n  for (let i = 0, l = this.padding; i < l; i++) {\n    out += '  ';\n  }\n\n  out += string + '\\n';\n  return out;\n};\n\nPrintVisitor.prototype.Program = function(program) {\n  let out = '',\n    body = program.body,\n    i,\n    l;\n\n  if (program.blockParams) {\n    let blockParams = 'BLOCK PARAMS: [';\n    for (i = 0, l = program.blockParams.length; i < l; i++) {\n      blockParams += ' ' + program.blockParams[i];\n    }\n    blockParams += ' ]';\n    out += this.pad(blockParams);\n  }\n\n  for (i = 0, l = body.length; i < l; i++) {\n    out += this.accept(body[i]);\n  }\n\n  this.padding--;\n\n  return out;\n};\n\nPrintVisitor.prototype.MustacheStatement = function(mustache) {\n  return this.pad('{{ ' + this.SubExpression(mustache) + ' }}');\n};\nPrintVisitor.prototype.Decorator = function(mustache) {\n  return this.pad('{{ DIRECTIVE ' + this.SubExpression(mustache) + ' }}');\n};\n\nPrintVisitor.prototype.BlockStatement = PrintVisitor.prototype.DecoratorBlock = function(\n  block\n) {\n  let out = '';\n\n  out += this.pad(\n    (block.type === 'DecoratorBlock' ? 'DIRECTIVE ' : '') + 'BLOCK:'\n  );\n  this.padding++;\n  out += this.pad(this.SubExpression(block));\n  if (block.program) {\n    out += this.pad('PROGRAM:');\n    this.padding++;\n    out += this.accept(block.program);\n    this.padding--;\n  }\n  if (block.inverse) {\n    if (block.program) {\n      this.padding++;\n    }\n    out += this.pad('{{^}}');\n    this.padding++;\n    out += this.accept(block.inverse);\n    this.padding--;\n    if (block.program) {\n      this.padding--;\n    }\n  }\n  this.padding--;\n\n  return out;\n};\n\nPrintVisitor.prototype.PartialStatement = function(partial) {\n  let content = 'PARTIAL:' + partial.name.original;\n  if (partial.params[0]) {\n    content += ' ' + this.accept(partial.params[0]);\n  }\n  if (partial.hash) {\n    content += ' ' + this.accept(partial.hash);\n  }\n  return this.pad('{{> ' + content + ' }}');\n};\nPrintVisitor.prototype.PartialBlockStatement = function(partial) {\n  let content = 'PARTIAL BLOCK:' + partial.name.original;\n  if (partial.params[0]) {\n    content += ' ' + this.accept(partial.params[0]);\n  }\n  if (partial.hash) {\n    content += ' ' + this.accept(partial.hash);\n  }\n\n  content += ' ' + this.pad('PROGRAM:');\n  this.padding++;\n  content += this.accept(partial.program);\n  this.padding--;\n\n  return this.pad('{{> ' + content + ' }}');\n};\n\nPrintVisitor.prototype.ContentStatement = function(content) {\n  return this.pad(\"CONTENT[ '\" + content.value + \"' ]\");\n};\n\nPrintVisitor.prototype.CommentStatement = function(comment) {\n  return this.pad(\"{{! '\" + comment.value + \"' }}\");\n};\n\nPrintVisitor.prototype.SubExpression = function(sexpr) {\n  let params = sexpr.params,\n    paramStrings = [],\n    hash;\n\n  for (let i = 0, l = params.length; i < l; i++) {\n    paramStrings.push(this.accept(params[i]));\n  }\n\n  params = '[' + paramStrings.join(', ') + ']';\n\n  hash = sexpr.hash ? ' ' + this.accept(sexpr.hash) : '';\n\n  return this.accept(sexpr.path) + ' ' + params + hash;\n};\n\nPrintVisitor.prototype.PathExpression = function(id) {\n  let path = id.parts.join('/');\n  return (id.data ? '@' : '') + 'PATH:' + path;\n};\n\nPrintVisitor.prototype.StringLiteral = function(string) {\n  return '\"' + string.value + '\"';\n};\n\nPrintVisitor.prototype.NumberLiteral = function(number) {\n  return 'NUMBER{' + number.value + '}';\n};\n\nPrintVisitor.prototype.BooleanLiteral = function(bool) {\n  return 'BOOLEAN{' + bool.value + '}';\n};\n\nPrintVisitor.prototype.UndefinedLiteral = function() {\n  return 'UNDEFINED';\n};\n\nPrintVisitor.prototype.NullLiteral = function() {\n  return 'NULL';\n};\n\nPrintVisitor.prototype.Hash = function(hash) {\n  let pairs = hash.pairs,\n    joinedPairs = [];\n\n  for (let i = 0, l = pairs.length; i < l; i++) {\n    joinedPairs.push(this.accept(pairs[i]));\n  }\n\n  return 'HASH{' + joinedPairs.join(', ') + '}';\n};\nPrintVisitor.prototype.HashPair = function(pair) {\n  return pair.key + '=' + this.accept(pair.value);\n};\n/* eslint-enable new-cap */\n","/* Notiflix AIO (https://notiflix.github.io) - Version: 3.2.5 - Author: Furkan MT (https://github.com/furcan) - Copyright 2019 - 2022 Notiflix, MIT Licence (https://opensource.org/licenses/MIT) */\n\n(function(t,e){\"function\"==typeof define&&define.amd?define([],function(){return e(t)}):\"object\"==typeof module&&\"object\"==typeof module.exports?module.exports=e(t):t.Notiflix=e(t)})(\"undefined\"==typeof global?\"undefined\"==typeof window?this:window:global,function(t){'use strict';if(\"undefined\"==typeof t&&\"undefined\"==typeof t.document)return!1;var e,i,a,n,o,r=\"\\n\\nVisit documentation page to learn more: https://notiflix.github.io/documentation\",s=\"-apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, \\\"Helvetica Neue\\\", Arial, \\\"Noto Sans\\\", sans-serif\",l={Success:\"Success\",Failure:\"Failure\",Warning:\"Warning\",Info:\"Info\"},m={wrapID:\"NotiflixNotifyWrap\",overlayID:\"NotiflixNotifyOverlay\",width:\"280px\",position:\"right-top\",distance:\"10px\",opacity:1,borderRadius:\"5px\",rtl:!1,timeout:3e3,messageMaxLength:110,backOverlay:!1,backOverlayColor:\"rgba(0,0,0,0.5)\",plainText:!0,showOnlyTheLastOne:!1,clickToClose:!1,pauseOnHover:!0,ID:\"NotiflixNotify\",className:\"notiflix-notify\",zindex:4001,fontFamily:\"Quicksand\",fontSize:\"13px\",cssAnimation:!0,cssAnimationDuration:400,cssAnimationStyle:\"fade\",closeButton:!1,useIcon:!0,useFontAwesome:!1,fontAwesomeIconStyle:\"basic\",fontAwesomeIconSize:\"34px\",success:{background:\"#32c682\",textColor:\"#fff\",childClassName:\"notiflix-notify-success\",notiflixIconColor:\"rgba(0,0,0,0.2)\",fontAwesomeClassName:\"fas fa-check-circle\",fontAwesomeIconColor:\"rgba(0,0,0,0.2)\",backOverlayColor:\"rgba(50,198,130,0.2)\"},failure:{background:\"#ff5549\",textColor:\"#fff\",childClassName:\"notiflix-notify-failure\",notiflixIconColor:\"rgba(0,0,0,0.2)\",fontAwesomeClassName:\"fas fa-times-circle\",fontAwesomeIconColor:\"rgba(0,0,0,0.2)\",backOverlayColor:\"rgba(255,85,73,0.2)\"},warning:{background:\"#eebf31\",textColor:\"#fff\",childClassName:\"notiflix-notify-warning\",notiflixIconColor:\"rgba(0,0,0,0.2)\",fontAwesomeClassName:\"fas fa-exclamation-circle\",fontAwesomeIconColor:\"rgba(0,0,0,0.2)\",backOverlayColor:\"rgba(238,191,49,0.2)\"},info:{background:\"#26c0d3\",textColor:\"#fff\",childClassName:\"notiflix-notify-info\",notiflixIconColor:\"rgba(0,0,0,0.2)\",fontAwesomeClassName:\"fas fa-info-circle\",fontAwesomeIconColor:\"rgba(0,0,0,0.2)\",backOverlayColor:\"rgba(38,192,211,0.2)\"}},c={Success:\"Success\",Failure:\"Failure\",Warning:\"Warning\",Info:\"Info\"},p={ID:\"NotiflixReportWrap\",className:\"notiflix-report\",width:\"320px\",backgroundColor:\"#f8f8f8\",borderRadius:\"25px\",rtl:!1,zindex:4002,backOverlay:!0,backOverlayColor:\"rgba(0,0,0,0.5)\",backOverlayClickToClose:!1,fontFamily:\"Quicksand\",svgSize:\"110px\",plainText:!0,titleFontSize:\"16px\",titleMaxLength:34,messageFontSize:\"13px\",messageMaxLength:400,buttonFontSize:\"14px\",buttonMaxLength:34,cssAnimation:!0,cssAnimationDuration:360,cssAnimationStyle:\"fade\",success:{svgColor:\"#32c682\",titleColor:\"#1e1e1e\",messageColor:\"#242424\",buttonBackground:\"#32c682\",buttonColor:\"#fff\",backOverlayColor:\"rgba(50,198,130,0.2)\"},failure:{svgColor:\"#ff5549\",titleColor:\"#1e1e1e\",messageColor:\"#242424\",buttonBackground:\"#ff5549\",buttonColor:\"#fff\",backOverlayColor:\"rgba(255,85,73,0.2)\"},warning:{svgColor:\"#eebf31\",titleColor:\"#1e1e1e\",messageColor:\"#242424\",buttonBackground:\"#eebf31\",buttonColor:\"#fff\",backOverlayColor:\"rgba(238,191,49,0.2)\"},info:{svgColor:\"#26c0d3\",titleColor:\"#1e1e1e\",messageColor:\"#242424\",buttonBackground:\"#26c0d3\",buttonColor:\"#fff\",backOverlayColor:\"rgba(38,192,211,0.2)\"}},f={Show:\"Show\",Ask:\"Ask\",Prompt:\"Prompt\"},d={ID:\"NotiflixConfirmWrap\",className:\"notiflix-confirm\",width:\"300px\",zindex:4003,position:\"center\",distance:\"10px\",backgroundColor:\"#f8f8f8\",borderRadius:\"25px\",backOverlay:!0,backOverlayColor:\"rgba(0,0,0,0.5)\",rtl:!1,fontFamily:\"Quicksand\",cssAnimation:!0,cssAnimationDuration:300,cssAnimationStyle:\"fade\",plainText:!0,titleColor:\"#32c682\",titleFontSize:\"16px\",titleMaxLength:34,messageColor:\"#1e1e1e\",messageFontSize:\"14px\",messageMaxLength:110,buttonsFontSize:\"15px\",buttonsMaxLength:34,okButtonColor:\"#f8f8f8\",okButtonBackground:\"#32c682\",cancelButtonColor:\"#f8f8f8\",cancelButtonBackground:\"#a9a9a9\"},x={Standard:\"Standard\",Hourglass:\"Hourglass\",Circle:\"Circle\",Arrows:\"Arrows\",Dots:\"Dots\",Pulse:\"Pulse\",Custom:\"Custom\",Notiflix:\"Notiflix\"},g={ID:\"NotiflixLoadingWrap\",className:\"notiflix-loading\",zindex:4e3,backgroundColor:\"rgba(0,0,0,0.8)\",rtl:!1,fontFamily:\"Quicksand\",cssAnimation:!0,cssAnimationDuration:400,clickToClose:!1,customSvgUrl:null,customSvgCode:null,svgSize:\"80px\",svgColor:\"#32c682\",messageID:\"NotiflixLoadingMessage\",messageFontSize:\"15px\",messageMaxLength:34,messageColor:\"#dcdcdc\"},b={Standard:\"Standard\",Hourglass:\"Hourglass\",Circle:\"Circle\",Arrows:\"Arrows\",Dots:\"Dots\",Pulse:\"Pulse\"},u={ID:\"NotiflixBlockWrap\",querySelectorLimit:200,className:\"notiflix-block\",position:\"absolute\",zindex:1e3,backgroundColor:\"rgba(255,255,255,0.9)\",rtl:!1,fontFamily:\"Quicksand\",cssAnimation:!0,cssAnimationDuration:300,svgSize:\"45px\",svgColor:\"#383838\",messageFontSize:\"14px\",messageMaxLength:34,messageColor:\"#383838\"},y=function(t){return console.error(\"%c Notiflix Error \",\"padding:2px;border-radius:20px;color:#fff;background:#ff5549\",\"\\n\"+t+r)},k=function(t){return console.log(\"%c Notiflix Info \",\"padding:2px;border-radius:20px;color:#fff;background:#26c0d3\",\"\\n\"+t+r)},w=function(e){return e||(e=\"head\"),null!==t.document[e]||(y(\"\\nNotiflix needs to be appended to the \\\"<\"+e+\">\\\" element, but you called it before the \\\"<\"+e+\">\\\" element has been created.\"),!1)},h=function(e,i){if(!w(\"head\"))return!1;if(null!==e()&&!t.document.getElementById(i)){var a=t.document.createElement(\"style\");a.id=i,a.innerHTML=e(),t.document.head.appendChild(a)}},v=function(){var t={},e=!1,a=0;\"[object Boolean]\"===Object.prototype.toString.call(arguments[0])&&(e=arguments[0],a++);for(var n=function(i){for(var a in i)Object.prototype.hasOwnProperty.call(i,a)&&(t[a]=e&&\"[object Object]\"===Object.prototype.toString.call(i[a])?v(t[a],i[a]):i[a])};a<arguments.length;a++)n(arguments[a]);return t},N=function(e){var i=t.document.createElement(\"div\");return i.innerHTML=e,i.textContent||i.innerText||\"\"},C=function(t,e){t||(t=\"110px\"),e||(e=\"#32c682\");var i=\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"NXReportSuccess\\\" width=\\\"\"+t+\"\\\" height=\\\"\"+t+\"\\\" fill=\\\"\"+e+\"\\\" viewBox=\\\"0 0 120 120\\\"><style>@-webkit-keyframes NXReportSuccess1-animation{0%{-webkit-transform:translate(60px,57.7px) scale(.5,.5) translate(-60px,-57.7px);transform:translate(60px,57.7px) scale(.5,.5) translate(-60px,-57.7px)}50%,to{-webkit-transform:translate(60px,57.7px) scale(1,1) translate(-60px,-57.7px);transform:translate(60px,57.7px) scale(1,1) translate(-60px,-57.7px)}60%{-webkit-transform:translate(60px,57.7px) scale(.95,.95) translate(-60px,-57.7px);transform:translate(60px,57.7px) scale(.95,.95) translate(-60px,-57.7px)}}@keyframes NXReportSuccess1-animation{0%{-webkit-transform:translate(60px,57.7px) scale(.5,.5) translate(-60px,-57.7px);transform:translate(60px,57.7px) scale(.5,.5) translate(-60px,-57.7px)}50%,to{-webkit-transform:translate(60px,57.7px) scale(1,1) translate(-60px,-57.7px);transform:translate(60px,57.7px) scale(1,1) translate(-60px,-57.7px)}60%{-webkit-transform:translate(60px,57.7px) scale(.95,.95) translate(-60px,-57.7px);transform:translate(60px,57.7px) scale(.95,.95) translate(-60px,-57.7px)}}@-webkit-keyframes NXReportSuccess4-animation{0%{opacity:0}50%,to{opacity:1}}@keyframes NXReportSuccess4-animation{0%{opacity:0}50%,to{opacity:1}}@-webkit-keyframes NXReportSuccess3-animation{0%{opacity:0}40%,to{opacity:1}}@keyframes NXReportSuccess3-animation{0%{opacity:0}40%,to{opacity:1}}@-webkit-keyframes NXReportSuccess2-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@keyframes NXReportSuccess2-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}#NXReportSuccess *{-webkit-animation-duration:1.2s;animation-duration:1.2s;-webkit-animation-timing-function:cubic-bezier(0,0,1,1);animation-timing-function:cubic-bezier(0,0,1,1)}</style><g style=\\\"-webkit-animation-name:NXReportSuccess2-animation;animation-name:NXReportSuccess2-animation;-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)\\\"><path d=\\\"M60 115.38C29.46 115.38 4.62 90.54 4.62 60 4.62 29.46 29.46 4.62 60 4.62c30.54 0 55.38 24.84 55.38 55.38 0 30.54-24.84 55.38-55.38 55.38zM60 0C26.92 0 0 26.92 0 60s26.92 60 60 60 60-26.92 60-60S93.08 0 60 0z\\\" style=\\\"-webkit-animation-name:NXReportSuccess3-animation;animation-name:NXReportSuccess3-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)\\\" fill=\\\"inherit\\\" data-animator-group=\\\"true\\\" data-animator-type=\\\"2\\\"/></g><g style=\\\"-webkit-animation-name:NXReportSuccess1-animation;animation-name:NXReportSuccess1-animation;-webkit-transform:translate(60px,57.7px) scale(1,1) translate(-60px,-57.7px);-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)\\\"><path d=\\\"M88.27 35.39L52.8 75.29 31.43 58.2c-.98-.81-2.44-.63-3.24.36-.79.99-.63 2.44.36 3.24l23.08 18.46c.43.34.93.51 1.44.51.64 0 1.27-.26 1.74-.78l36.91-41.53a2.3 2.3 0 0 0-.19-3.26c-.95-.86-2.41-.77-3.26.19z\\\" style=\\\"-webkit-animation-name:NXReportSuccess4-animation;animation-name:NXReportSuccess4-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)\\\" fill=\\\"inherit\\\" data-animator-group=\\\"true\\\" data-animator-type=\\\"2\\\"/></g></svg>\";return i},z=function(t,e){t||(t=\"110px\"),e||(e=\"#ff5549\");var i=\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"NXReportFailure\\\" width=\\\"\"+t+\"\\\" height=\\\"\"+t+\"\\\" fill=\\\"\"+e+\"\\\" viewBox=\\\"0 0 120 120\\\"><style>@-webkit-keyframes NXReportFailure2-animation{0%{opacity:0}40%,to{opacity:1}}@keyframes NXReportFailure2-animation{0%{opacity:0}40%,to{opacity:1}}@-webkit-keyframes NXReportFailure1-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@keyframes NXReportFailure1-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@-webkit-keyframes NXReportFailure3-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}50%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@keyframes NXReportFailure3-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}50%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@-webkit-keyframes NXReportFailure4-animation{0%{opacity:0}50%,to{opacity:1}}@keyframes NXReportFailure4-animation{0%{opacity:0}50%,to{opacity:1}}#NXReportFailure *{-webkit-animation-duration:1.2s;animation-duration:1.2s;-webkit-animation-timing-function:cubic-bezier(0,0,1,1);animation-timing-function:cubic-bezier(0,0,1,1)}</style><g style=\\\"-webkit-animation-name:NXReportFailure1-animation;animation-name:NXReportFailure1-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)\\\"><path d=\\\"M4.35 34.95c0-16.82 13.78-30.6 30.6-30.6h50.1c16.82 0 30.6 13.78 30.6 30.6v50.1c0 16.82-13.78 30.6-30.6 30.6h-50.1c-16.82 0-30.6-13.78-30.6-30.6v-50.1zM34.95 120h50.1c19.22 0 34.95-15.73 34.95-34.95v-50.1C120 15.73 104.27 0 85.05 0h-50.1C15.73 0 0 15.73 0 34.95v50.1C0 104.27 15.73 120 34.95 120z\\\" style=\\\"-webkit-animation-name:NXReportFailure2-animation;animation-name:NXReportFailure2-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)\\\" fill=\\\"inherit\\\" data-animator-group=\\\"true\\\" data-animator-type=\\\"2\\\"/></g><g style=\\\"-webkit-animation-name:NXReportFailure3-animation;animation-name:NXReportFailure3-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)\\\"><path d=\\\"M82.4 37.6c-.9-.9-2.37-.9-3.27 0L60 56.73 40.86 37.6a2.306 2.306 0 0 0-3.26 3.26L56.73 60 37.6 79.13c-.9.9-.9 2.37 0 3.27.45.45 1.04.68 1.63.68.59 0 1.18-.23 1.63-.68L60 63.26 79.13 82.4c.45.45 1.05.68 1.64.68.58 0 1.18-.23 1.63-.68.9-.9.9-2.37 0-3.27L63.26 60 82.4 40.86c.9-.91.9-2.36 0-3.26z\\\" style=\\\"-webkit-animation-name:NXReportFailure4-animation;animation-name:NXReportFailure4-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)\\\" fill=\\\"inherit\\\" data-animator-group=\\\"true\\\" data-animator-type=\\\"2\\\"/></g></svg>\";return i},S=function(t,e){t||(t=\"110px\"),e||(e=\"#eebf31\");var i=\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"NXReportWarning\\\" width=\\\"\"+t+\"\\\" height=\\\"\"+t+\"\\\" fill=\\\"\"+e+\"\\\" viewBox=\\\"0 0 120 120\\\"><style>@-webkit-keyframes NXReportWarning2-animation{0%{opacity:0}40%,to{opacity:1}}@keyframes NXReportWarning2-animation{0%{opacity:0}40%,to{opacity:1}}@-webkit-keyframes NXReportWarning1-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@keyframes NXReportWarning1-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@-webkit-keyframes NXReportWarning3-animation{0%{-webkit-transform:translate(60px,66.6px) scale(.5,.5) translate(-60px,-66.6px);transform:translate(60px,66.6px) scale(.5,.5) translate(-60px,-66.6px)}50%,to{-webkit-transform:translate(60px,66.6px) scale(1,1) translate(-60px,-66.6px);transform:translate(60px,66.6px) scale(1,1) translate(-60px,-66.6px)}60%{-webkit-transform:translate(60px,66.6px) scale(.95,.95) translate(-60px,-66.6px);transform:translate(60px,66.6px) scale(.95,.95) translate(-60px,-66.6px)}}@keyframes NXReportWarning3-animation{0%{-webkit-transform:translate(60px,66.6px) scale(.5,.5) translate(-60px,-66.6px);transform:translate(60px,66.6px) scale(.5,.5) translate(-60px,-66.6px)}50%,to{-webkit-transform:translate(60px,66.6px) scale(1,1) translate(-60px,-66.6px);transform:translate(60px,66.6px) scale(1,1) translate(-60px,-66.6px)}60%{-webkit-transform:translate(60px,66.6px) scale(.95,.95) translate(-60px,-66.6px);transform:translate(60px,66.6px) scale(.95,.95) translate(-60px,-66.6px)}}@-webkit-keyframes NXReportWarning4-animation{0%{opacity:0}50%,to{opacity:1}}@keyframes NXReportWarning4-animation{0%{opacity:0}50%,to{opacity:1}}#NXReportWarning *{-webkit-animation-duration:1.2s;animation-duration:1.2s;-webkit-animation-timing-function:cubic-bezier(0,0,1,1);animation-timing-function:cubic-bezier(0,0,1,1)}</style><g style=\\\"-webkit-animation-name:NXReportWarning1-animation;animation-name:NXReportWarning1-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)\\\"><path d=\\\"M115.46 106.15l-54.04-93.8c-.61-1.06-2.23-1.06-2.84 0l-54.04 93.8c-.62 1.07.21 2.29 1.42 2.29h108.08c1.21 0 2.04-1.22 1.42-2.29zM65.17 10.2l54.04 93.8c2.28 3.96-.65 8.78-5.17 8.78H5.96c-4.52 0-7.45-4.82-5.17-8.78l54.04-93.8c2.28-3.95 8.03-4 10.34 0z\\\" style=\\\"-webkit-animation-name:NXReportWarning2-animation;animation-name:NXReportWarning2-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)\\\" fill=\\\"inherit\\\" data-animator-group=\\\"true\\\" data-animator-type=\\\"2\\\"/></g><g style=\\\"-webkit-animation-name:NXReportWarning3-animation;animation-name:NXReportWarning3-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform:translate(60px,66.6px) scale(1,1) translate(-60px,-66.6px)\\\"><path d=\\\"M57.83 94.01c0 1.2.97 2.17 2.17 2.17s2.17-.97 2.17-2.17v-3.2c0-1.2-.97-2.17-2.17-2.17s-2.17.97-2.17 2.17v3.2zm0-14.15c0 1.2.97 2.17 2.17 2.17s2.17-.97 2.17-2.17V39.21c0-1.2-.97-2.17-2.17-2.17s-2.17.97-2.17 2.17v40.65z\\\" style=\\\"-webkit-animation-name:NXReportWarning4-animation;animation-name:NXReportWarning4-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)\\\" fill=\\\"inherit\\\" data-animator-group=\\\"true\\\" data-animator-type=\\\"2\\\"/></g></svg>\";return i},L=function(t,e){t||(t=\"110px\"),e||(e=\"#26c0d3\");var i=\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"NXReportInfo\\\" width=\\\"\"+t+\"\\\" height=\\\"\"+t+\"\\\" fill=\\\"\"+e+\"\\\" viewBox=\\\"0 0 120 120\\\"><style>@-webkit-keyframes NXReportInfo4-animation{0%{opacity:0}50%,to{opacity:1}}@keyframes NXReportInfo4-animation{0%{opacity:0}50%,to{opacity:1}}@-webkit-keyframes NXReportInfo3-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}50%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@keyframes NXReportInfo3-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}50%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@-webkit-keyframes NXReportInfo2-animation{0%{opacity:0}40%,to{opacity:1}}@keyframes NXReportInfo2-animation{0%{opacity:0}40%,to{opacity:1}}@-webkit-keyframes NXReportInfo1-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@keyframes NXReportInfo1-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}#NXReportInfo *{-webkit-animation-duration:1.2s;animation-duration:1.2s;-webkit-animation-timing-function:cubic-bezier(0,0,1,1);animation-timing-function:cubic-bezier(0,0,1,1)}</style><g style=\\\"-webkit-animation-name:NXReportInfo1-animation;animation-name:NXReportInfo1-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)\\\"><path d=\\\"M60 115.38C29.46 115.38 4.62 90.54 4.62 60 4.62 29.46 29.46 4.62 60 4.62c30.54 0 55.38 24.84 55.38 55.38 0 30.54-24.84 55.38-55.38 55.38zM60 0C26.92 0 0 26.92 0 60s26.92 60 60 60 60-26.92 60-60S93.08 0 60 0z\\\" style=\\\"-webkit-animation-name:NXReportInfo2-animation;animation-name:NXReportInfo2-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)\\\" fill=\\\"inherit\\\" data-animator-group=\\\"true\\\" data-animator-type=\\\"2\\\"/></g><g style=\\\"-webkit-animation-name:NXReportInfo3-animation;animation-name:NXReportInfo3-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)\\\"><path d=\\\"M57.75 43.85c0-1.24 1.01-2.25 2.25-2.25s2.25 1.01 2.25 2.25v48.18c0 1.24-1.01 2.25-2.25 2.25s-2.25-1.01-2.25-2.25V43.85zm0-15.88c0-1.24 1.01-2.25 2.25-2.25s2.25 1.01 2.25 2.25v3.32c0 1.25-1.01 2.25-2.25 2.25s-2.25-1-2.25-2.25v-3.32z\\\" style=\\\"-webkit-animation-name:NXReportInfo4-animation;animation-name:NXReportInfo4-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)\\\" fill=\\\"inherit\\\" data-animator-group=\\\"true\\\" data-animator-type=\\\"2\\\"/></g></svg>\";return i},W=function(t,e){t||(t=\"60px\"),e||(e=\"#32c682\");var i=\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" stroke=\\\"\"+e+\"\\\" width=\\\"\"+t+\"\\\" height=\\\"\"+t+\"\\\" transform=\\\"scale(.8)\\\" viewBox=\\\"0 0 38 38\\\"><g fill=\\\"none\\\" fill-rule=\\\"evenodd\\\" stroke-width=\\\"2\\\" transform=\\\"translate(1 1)\\\"><circle cx=\\\"18\\\" cy=\\\"18\\\" r=\\\"18\\\" stroke-opacity=\\\".25\\\"/><path d=\\\"M36 18c0-9.94-8.06-18-18-18\\\"><animateTransform attributeName=\\\"transform\\\" dur=\\\"1s\\\" from=\\\"0 18 18\\\" repeatCount=\\\"indefinite\\\" to=\\\"360 18 18\\\" type=\\\"rotate\\\"/></path></g></svg>\";return i},I=function(t,e){t||(t=\"60px\"),e||(e=\"#32c682\");var i=\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"NXLoadingHourglass\\\" fill=\\\"\"+e+\"\\\" width=\\\"\"+t+\"\\\" height=\\\"\"+t+\"\\\" viewBox=\\\"0 0 200 200\\\"><style>@-webkit-keyframes NXhourglass5-animation{0%{-webkit-transform:scale(1,1);transform:scale(1,1)}16.67%{-webkit-transform:scale(1,.8);transform:scale(1,.8)}33.33%{-webkit-transform:scale(.88,.6);transform:scale(.88,.6)}37.5%{-webkit-transform:scale(.85,.55);transform:scale(.85,.55)}41.67%{-webkit-transform:scale(.8,.5);transform:scale(.8,.5)}45.83%{-webkit-transform:scale(.75,.45);transform:scale(.75,.45)}50%{-webkit-transform:scale(.7,.4);transform:scale(.7,.4)}54.17%{-webkit-transform:scale(.6,.35);transform:scale(.6,.35)}58.33%{-webkit-transform:scale(.5,.3);transform:scale(.5,.3)}83.33%,to{-webkit-transform:scale(.2,0);transform:scale(.2,0)}}@keyframes NXhourglass5-animation{0%{-webkit-transform:scale(1,1);transform:scale(1,1)}16.67%{-webkit-transform:scale(1,.8);transform:scale(1,.8)}33.33%{-webkit-transform:scale(.88,.6);transform:scale(.88,.6)}37.5%{-webkit-transform:scale(.85,.55);transform:scale(.85,.55)}41.67%{-webkit-transform:scale(.8,.5);transform:scale(.8,.5)}45.83%{-webkit-transform:scale(.75,.45);transform:scale(.75,.45)}50%{-webkit-transform:scale(.7,.4);transform:scale(.7,.4)}54.17%{-webkit-transform:scale(.6,.35);transform:scale(.6,.35)}58.33%{-webkit-transform:scale(.5,.3);transform:scale(.5,.3)}83.33%,to{-webkit-transform:scale(.2,0);transform:scale(.2,0)}}@-webkit-keyframes NXhourglass3-animation{0%{-webkit-transform:scale(1,.02);transform:scale(1,.02)}79.17%,to{-webkit-transform:scale(1,1);transform:scale(1,1)}}@keyframes NXhourglass3-animation{0%{-webkit-transform:scale(1,.02);transform:scale(1,.02)}79.17%,to{-webkit-transform:scale(1,1);transform:scale(1,1)}}@-webkit-keyframes NXhourglass1-animation{0%,83.33%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}@keyframes NXhourglass1-animation{0%,83.33%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}#NXLoadingHourglass *{-webkit-animation-duration:1.2s;animation-duration:1.2s;-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite;-webkit-animation-timing-function:cubic-bezier(0,0,1,1);animation-timing-function:cubic-bezier(0,0,1,1)}</style><g data-animator-group=\\\"true\\\" data-animator-type=\\\"1\\\" style=\\\"-webkit-animation-name:NXhourglass1-animation;animation-name:NXhourglass1-animation;-webkit-transform-origin:50% 50%;transform-origin:50% 50%;transform-box:fill-box\\\"><g id=\\\"NXhourglass2\\\" fill=\\\"inherit\\\"><g data-animator-group=\\\"true\\\" data-animator-type=\\\"2\\\" style=\\\"-webkit-animation-name:NXhourglass3-animation;animation-name:NXhourglass3-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform-origin:50% 100%;transform-origin:50% 100%;transform-box:fill-box\\\" opacity=\\\".4\\\"><path id=\\\"NXhourglass4\\\" d=\\\"M100 100l-34.38 32.08v31.14h68.76v-31.14z\\\"/></g><g data-animator-group=\\\"true\\\" data-animator-type=\\\"2\\\" style=\\\"-webkit-animation-name:NXhourglass5-animation;animation-name:NXhourglass5-animation;-webkit-transform-origin:50% 100%;transform-origin:50% 100%;transform-box:fill-box\\\" opacity=\\\".4\\\"><path id=\\\"NXhourglass6\\\" d=\\\"M100 100L65.62 67.92V36.78h68.76v31.14z\\\"/></g><path d=\\\"M51.14 38.89h8.33v14.93c0 15.1 8.29 28.99 23.34 39.1 1.88 1.25 3.04 3.97 3.04 7.08s-1.16 5.83-3.04 7.09c-15.05 10.1-23.34 23.99-23.34 39.09v14.93h-8.33a4.859 4.859 0 1 0 0 9.72h97.72a4.859 4.859 0 1 0 0-9.72h-8.33v-14.93c0-15.1-8.29-28.99-23.34-39.09-1.88-1.26-3.04-3.98-3.04-7.09s1.16-5.83 3.04-7.08c15.05-10.11 23.34-24 23.34-39.1V38.89h8.33a4.859 4.859 0 1 0 0-9.72H51.14a4.859 4.859 0 1 0 0 9.72zm79.67 14.93c0 15.87-11.93 26.25-19.04 31.03-4.6 3.08-7.34 8.75-7.34 15.15 0 6.41 2.74 12.07 7.34 15.15 7.11 4.78 19.04 15.16 19.04 31.03v14.93H69.19v-14.93c0-15.87 11.93-26.25 19.04-31.02 4.6-3.09 7.34-8.75 7.34-15.16 0-6.4-2.74-12.07-7.34-15.15-7.11-4.78-19.04-15.16-19.04-31.03V38.89h61.62v14.93z\\\"/></g></g></svg>\";return i},R=function(t,e){t||(t=\"60px\"),e||(e=\"#32c682\");var i=\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"\"+t+\"\\\" height=\\\"\"+t+\"\\\" viewBox=\\\"25 25 50 50\\\" style=\\\"-webkit-animation:rotate 2s linear infinite;animation:rotate 2s linear infinite;height:\"+t+\";-webkit-transform-origin:center center;-ms-transform-origin:center center;transform-origin:center center;width:\"+t+\";position:absolute;top:0;left:0;margin:auto\\\"><style>@-webkit-keyframes rotate{to{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes rotate{to{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@-webkit-keyframes dash{0%{stroke-dasharray:1,200;stroke-dashoffset:0}50%{stroke-dasharray:89,200;stroke-dashoffset:-35}to{stroke-dasharray:89,200;stroke-dashoffset:-124}}@keyframes dash{0%{stroke-dasharray:1,200;stroke-dashoffset:0}50%{stroke-dasharray:89,200;stroke-dashoffset:-35}to{stroke-dasharray:89,200;stroke-dashoffset:-124}}</style><circle cx=\\\"50\\\" cy=\\\"50\\\" r=\\\"20\\\" fill=\\\"none\\\" stroke=\\\"\"+e+\"\\\" stroke-width=\\\"2\\\" style=\\\"-webkit-animation:dash 1.5s ease-in-out infinite,color 1.5s ease-in-out infinite;animation:dash 1.5s ease-in-out infinite,color 1.5s ease-in-out infinite\\\" stroke-dasharray=\\\"150 200\\\" stroke-dashoffset=\\\"-10\\\" stroke-linecap=\\\"round\\\"/></svg>\";return i},A=function(t,e){t||(t=\"60px\"),e||(e=\"#32c682\");var i=\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" fill=\\\"\"+e+\"\\\" width=\\\"\"+t+\"\\\" height=\\\"\"+t+\"\\\" viewBox=\\\"0 0 128 128\\\"><g><path fill=\\\"inherit\\\" d=\\\"M109.25 55.5h-36l12-12a29.54 29.54 0 0 0-49.53 12H18.75A46.04 46.04 0 0 1 96.9 31.84l12.35-12.34v36zm-90.5 17h36l-12 12a29.54 29.54 0 0 0 49.53-12h16.97A46.04 46.04 0 0 1 31.1 96.16L18.74 108.5v-36z\\\"/><animateTransform attributeName=\\\"transform\\\" dur=\\\"1.5s\\\" from=\\\"0 64 64\\\" repeatCount=\\\"indefinite\\\" to=\\\"360 64 64\\\" type=\\\"rotate\\\"/></g></svg>\";return i},M=function(t,e){t||(t=\"60px\"),e||(e=\"#32c682\");var i=\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" fill=\\\"\"+e+\"\\\" width=\\\"\"+t+\"\\\" height=\\\"\"+t+\"\\\" viewBox=\\\"0 0 100 100\\\"><g transform=\\\"translate(25 50)\\\"><circle r=\\\"9\\\" fill=\\\"inherit\\\" transform=\\\"scale(.239)\\\"><animateTransform attributeName=\\\"transform\\\" begin=\\\"-0.266s\\\" calcMode=\\\"spline\\\" dur=\\\"0.8s\\\" keySplines=\\\"0.3 0 0.7 1;0.3 0 0.7 1\\\" keyTimes=\\\"0;0.5;1\\\" repeatCount=\\\"indefinite\\\" type=\\\"scale\\\" values=\\\"0;1;0\\\"/></circle></g><g transform=\\\"translate(50 50)\\\"><circle r=\\\"9\\\" fill=\\\"inherit\\\" transform=\\\"scale(.00152)\\\"><animateTransform attributeName=\\\"transform\\\" begin=\\\"-0.133s\\\" calcMode=\\\"spline\\\" dur=\\\"0.8s\\\" keySplines=\\\"0.3 0 0.7 1;0.3 0 0.7 1\\\" keyTimes=\\\"0;0.5;1\\\" repeatCount=\\\"indefinite\\\" type=\\\"scale\\\" values=\\\"0;1;0\\\"/></circle></g><g transform=\\\"translate(75 50)\\\"><circle r=\\\"9\\\" fill=\\\"inherit\\\" transform=\\\"scale(.299)\\\"><animateTransform attributeName=\\\"transform\\\" begin=\\\"0s\\\" calcMode=\\\"spline\\\" dur=\\\"0.8s\\\" keySplines=\\\"0.3 0 0.7 1;0.3 0 0.7 1\\\" keyTimes=\\\"0;0.5;1\\\" repeatCount=\\\"indefinite\\\" type=\\\"scale\\\" values=\\\"0;1;0\\\"/></circle></g></svg>\";return i},B=function(t,e){t||(t=\"60px\"),e||(e=\"#32c682\");var i=\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" stroke=\\\"\"+e+\"\\\" width=\\\"\"+t+\"\\\" height=\\\"\"+t+\"\\\" viewBox=\\\"0 0 44 44\\\"><g fill=\\\"none\\\" fill-rule=\\\"evenodd\\\" stroke-width=\\\"2\\\"><circle cx=\\\"22\\\" cy=\\\"22\\\" r=\\\"1\\\"><animate attributeName=\\\"r\\\" begin=\\\"0s\\\" calcMode=\\\"spline\\\" dur=\\\"1.8s\\\" keySplines=\\\"0.165, 0.84, 0.44, 1\\\" keyTimes=\\\"0; 1\\\" repeatCount=\\\"indefinite\\\" values=\\\"1; 20\\\"/><animate attributeName=\\\"stroke-opacity\\\" begin=\\\"0s\\\" calcMode=\\\"spline\\\" dur=\\\"1.8s\\\" keySplines=\\\"0.3, 0.61, 0.355, 1\\\" keyTimes=\\\"0; 1\\\" repeatCount=\\\"indefinite\\\" values=\\\"1; 0\\\"/></circle><circle cx=\\\"22\\\" cy=\\\"22\\\" r=\\\"1\\\"><animate attributeName=\\\"r\\\" begin=\\\"-0.9s\\\" calcMode=\\\"spline\\\" dur=\\\"1.8s\\\" keySplines=\\\"0.165, 0.84, 0.44, 1\\\" keyTimes=\\\"0; 1\\\" repeatCount=\\\"indefinite\\\" values=\\\"1; 20\\\"/><animate attributeName=\\\"stroke-opacity\\\" begin=\\\"-0.9s\\\" calcMode=\\\"spline\\\" dur=\\\"1.8s\\\" keySplines=\\\"0.3, 0.61, 0.355, 1\\\" keyTimes=\\\"0; 1\\\" repeatCount=\\\"indefinite\\\" values=\\\"1; 0\\\"/></circle></g></svg>\";return i},X=function(t,e,i){t||(t=\"60px\"),e||(e=\"#f8f8f8\"),i||(i=\"#32c682\");var a=\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"NXLoadingNotiflixLib\\\" width=\\\"\"+t+\"\\\" height=\\\"\"+t+\"\\\" viewBox=\\\"0 0 200 200\\\"><defs><style>@keyframes notiflix-n{0%{stroke-dashoffset:1000}to{stroke-dashoffset:0}}@keyframes notiflix-x{0%{stroke-dashoffset:1000}to{stroke-dashoffset:0}}@keyframes notiflix-dot{0%,to{stroke-width:0}50%{stroke-width:12}}.nx-icon-line{stroke:\"+e+\";stroke-width:12;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:22;fill:none}</style></defs><path d=\\\"M47.97 135.05a6.5 6.5 0 1 1 0 13 6.5 6.5 0 0 1 0-13z\\\" style=\\\"animation-name:notiflix-dot;animation-timing-function:ease-in-out;animation-duration:1.25s;animation-iteration-count:infinite;animation-direction:normal\\\" fill=\\\"\"+i+\"\\\" stroke=\\\"\"+i+\"\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" stroke-miterlimit=\\\"22\\\" stroke-width=\\\"12\\\"/><path class=\\\"nx-icon-line\\\" d=\\\"M10.14 144.76V87.55c0-5.68-4.54-41.36 37.83-41.36 42.36 0 37.82 35.68 37.82 41.36v57.21\\\" style=\\\"animation-name:notiflix-n;animation-timing-function:linear;animation-duration:2.5s;animation-delay:0s;animation-iteration-count:infinite;animation-direction:normal\\\" stroke-dasharray=\\\"500\\\"/><path class=\\\"nx-icon-line\\\" d=\\\"M115.06 144.49c24.98-32.68 49.96-65.35 74.94-98.03M114.89 46.6c25.09 32.58 50.19 65.17 75.29 97.75\\\" style=\\\"animation-name:notiflix-x;animation-timing-function:linear;animation-duration:2.5s;animation-delay:.2s;animation-iteration-count:infinite;animation-direction:normal\\\" stroke-dasharray=\\\"500\\\"/></svg>\";return a},D=function(){return\"[id^=NotiflixNotifyWrap]{pointer-events:none;position:fixed;z-index:4001;opacity:1;right:10px;top:10px;width:280px;max-width:96%;-webkit-box-sizing:border-box;box-sizing:border-box;background:transparent}[id^=NotiflixNotifyWrap].nx-flex-center-center{max-height:calc(100vh - 20px);overflow-x:hidden;overflow-y:auto;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;margin:auto}[id^=NotiflixNotifyWrap]::-webkit-scrollbar{width:0;height:0}[id^=NotiflixNotifyWrap]::-webkit-scrollbar-thumb{background:transparent}[id^=NotiflixNotifyWrap]::-webkit-scrollbar-track{background:transparent}[id^=NotiflixNotifyWrap] *{-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixNotifyOverlay]{-webkit-transition:background .3s ease-in-out;-o-transition:background .3s ease-in-out;transition:background .3s ease-in-out}[id^=NotiflixNotifyWrap]>div{pointer-events:all;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;font-family:\\\"Quicksand\\\",-apple-system,BlinkMacSystemFont,\\\"Segoe UI\\\",Roboto,\\\"Helvetica Neue\\\",Arial,sans-serif;width:100%;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;position:relative;margin:0 0 10px;border-radius:5px;background:#1e1e1e;color:#fff;padding:10px 12px;font-size:14px;line-height:1.4}[id^=NotiflixNotifyWrap]>div:last-child{margin:0}[id^=NotiflixNotifyWrap]>div.nx-with-callback{cursor:pointer}[id^=NotiflixNotifyWrap]>div.nx-with-icon{padding:8px;min-height:56px}[id^=NotiflixNotifyWrap]>div.nx-paused{cursor:auto}[id^=NotiflixNotifyWrap]>div.nx-notify-click-to-close{cursor:pointer}[id^=NotiflixNotifyWrap]>div.nx-with-close-button{padding:10px 36px 10px 12px}[id^=NotiflixNotifyWrap]>div.nx-with-icon.nx-with-close-button{padding:6px 36px 6px 6px}[id^=NotiflixNotifyWrap]>div>span.nx-message{cursor:inherit;font-weight:normal;font-family:inherit!important;word-break:break-all;word-break:break-word}[id^=NotiflixNotifyWrap]>div>span.nx-close-button{cursor:pointer;-webkit-transition:all .2s ease-in-out;-o-transition:all .2s ease-in-out;transition:all .2s ease-in-out;position:absolute;right:8px;top:0;bottom:0;margin:auto;color:inherit;width:20px;height:20px}[id^=NotiflixNotifyWrap]>div>span.nx-close-button:hover{-webkit-transform:rotate(90deg);transform:rotate(90deg)}[id^=NotiflixNotifyWrap]>div>span.nx-close-button>svg{position:absolute;width:16px;height:16px;right:2px;top:2px}[id^=NotiflixNotifyWrap]>div>.nx-message-icon{position:absolute;width:40px;height:40px;font-size:30px;line-height:40px;text-align:center;left:8px;top:0;bottom:0;margin:auto;border-radius:inherit}[id^=NotiflixNotifyWrap]>div>.nx-message-icon-fa.nx-message-icon-fa-shadow{color:inherit;background:rgba(0,0,0,.15);-webkit-box-shadow:inset 0 0 34px rgba(0,0,0,.2);box-shadow:inset 0 0 34px rgba(0,0,0,.2);text-shadow:0 0 10px rgba(0,0,0,.3)}[id^=NotiflixNotifyWrap]>div>span.nx-with-icon{position:relative;float:left;width:calc(100% - 40px);margin:0 0 0 40px;padding:0 0 0 10px;-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixNotifyWrap]>div.nx-rtl-on>.nx-message-icon{left:auto;right:8px}[id^=NotiflixNotifyWrap]>div.nx-rtl-on>span.nx-with-icon{padding:0 10px 0 0;margin:0 40px 0 0}[id^=NotiflixNotifyWrap]>div.nx-rtl-on>span.nx-close-button{right:auto;left:8px}[id^=NotiflixNotifyWrap]>div.nx-with-icon.nx-with-close-button.nx-rtl-on{padding:6px 6px 6px 36px}[id^=NotiflixNotifyWrap]>div.nx-with-close-button.nx-rtl-on{padding:10px 12px 10px 36px}[id^=NotiflixNotifyOverlay].nx-with-animation,[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-fade{-webkit-animation:notify-animation-fade .3s ease-in-out 0s normal;animation:notify-animation-fade .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-fade{0%{opacity:0}100%{opacity:1}}@keyframes notify-animation-fade{0%{opacity:0}100%{opacity:1}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-zoom{-webkit-animation:notify-animation-zoom .3s ease-in-out 0s normal;animation:notify-animation-zoom .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-zoom{0%{-webkit-transform:scale(0);transform:scale(0)}50%{-webkit-transform:scale(1.05);transform:scale(1.05)}100%{-webkit-transform:scale(1);transform:scale(1)}}@keyframes notify-animation-zoom{0%{-webkit-transform:scale(0);transform:scale(0)}50%{-webkit-transform:scale(1.05);transform:scale(1.05)}100%{-webkit-transform:scale(1);transform:scale(1)}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-right{-webkit-animation:notify-animation-from-right .3s ease-in-out 0s normal;animation:notify-animation-from-right .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-from-right{0%{right:-300px;opacity:0}50%{right:8px;opacity:1}100%{right:0;opacity:1}}@keyframes notify-animation-from-right{0%{right:-300px;opacity:0}50%{right:8px;opacity:1}100%{right:0;opacity:1}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-left{-webkit-animation:notify-animation-from-left .3s ease-in-out 0s normal;animation:notify-animation-from-left .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-from-left{0%{left:-300px;opacity:0}50%{left:8px;opacity:1}100%{left:0;opacity:1}}@keyframes notify-animation-from-left{0%{left:-300px;opacity:0}50%{left:8px;opacity:1}100%{left:0;opacity:1}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-top{-webkit-animation:notify-animation-from-top .3s ease-in-out 0s normal;animation:notify-animation-from-top .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-from-top{0%{top:-50px;opacity:0}50%{top:8px;opacity:1}100%{top:0;opacity:1}}@keyframes notify-animation-from-top{0%{top:-50px;opacity:0}50%{top:8px;opacity:1}100%{top:0;opacity:1}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-bottom{-webkit-animation:notify-animation-from-bottom .3s ease-in-out 0s normal;animation:notify-animation-from-bottom .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-from-bottom{0%{bottom:-50px;opacity:0}50%{bottom:8px;opacity:1}100%{bottom:0;opacity:1}}@keyframes notify-animation-from-bottom{0%{bottom:-50px;opacity:0}50%{bottom:8px;opacity:1}100%{bottom:0;opacity:1}}[id^=NotiflixNotifyOverlay].nx-with-animation.nx-remove,[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-fade.nx-remove{opacity:0;-webkit-animation:notify-remove-fade .3s ease-in-out 0s normal;animation:notify-remove-fade .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-fade{0%{opacity:1}100%{opacity:0}}@keyframes notify-remove-fade{0%{opacity:1}100%{opacity:0}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-zoom.nx-remove{-webkit-transform:scale(0);transform:scale(0);-webkit-animation:notify-remove-zoom .3s ease-in-out 0s normal;animation:notify-remove-zoom .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-zoom{0%{-webkit-transform:scale(1);transform:scale(1)}50%{-webkit-transform:scale(1.05);transform:scale(1.05)}100%{-webkit-transform:scale(0);transform:scale(0)}}@keyframes notify-remove-zoom{0%{-webkit-transform:scale(1);transform:scale(1)}50%{-webkit-transform:scale(1.05);transform:scale(1.05)}100%{-webkit-transform:scale(0);transform:scale(0)}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-top.nx-remove{opacity:0;-webkit-animation:notify-remove-to-top .3s ease-in-out 0s normal;animation:notify-remove-to-top .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-to-top{0%{top:0;opacity:1}50%{top:8px;opacity:1}100%{top:-50px;opacity:0}}@keyframes notify-remove-to-top{0%{top:0;opacity:1}50%{top:8px;opacity:1}100%{top:-50px;opacity:0}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-right.nx-remove{opacity:0;-webkit-animation:notify-remove-to-right .3s ease-in-out 0s normal;animation:notify-remove-to-right .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-to-right{0%{right:0;opacity:1}50%{right:8px;opacity:1}100%{right:-300px;opacity:0}}@keyframes notify-remove-to-right{0%{right:0;opacity:1}50%{right:8px;opacity:1}100%{right:-300px;opacity:0}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-bottom.nx-remove{opacity:0;-webkit-animation:notify-remove-to-bottom .3s ease-in-out 0s normal;animation:notify-remove-to-bottom .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-to-bottom{0%{bottom:0;opacity:1}50%{bottom:8px;opacity:1}100%{bottom:-50px;opacity:0}}@keyframes notify-remove-to-bottom{0%{bottom:0;opacity:1}50%{bottom:8px;opacity:1}100%{bottom:-50px;opacity:0}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-left.nx-remove{opacity:0;-webkit-animation:notify-remove-to-left .3s ease-in-out 0s normal;animation:notify-remove-to-left .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-to-left{0%{left:0;opacity:1}50%{left:8px;opacity:1}100%{left:-300px;opacity:0}}@keyframes notify-remove-to-left{0%{left:0;opacity:1}50%{left:8px;opacity:1}100%{left:-300px;opacity:0}}\"},T=0,F=function(a,n,o,r){if(!w(\"body\"))return!1;e||G.Notify.init({});var c=v(!0,e,{});if(\"object\"==typeof o&&!Array.isArray(o)||\"object\"==typeof r&&!Array.isArray(r)){var p={};\"object\"==typeof o?p=o:\"object\"==typeof r&&(p=r),e=v(!0,e,p)}var f=e[a.toLocaleLowerCase(\"en\")];T++,\"string\"!=typeof n&&(n=\"Notiflix \"+a),e.plainText&&(n=N(n)),!e.plainText&&n.length>e.messageMaxLength&&(e=v(!0,e,{closeButton:!0,messageMaxLength:150}),n=\"Possible HTML Tags Error: The \\\"plainText\\\" option is \\\"false\\\" and the notification content length is more than the \\\"messageMaxLength\\\" option.\"),n.length>e.messageMaxLength&&(n=n.substring(0,e.messageMaxLength)+\"...\"),\"shadow\"===e.fontAwesomeIconStyle&&(f.fontAwesomeIconColor=f.background),e.cssAnimation||(e.cssAnimationDuration=0);var d=t.document.getElementById(m.wrapID)||t.document.createElement(\"div\");if(d.id=m.wrapID,d.style.width=e.width,d.style.zIndex=e.zindex,d.style.opacity=e.opacity,\"center-center\"===e.position?(d.style.left=e.distance,d.style.top=e.distance,d.style.right=e.distance,d.style.bottom=e.distance,d.style.margin=\"auto\",d.classList.add(\"nx-flex-center-center\"),d.style.maxHeight=\"calc((100vh - \"+e.distance+\") - \"+e.distance+\")\",d.style.display=\"flex\",d.style.flexWrap=\"wrap\",d.style.flexDirection=\"column\",d.style.justifyContent=\"center\",d.style.alignItems=\"center\",d.style.pointerEvents=\"none\"):\"center-top\"===e.position?(d.style.left=e.distance,d.style.right=e.distance,d.style.top=e.distance,d.style.bottom=\"auto\",d.style.margin=\"auto\"):\"center-bottom\"===e.position?(d.style.left=e.distance,d.style.right=e.distance,d.style.bottom=e.distance,d.style.top=\"auto\",d.style.margin=\"auto\"):\"right-bottom\"===e.position?(d.style.right=e.distance,d.style.bottom=e.distance,d.style.top=\"auto\",d.style.left=\"auto\"):\"left-top\"===e.position?(d.style.left=e.distance,d.style.top=e.distance,d.style.right=\"auto\",d.style.bottom=\"auto\"):\"left-bottom\"===e.position?(d.style.left=e.distance,d.style.bottom=e.distance,d.style.top=\"auto\",d.style.right=\"auto\"):(d.style.right=e.distance,d.style.top=e.distance,d.style.left=\"auto\",d.style.bottom=\"auto\"),e.backOverlay){var x=t.document.getElementById(m.overlayID)||t.document.createElement(\"div\");x.id=m.overlayID,x.style.width=\"100%\",x.style.height=\"100%\",x.style.position=\"fixed\",x.style.zIndex=e.zindex-1,x.style.left=0,x.style.top=0,x.style.right=0,x.style.bottom=0,x.style.background=f.backOverlayColor||e.backOverlayColor,x.className=e.cssAnimation?\"nx-with-animation\":\"\",x.style.animationDuration=e.cssAnimation?e.cssAnimationDuration+\"ms\":\"\",t.document.getElementById(m.overlayID)||t.document.body.appendChild(x)}t.document.getElementById(m.wrapID)||t.document.body.appendChild(d);var g=t.document.createElement(\"div\");g.id=e.ID+\"-\"+T,g.className=e.className+\" \"+f.childClassName+\" \"+(e.cssAnimation?\"nx-with-animation\":\"\")+\" \"+(e.useIcon?\"nx-with-icon\":\"\")+\" nx-\"+e.cssAnimationStyle+\" \"+(e.closeButton&&\"function\"!=typeof o?\"nx-with-close-button\":\"\")+\" \"+(\"function\"==typeof o?\"nx-with-callback\":\"\")+\" \"+(e.clickToClose?\"nx-notify-click-to-close\":\"\"),g.style.fontSize=e.fontSize,g.style.color=f.textColor,g.style.background=f.background,g.style.borderRadius=e.borderRadius,g.style.pointerEvents=\"all\",e.rtl&&(g.setAttribute(\"dir\",\"rtl\"),g.classList.add(\"nx-rtl-on\")),g.style.fontFamily=\"\\\"\"+e.fontFamily+\"\\\", \"+s,e.cssAnimation&&(g.style.animationDuration=e.cssAnimationDuration+\"ms\");var b=\"\";if(e.closeButton&&\"function\"!=typeof o&&(b=\"<span class=\\\"nx-close-button\\\"><svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\"><g><path fill=\\\"\"+f.notiflixIconColor+\"\\\" d=\\\"M0.38 2.19l7.8 7.81 -7.8 7.81c-0.51,0.5 -0.51,1.31 -0.01,1.81 0.25,0.25 0.57,0.38 0.91,0.38 0.34,0 0.67,-0.14 0.91,-0.38l7.81 -7.81 7.81 7.81c0.24,0.24 0.57,0.38 0.91,0.38 0.34,0 0.66,-0.14 0.9,-0.38 0.51,-0.5 0.51,-1.31 0,-1.81l-7.81 -7.81 7.81 -7.81c0.51,-0.5 0.51,-1.31 0,-1.82 -0.5,-0.5 -1.31,-0.5 -1.81,0l-7.81 7.81 -7.81 -7.81c-0.5,-0.5 -1.31,-0.5 -1.81,0 -0.51,0.51 -0.51,1.32 0,1.82z\\\"/></g></svg></span>\"),!e.useIcon)g.innerHTML=\"<span class=\\\"nx-message\\\">\"+n+\"</span>\"+(e.closeButton?b:\"\");else if(e.useFontAwesome)g.innerHTML=\"<i style=\\\"color:\"+f.fontAwesomeIconColor+\"; font-size:\"+e.fontAwesomeIconSize+\";\\\" class=\\\"nx-message-icon nx-message-icon-fa \"+f.fontAwesomeClassName+\" \"+(\"shadow\"===e.fontAwesomeIconStyle?\"nx-message-icon-fa-shadow\":\"nx-message-icon-fa-basic\")+\"\\\"></i><span class=\\\"nx-message nx-with-icon\\\">\"+n+\"</span>\"+(e.closeButton?b:\"\");else{var u=\"\";a===l.Success?u=\"<svg class=\\\"nx-message-icon\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"40\\\" height=\\\"40\\\" viewBox=\\\"0 0 40 40\\\"><g><path fill=\\\"\"+f.notiflixIconColor+\"\\\" d=\\\"M20 0c11.03,0 20,8.97 20,20 0,11.03 -8.97,20 -20,20 -11.03,0 -20,-8.97 -20,-20 0,-11.03 8.97,-20 20,-20zm0 37.98c9.92,0 17.98,-8.06 17.98,-17.98 0,-9.92 -8.06,-17.98 -17.98,-17.98 -9.92,0 -17.98,8.06 -17.98,17.98 0,9.92 8.06,17.98 17.98,17.98zm-2.4 -13.29l11.52 -12.96c0.37,-0.41 1.01,-0.45 1.42,-0.08 0.42,0.37 0.46,1 0.09,1.42l-12.16 13.67c-0.19,0.22 -0.46,0.34 -0.75,0.34 -0.23,0 -0.45,-0.07 -0.63,-0.22l-7.6 -6.07c-0.43,-0.35 -0.5,-0.99 -0.16,-1.42 0.35,-0.43 0.99,-0.5 1.42,-0.16l6.85 5.48z\\\"/></g></svg>\":a===l.Failure?u=\"<svg class=\\\"nx-message-icon\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"40\\\" height=\\\"40\\\" viewBox=\\\"0 0 40 40\\\"><g><path fill=\\\"\"+f.notiflixIconColor+\"\\\" d=\\\"M20 0c11.03,0 20,8.97 20,20 0,11.03 -8.97,20 -20,20 -11.03,0 -20,-8.97 -20,-20 0,-11.03 8.97,-20 20,-20zm0 37.98c9.92,0 17.98,-8.06 17.98,-17.98 0,-9.92 -8.06,-17.98 -17.98,-17.98 -9.92,0 -17.98,8.06 -17.98,17.98 0,9.92 8.06,17.98 17.98,17.98zm1.42 -17.98l6.13 6.12c0.39,0.4 0.39,1.04 0,1.43 -0.19,0.19 -0.45,0.29 -0.71,0.29 -0.27,0 -0.53,-0.1 -0.72,-0.29l-6.12 -6.13 -6.13 6.13c-0.19,0.19 -0.44,0.29 -0.71,0.29 -0.27,0 -0.52,-0.1 -0.71,-0.29 -0.39,-0.39 -0.39,-1.03 0,-1.43l6.13 -6.12 -6.13 -6.13c-0.39,-0.39 -0.39,-1.03 0,-1.42 0.39,-0.39 1.03,-0.39 1.42,0l6.13 6.12 6.12 -6.12c0.4,-0.39 1.04,-0.39 1.43,0 0.39,0.39 0.39,1.03 0,1.42l-6.13 6.13z\\\"/></g></svg>\":a===l.Warning?u=\"<svg class=\\\"nx-message-icon\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"40\\\" height=\\\"40\\\" viewBox=\\\"0 0 40 40\\\"><g><path fill=\\\"\"+f.notiflixIconColor+\"\\\" d=\\\"M21.91 3.48l17.8 30.89c0.84,1.46 -0.23,3.25 -1.91,3.25l-35.6 0c-1.68,0 -2.75,-1.79 -1.91,-3.25l17.8 -30.89c0.85,-1.47 2.97,-1.47 3.82,0zm16.15 31.84l-17.8 -30.89c-0.11,-0.2 -0.41,-0.2 -0.52,0l-17.8 30.89c-0.12,0.2 0.05,0.4 0.26,0.4l35.6 0c0.21,0 0.38,-0.2 0.26,-0.4zm-19.01 -4.12l0 -1.05c0,-0.53 0.42,-0.95 0.95,-0.95 0.53,0 0.95,0.42 0.95,0.95l0 1.05c0,0.53 -0.42,0.95 -0.95,0.95 -0.53,0 -0.95,-0.42 -0.95,-0.95zm0 -4.66l0 -13.39c0,-0.52 0.42,-0.95 0.95,-0.95 0.53,0 0.95,0.43 0.95,0.95l0 13.39c0,0.53 -0.42,0.96 -0.95,0.96 -0.53,0 -0.95,-0.43 -0.95,-0.96z\\\"/></g></svg>\":a===l.Info&&(u=\"<svg class=\\\"nx-message-icon\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"40\\\" height=\\\"40\\\" viewBox=\\\"0 0 40 40\\\"><g><path fill=\\\"\"+f.notiflixIconColor+\"\\\" d=\\\"M20 0c11.03,0 20,8.97 20,20 0,11.03 -8.97,20 -20,20 -11.03,0 -20,-8.97 -20,-20 0,-11.03 8.97,-20 20,-20zm0 37.98c9.92,0 17.98,-8.06 17.98,-17.98 0,-9.92 -8.06,-17.98 -17.98,-17.98 -9.92,0 -17.98,8.06 -17.98,17.98 0,9.92 8.06,17.98 17.98,17.98zm-0.99 -23.3c0,-0.54 0.44,-0.98 0.99,-0.98 0.55,0 0.99,0.44 0.99,0.98l0 15.86c0,0.55 -0.44,0.99 -0.99,0.99 -0.55,0 -0.99,-0.44 -0.99,-0.99l0 -15.86zm0 -5.22c0,-0.55 0.44,-0.99 0.99,-0.99 0.55,0 0.99,0.44 0.99,0.99l0 1.09c0,0.54 -0.44,0.99 -0.99,0.99 -0.55,0 -0.99,-0.45 -0.99,-0.99l0 -1.09z\\\"/></g></svg>\"),g.innerHTML=u+\"<span class=\\\"nx-message nx-with-icon\\\">\"+n+\"</span>\"+(e.closeButton?b:\"\")}if(\"left-bottom\"===e.position||\"right-bottom\"===e.position){var y=t.document.getElementById(m.wrapID);y.insertBefore(g,y.firstChild)}else t.document.getElementById(m.wrapID).appendChild(g);var k=t.document.getElementById(g.id);if(k){var h,C,z=function(){k.classList.add(\"nx-remove\");var e=t.document.getElementById(m.overlayID);e&&0>=d.childElementCount&&e.classList.add(\"nx-remove\"),clearTimeout(h)},S=function(){if(k&&null!==k.parentNode&&k.parentNode.removeChild(k),0>=d.childElementCount&&null!==d.parentNode){d.parentNode.removeChild(d);var e=t.document.getElementById(m.overlayID);e&&null!==e.parentNode&&e.parentNode.removeChild(e)}clearTimeout(C)};if(e.closeButton&&\"function\"!=typeof o){var L=t.document.getElementById(g.id).querySelector(\"span.nx-close-button\");L.addEventListener(\"click\",function(){z();var t=setTimeout(function(){S(),clearTimeout(t)},e.cssAnimationDuration)})}if((\"function\"==typeof o||e.clickToClose)&&k.addEventListener(\"click\",function(){\"function\"==typeof o&&o(),z();var t=setTimeout(function(){S(),clearTimeout(t)},e.cssAnimationDuration)}),!e.closeButton&&\"function\"!=typeof o){var W=function(){h=setTimeout(function(){z()},e.timeout),C=setTimeout(function(){S()},e.timeout+e.cssAnimationDuration)};W(),e.pauseOnHover&&(k.addEventListener(\"mouseenter\",function(){k.classList.add(\"nx-paused\"),clearTimeout(h),clearTimeout(C)}),k.addEventListener(\"mouseleave\",function(){k.classList.remove(\"nx-paused\"),W()}))}}if(e.showOnlyTheLastOne&&0<T)for(var I,R=t.document.querySelectorAll(\"[id^=\"+e.ID+\"-]:not([id=\"+e.ID+\"-\"+T+\"])\"),A=0;A<R.length;A++)I=R[A],null!==I.parentNode&&I.parentNode.removeChild(I);e=v(!0,e,c)},E=function(){return\"[id^=NotiflixReportWrap]{position:fixed;z-index:4002;width:100%;height:100%;-webkit-box-sizing:border-box;box-sizing:border-box;font-family:\\\"Quicksand\\\",-apple-system,BlinkMacSystemFont,\\\"Segoe UI\\\",Roboto,\\\"Helvetica Neue\\\",Arial,sans-serif;left:0;top:0;padding:10px;color:#1e1e1e;border-radius:25px;background:transparent;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center}[id^=NotiflixReportWrap] *{-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixReportWrap]>div[class*=\\\"-overlay\\\"]{width:100%;height:100%;left:0;top:0;background:rgba(255,255,255,.5);position:fixed;z-index:0}[id^=NotiflixReportWrap]>div.nx-report-click-to-close{cursor:pointer}[id^=NotiflixReportWrap]>div[class*=\\\"-content\\\"]{width:320px;max-width:100%;max-height:96vh;overflow-x:hidden;overflow-y:auto;border-radius:inherit;padding:10px;-webkit-filter:drop-shadow(0 0 5px rgba(0,0,0,0.05));filter:drop-shadow(0 0 5px rgba(0, 0, 0, .05));border:1px solid rgba(0,0,0,.03);background:#f8f8f8;position:relative;z-index:1}[id^=NotiflixReportWrap]>div[class*=\\\"-content\\\"]::-webkit-scrollbar{width:0;height:0}[id^=NotiflixReportWrap]>div[class*=\\\"-content\\\"]::-webkit-scrollbar-thumb{background:transparent}[id^=NotiflixReportWrap]>div[class*=\\\"-content\\\"]::-webkit-scrollbar-track{background:transparent}[id^=NotiflixReportWrap]>div[class*=\\\"-content\\\"]>div[class$=\\\"-icon\\\"]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;width:110px;height:110px;display:block;margin:6px auto 12px}[id^=NotiflixReportWrap]>div[class*=\\\"-content\\\"]>div[class$=\\\"-icon\\\"] svg{min-width:100%;max-width:100%;height:auto}[id^=NotiflixReportWrap]>*>h5{word-break:break-all;word-break:break-word;font-family:inherit!important;font-size:16px;font-weight:500;line-height:1.4;margin:0 0 10px;padding:0 0 10px;border-bottom:1px solid rgba(0,0,0,.1);float:left;width:100%;text-align:center}[id^=NotiflixReportWrap]>*>p{word-break:break-all;word-break:break-word;font-family:inherit!important;font-size:13px;line-height:1.4;font-weight:normal;float:left;width:100%;padding:0 10px;margin:0 0 10px}[id^=NotiflixReportWrap] a#NXReportButton{word-break:break-all;word-break:break-word;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;font-family:inherit!important;-webkit-transition:all .25s ease-in-out;-o-transition:all .25s ease-in-out;transition:all .25s ease-in-out;cursor:pointer;float:right;padding:7px 17px;background:#32c682;font-size:14px;line-height:1.4;font-weight:500;border-radius:inherit!important;color:#fff}[id^=NotiflixReportWrap] a#NXReportButton:hover{-webkit-box-shadow:inset 0 -60px 5px -5px rgba(0,0,0,.25);box-shadow:inset 0 -60px 5px -5px rgba(0,0,0,.25)}[id^=NotiflixReportWrap].nx-rtl-on a#NXReportButton{float:left}[id^=NotiflixReportWrap]>div[class*=\\\"-overlay\\\"].nx-with-animation{-webkit-animation:report-overlay-animation .3s ease-in-out 0s normal;animation:report-overlay-animation .3s ease-in-out 0s normal}@-webkit-keyframes report-overlay-animation{0%{opacity:0}100%{opacity:1}}@keyframes report-overlay-animation{0%{opacity:0}100%{opacity:1}}[id^=NotiflixReportWrap]>div[class*=\\\"-content\\\"].nx-with-animation.nx-fade{-webkit-animation:report-animation-fade .3s ease-in-out 0s normal;animation:report-animation-fade .3s ease-in-out 0s normal}@-webkit-keyframes report-animation-fade{0%{opacity:0}100%{opacity:1}}@keyframes report-animation-fade{0%{opacity:0}100%{opacity:1}}[id^=NotiflixReportWrap]>div[class*=\\\"-content\\\"].nx-with-animation.nx-zoom{-webkit-animation:report-animation-zoom .3s ease-in-out 0s normal;animation:report-animation-zoom .3s ease-in-out 0s normal}@-webkit-keyframes report-animation-zoom{0%{opacity:0;-webkit-transform:scale(.5);transform:scale(.5)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}@keyframes report-animation-zoom{0%{opacity:0;-webkit-transform:scale(.5);transform:scale(.5)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}[id^=NotiflixReportWrap].nx-remove>div[class*=\\\"-overlay\\\"].nx-with-animation{opacity:0;-webkit-animation:report-overlay-animation-remove .3s ease-in-out 0s normal;animation:report-overlay-animation-remove .3s ease-in-out 0s normal}@-webkit-keyframes report-overlay-animation-remove{0%{opacity:1}100%{opacity:0}}@keyframes report-overlay-animation-remove{0%{opacity:1}100%{opacity:0}}[id^=NotiflixReportWrap].nx-remove>div[class*=\\\"-content\\\"].nx-with-animation.nx-fade{opacity:0;-webkit-animation:report-animation-fade-remove .3s ease-in-out 0s normal;animation:report-animation-fade-remove .3s ease-in-out 0s normal}@-webkit-keyframes report-animation-fade-remove{0%{opacity:1}100%{opacity:0}}@keyframes report-animation-fade-remove{0%{opacity:1}100%{opacity:0}}[id^=NotiflixReportWrap].nx-remove>div[class*=\\\"-content\\\"].nx-with-animation.nx-zoom{opacity:0;-webkit-animation:report-animation-zoom-remove .3s ease-in-out 0s normal;animation:report-animation-zoom-remove .3s ease-in-out 0s normal}@-webkit-keyframes report-animation-zoom-remove{0%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}50%{opacity:.5;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:0;-webkit-transform:scale(0);transform:scale(0)}}@keyframes report-animation-zoom-remove{0%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}50%{opacity:.5;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:0;-webkit-transform:scale(0);transform:scale(0)}}\"},j=function(e,a,n,o,r,l){if(!w(\"body\"))return!1;i||G.Report.init({});var m={};if(\"object\"==typeof r&&!Array.isArray(r)||\"object\"==typeof l&&!Array.isArray(l)){var f={};\"object\"==typeof r?f=r:\"object\"==typeof l&&(f=l),m=v(!0,i,{}),i=v(!0,i,f)}var d=i[e.toLocaleLowerCase(\"en\")];\"string\"!=typeof a&&(a=\"Notiflix \"+e),\"string\"!=typeof n&&(e===c.Success?n=\"\\\"Do not try to become a person of success but try to become a person of value.\\\" <br><br>- Albert Einstein\":e===c.Failure?n=\"\\\"Failure is simply the opportunity to begin again, this time more intelligently.\\\" <br><br>- Henry Ford\":e===c.Warning?n=\"\\\"The peoples who want to live comfortably without producing and fatigue; they are doomed to lose their dignity, then liberty, and then independence and destiny.\\\" <br><br>- Mustafa Kemal Ataturk\":e===c.Info&&(n=\"\\\"Knowledge rests not upon truth alone, but upon error also.\\\" <br><br>- Carl Gustav Jung\")),\"string\"!=typeof o&&(o=\"Okay\"),i.plainText&&(a=N(a),n=N(n),o=N(o)),i.plainText||(a.length>i.titleMaxLength&&(a=\"Possible HTML Tags Error\",n=\"The \\\"plainText\\\" option is \\\"false\\\" and the title content length is more than the \\\"titleMaxLength\\\" option.\",o=\"Okay\"),n.length>i.messageMaxLength&&(a=\"Possible HTML Tags Error\",n=\"The \\\"plainText\\\" option is \\\"false\\\" and the message content length is more than the \\\"messageMaxLength\\\" option.\",o=\"Okay\"),o.length>i.buttonMaxLength&&(a=\"Possible HTML Tags Error\",n=\"The \\\"plainText\\\" option is \\\"false\\\" and the button content length is more than the \\\"buttonMaxLength\\\" option.\",o=\"Okay\")),a.length>i.titleMaxLength&&(a=a.substring(0,i.titleMaxLength)+\"...\"),n.length>i.messageMaxLength&&(n=n.substring(0,i.messageMaxLength)+\"...\"),o.length>i.buttonMaxLength&&(o=o.substring(0,i.buttonMaxLength)+\"...\"),i.cssAnimation||(i.cssAnimationDuration=0);var x=t.document.createElement(\"div\");x.id=p.ID,x.className=i.className,x.style.zIndex=i.zindex,x.style.borderRadius=i.borderRadius,x.style.fontFamily=\"\\\"\"+i.fontFamily+\"\\\", \"+s,i.rtl&&(x.setAttribute(\"dir\",\"rtl\"),x.classList.add(\"nx-rtl-on\")),x.style.display=\"flex\",x.style.flexWrap=\"wrap\",x.style.flexDirection=\"column\",x.style.alignItems=\"center\",x.style.justifyContent=\"center\";var g=\"\",b=!0===i.backOverlayClickToClose;i.backOverlay&&(g=\"<div class=\\\"\"+i.className+\"-overlay\"+(i.cssAnimation?\" nx-with-animation\":\"\")+(b?\" nx-report-click-to-close\":\"\")+\"\\\" style=\\\"background:\"+(d.backOverlayColor||i.backOverlayColor)+\";animation-duration:\"+i.cssAnimationDuration+\"ms;\\\"></div>\");var u=\"\";if(e===c.Success?u=C(i.svgSize,d.svgColor):e===c.Failure?u=z(i.svgSize,d.svgColor):e===c.Warning?u=S(i.svgSize,d.svgColor):e===c.Info&&(u=L(i.svgSize,d.svgColor)),x.innerHTML=g+\"<div class=\\\"\"+i.className+\"-content\"+(i.cssAnimation?\" nx-with-animation \":\"\")+\" nx-\"+i.cssAnimationStyle+\"\\\" style=\\\"width:\"+i.width+\"; background:\"+i.backgroundColor+\"; animation-duration:\"+i.cssAnimationDuration+\"ms;\\\"><div style=\\\"width:\"+i.svgSize+\"; height:\"+i.svgSize+\";\\\" class=\\\"\"+i.className+\"-icon\\\">\"+u+\"</div><h5 class=\\\"\"+i.className+\"-title\\\" style=\\\"font-weight:500; font-size:\"+i.titleFontSize+\"; color:\"+d.titleColor+\";\\\">\"+a+\"</h5><p class=\\\"\"+i.className+\"-message\\\" style=\\\"font-size:\"+i.messageFontSize+\"; color:\"+d.messageColor+\";\\\">\"+n+\"</p><a id=\\\"NXReportButton\\\" class=\\\"\"+i.className+\"-button\\\" style=\\\"font-weight:500; font-size:\"+i.buttonFontSize+\"; background:\"+d.buttonBackground+\"; color:\"+d.buttonColor+\";\\\">\"+o+\"</a></div>\",!t.document.getElementById(x.id)){t.document.body.appendChild(x);var y=function(){var e=t.document.getElementById(x.id);e.classList.add(\"nx-remove\");var a=setTimeout(function(){null!==e.parentNode&&e.parentNode.removeChild(e),clearTimeout(a)},i.cssAnimationDuration)},k=t.document.getElementById(\"NXReportButton\");if(k.addEventListener(\"click\",function(){\"function\"==typeof r&&r(),y()}),g&&b){var h=t.document.querySelector(\".nx-report-click-to-close\");h.addEventListener(\"click\",function(){y()})}}i=v(!0,i,m)},O=function(){return\"[id^=NotiflixConfirmWrap]{position:fixed;z-index:4003;width:100%;height:100%;left:0;top:0;padding:10px;-webkit-box-sizing:border-box;box-sizing:border-box;background:transparent;font-family:\\\"Quicksand\\\",-apple-system,BlinkMacSystemFont,\\\"Segoe UI\\\",Roboto,\\\"Helvetica Neue\\\",Arial,sans-serif;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center}[id^=NotiflixConfirmWrap].nx-position-center-top{-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start}[id^=NotiflixConfirmWrap].nx-position-center-bottom{-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end}[id^=NotiflixConfirmWrap].nx-position-left-top{-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start}[id^=NotiflixConfirmWrap].nx-position-left-center{-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start}[id^=NotiflixConfirmWrap].nx-position-left-bottom{-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start;-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end}[id^=NotiflixConfirmWrap].nx-position-right-top{-webkit-box-align:end;-webkit-align-items:flex-end;-ms-flex-align:end;align-items:flex-end;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start}[id^=NotiflixConfirmWrap].nx-position-right-center{-webkit-box-align:end;-webkit-align-items:flex-end;-ms-flex-align:end;align-items:flex-end}[id^=NotiflixConfirmWrap].nx-position-right-bottom{-webkit-box-align:end;-webkit-align-items:flex-end;-ms-flex-align:end;align-items:flex-end;-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end}[id^=NotiflixConfirmWrap] *{-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixConfirmWrap]>div[class*=\\\"-overlay\\\"]{width:100%;height:100%;left:0;top:0;background:rgba(255,255,255,.5);position:fixed;z-index:0}[id^=NotiflixConfirmWrap]>div[class*=\\\"-overlay\\\"].nx-with-animation{-webkit-animation:confirm-overlay-animation .3s ease-in-out 0s normal;animation:confirm-overlay-animation .3s ease-in-out 0s normal}@-webkit-keyframes confirm-overlay-animation{0%{opacity:0}100%{opacity:1}}@keyframes confirm-overlay-animation{0%{opacity:0}100%{opacity:1}}[id^=NotiflixConfirmWrap].nx-remove>div[class*=\\\"-overlay\\\"].nx-with-animation{opacity:0;-webkit-animation:confirm-overlay-animation-remove .3s ease-in-out 0s normal;animation:confirm-overlay-animation-remove .3s ease-in-out 0s normal}@-webkit-keyframes confirm-overlay-animation-remove{0%{opacity:1}100%{opacity:0}}@keyframes confirm-overlay-animation-remove{0%{opacity:1}100%{opacity:0}}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]{width:300px;max-width:100%;max-height:96vh;overflow-x:hidden;overflow-y:auto;border-radius:25px;padding:10px;margin:0;-webkit-filter:drop-shadow(0 0 5px rgba(0,0,0,0.05));filter:drop-shadow(0 0 5px rgba(0, 0, 0, .05));background:#f8f8f8;color:#1e1e1e;position:relative;z-index:1;text-align:center}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]::-webkit-scrollbar{width:0;height:0}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]::-webkit-scrollbar-thumb{background:transparent}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]::-webkit-scrollbar-track{background:transparent}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-head\\\"]{float:left;width:100%;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-head\\\"]>h5{float:left;width:100%;margin:0;padding:0 0 10px;border-bottom:1px solid rgba(0,0,0,.1);color:#32c682;font-family:inherit!important;font-size:16px;line-height:1.4;font-weight:500;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-head\\\"]>div{font-family:inherit!important;margin:15px 0 20px;padding:0 10px;float:left;width:100%;font-size:14px;line-height:1.4;font-weight:normal;color:inherit;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-head\\\"]>div>div{font-family:inherit!important;float:left;width:100%;margin:15px 0 0;padding:0}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-head\\\"]>div>div>input{font-family:inherit!important;float:left;width:100%;height:40px;margin:0;padding:0 15px;border:1px solid rgba(0,0,0,.1);border-radius:25px;font-size:14px;font-weight:normal;line-height:1;-webkit-transition:all .25s ease-in-out;-o-transition:all .25s ease-in-out;transition:all .25s ease-in-out;text-align:left}[id^=NotiflixConfirmWrap].nx-rtl-on>div[class*=\\\"-content\\\"]>div[class*=\\\"-head\\\"]>div>div>input{text-align:right}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-head\\\"]>div>div>input:hover{border-color:rgba(0,0,0,.1)}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-head\\\"]>div>div>input:focus{border-color:rgba(0,0,0,.3)}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-head\\\"]>div>div>input.nx-validation-failure{border-color:#ff5549}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-head\\\"]>div>div>input.nx-validation-success{border-color:#32c682}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-buttons\\\"]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;border-radius:inherit;float:left;width:100%;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-buttons\\\"]>a{cursor:pointer;font-family:inherit!important;-webkit-transition:all .25s ease-in-out;-o-transition:all .25s ease-in-out;transition:all .25s ease-in-out;float:left;width:48%;padding:9px 5px;border-radius:inherit!important;font-weight:500;font-size:15px;line-height:1.4;color:#f8f8f8;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-buttons\\\"]>a.nx-confirm-button-ok{margin:0 2% 0 0;background:#32c682}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-buttons\\\"]>a.nx-confirm-button-cancel{margin:0 0 0 2%;background:#a9a9a9}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-buttons\\\"]>a.nx-full{margin:0;width:100%}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-buttons\\\"]>a:hover{-webkit-box-shadow:inset 0 -60px 5px -5px rgba(0,0,0,.25);box-shadow:inset 0 -60px 5px -5px rgba(0,0,0,.25)}[id^=NotiflixConfirmWrap].nx-rtl-on>div[class*=\\\"-content\\\"]>div[class*=\\\"-buttons\\\"],[id^=NotiflixConfirmWrap].nx-rtl-on>div[class*=\\\"-content\\\"]>div[class*=\\\"-buttons\\\"]>a{-webkit-transform:rotateY(180deg);transform:rotateY(180deg)}[id^=NotiflixConfirmWrap].nx-with-animation.nx-fade>div[class*=\\\"-content\\\"]{-webkit-animation:confirm-animation-fade .3s ease-in-out 0s normal;animation:confirm-animation-fade .3s ease-in-out 0s normal}@-webkit-keyframes confirm-animation-fade{0%{opacity:0}100%{opacity:1}}@keyframes confirm-animation-fade{0%{opacity:0}100%{opacity:1}}[id^=NotiflixConfirmWrap].nx-with-animation.nx-zoom>div[class*=\\\"-content\\\"]{-webkit-animation:confirm-animation-zoom .3s ease-in-out 0s normal;animation:confirm-animation-zoom .3s ease-in-out 0s normal}@-webkit-keyframes confirm-animation-zoom{0%{opacity:0;-webkit-transform:scale(.5);transform:scale(.5)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}@keyframes confirm-animation-zoom{0%{opacity:0;-webkit-transform:scale(.5);transform:scale(.5)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}[id^=NotiflixConfirmWrap].nx-with-animation.nx-fade.nx-remove>div[class*=\\\"-content\\\"]{opacity:0;-webkit-animation:confirm-animation-fade-remove .3s ease-in-out 0s normal;animation:confirm-animation-fade-remove .3s ease-in-out 0s normal}@-webkit-keyframes confirm-animation-fade-remove{0%{opacity:1}100%{opacity:0}}@keyframes confirm-animation-fade-remove{0%{opacity:1}100%{opacity:0}}[id^=NotiflixConfirmWrap].nx-with-animation.nx-zoom.nx-remove>div[class*=\\\"-content\\\"]{opacity:0;-webkit-animation:confirm-animation-zoom-remove .3s ease-in-out 0s normal;animation:confirm-animation-zoom-remove .3s ease-in-out 0s normal}@-webkit-keyframes confirm-animation-zoom-remove{0%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}50%{opacity:.5;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:0;-webkit-transform:scale(0);transform:scale(0)}}@keyframes confirm-animation-zoom-remove{0%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}50%{opacity:.5;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:0;-webkit-transform:scale(0);transform:scale(0)}}\"},H=function(e,i,n,o,r,l,m,c,p){if(!w(\"body\"))return!1;a||G.Confirm.init({});var x=v(!0,a,{});\"object\"!=typeof p||Array.isArray(p)||(a=v(!0,a,p)),\"string\"!=typeof i&&(i=\"Notiflix Confirm\"),\"string\"!=typeof n&&(n=\"Do you agree with me?\"),\"string\"!=typeof r&&(r=\"Yes\"),\"string\"!=typeof l&&(l=\"No\"),\"function\"!=typeof m&&(m=void 0),\"function\"!=typeof c&&(c=void 0),a.plainText&&(i=N(i),n=N(n),r=N(r),l=N(l)),a.plainText||(i.length>a.titleMaxLength&&(i=\"Possible HTML Tags Error\",n=\"The \\\"plainText\\\" option is \\\"false\\\" and the title content length is more than \\\"titleMaxLength\\\" option.\",r=\"Okay\",l=\"...\"),n.length>a.messageMaxLength&&(i=\"Possible HTML Tags Error\",n=\"The \\\"plainText\\\" option is \\\"false\\\" and the message content length is more than \\\"messageMaxLength\\\" option.\",r=\"Okay\",l=\"...\"),(r.length||l.length)>a.buttonsMaxLength&&(i=\"Possible HTML Tags Error\",n=\"The \\\"plainText\\\" option is \\\"false\\\" and the buttons content length is more than \\\"buttonsMaxLength\\\" option.\",r=\"Okay\",l=\"...\")),i.length>a.titleMaxLength&&(i=i.substring(0,a.titleMaxLength)+\"...\"),n.length>a.messageMaxLength&&(n=n.substring(0,a.messageMaxLength)+\"...\"),r.length>a.buttonsMaxLength&&(r=r.substring(0,a.buttonsMaxLength)+\"...\"),l.length>a.buttonsMaxLength&&(l=l.substring(0,a.buttonsMaxLength)+\"...\"),a.cssAnimation||(a.cssAnimationDuration=0);var g=t.document.createElement(\"div\");g.id=d.ID,g.className=a.className+(a.cssAnimation?\" nx-with-animation nx-\"+a.cssAnimationStyle:\"\"),g.style.zIndex=a.zindex,g.style.padding=a.distance,a.rtl&&(g.setAttribute(\"dir\",\"rtl\"),g.classList.add(\"nx-rtl-on\"));var b=\"string\"==typeof a.position?a.position.trim():\"center\";g.classList.add(\"nx-position-\"+b),g.style.fontFamily=\"\\\"\"+a.fontFamily+\"\\\", \"+s;var u=\"\";a.backOverlay&&(u=\"<div class=\\\"\"+a.className+\"-overlay\"+(a.cssAnimation?\" nx-with-animation\":\"\")+\"\\\" style=\\\"background:\"+a.backOverlayColor+\";animation-duration:\"+a.cssAnimationDuration+\"ms;\\\"></div>\");var y=\"\";\"function\"==typeof m&&(y=\"<a id=\\\"NXConfirmButtonCancel\\\" class=\\\"nx-confirm-button-cancel\\\" style=\\\"color:\"+a.cancelButtonColor+\";background:\"+a.cancelButtonBackground+\";font-size:\"+a.buttonsFontSize+\";\\\">\"+l+\"</a>\");var k=\"\",h=null,C=void 0;if(e===f.Ask||e===f.Prompt){h=o||\"\";var z=e===f.Ask?Math.ceil(1.5*h.length):200<h.length?Math.ceil(1.5*h.length):250,S=e===f.Prompt?\"value=\\\"\"+h+\"\\\"\":\"\";k=\"<div><input id=\\\"NXConfirmValidationInput\\\" type=\\\"text\\\" \"+S+\" maxlength=\\\"\"+z+\"\\\" style=\\\"font-size:\"+a.messageFontSize+\";border-radius: \"+a.borderRadius+\";\\\" autocomplete=\\\"off\\\" spellcheck=\\\"false\\\" autocapitalize=\\\"none\\\" /></div>\"}if(g.innerHTML=u+\"<div class=\\\"\"+a.className+\"-content\\\" style=\\\"width:\"+a.width+\"; background:\"+a.backgroundColor+\"; animation-duration:\"+a.cssAnimationDuration+\"ms; border-radius: \"+a.borderRadius+\";\\\"><div class=\\\"\"+a.className+\"-head\\\"><h5 style=\\\"color:\"+a.titleColor+\";font-size:\"+a.titleFontSize+\";\\\">\"+i+\"</h5><div style=\\\"color:\"+a.messageColor+\";font-size:\"+a.messageFontSize+\";\\\">\"+n+k+\"</div></div><div class=\\\"\"+a.className+\"-buttons\\\"><a id=\\\"NXConfirmButtonOk\\\" class=\\\"nx-confirm-button-ok\"+(\"function\"==typeof m?\"\":\" nx-full\")+\"\\\" style=\\\"color:\"+a.okButtonColor+\";background:\"+a.okButtonBackground+\";font-size:\"+a.buttonsFontSize+\";\\\">\"+r+\"</a>\"+y+\"</div></div>\",!t.document.getElementById(g.id)){t.document.body.appendChild(g);var L=t.document.getElementById(g.id),W=t.document.getElementById(\"NXConfirmButtonOk\"),I=t.document.getElementById(\"NXConfirmValidationInput\");if(I&&(I.focus(),I.setSelectionRange(0,(I.value||\"\").length),I.addEventListener(\"keyup\",function(t){var i=t.target.value;if(e===f.Ask&&i!==h)t.preventDefault(),I.classList.add(\"nx-validation-failure\"),I.classList.remove(\"nx-validation-success\");else{e===f.Ask&&(I.classList.remove(\"nx-validation-failure\"),I.classList.add(\"nx-validation-success\"));var a=\"enter\"===(t.key||\"\").toLocaleLowerCase(\"en\")||13===t.keyCode;a&&W.dispatchEvent(new Event(\"click\"))}})),W.addEventListener(\"click\",function(t){if(e===f.Ask&&h&&I){var i=(I.value||\"\").toString();if(i!==h)return I.focus(),I.classList.add(\"nx-validation-failure\"),t.stopPropagation(),t.preventDefault(),t.returnValue=!1,t.cancelBubble=!0,!1;I.classList.remove(\"nx-validation-failure\")}\"function\"==typeof m&&(e===f.Prompt&&I&&(C=I.value||\"\"),m(C)),L.classList.add(\"nx-remove\");var n=setTimeout(function(){null!==L.parentNode&&(L.parentNode.removeChild(L),clearTimeout(n))},a.cssAnimationDuration)}),\"function\"==typeof m){var R=t.document.getElementById(\"NXConfirmButtonCancel\");R.addEventListener(\"click\",function(){\"function\"==typeof c&&(e===f.Prompt&&I&&(C=I.value||\"\"),c(C)),L.classList.add(\"nx-remove\");var t=setTimeout(function(){null!==L.parentNode&&(L.parentNode.removeChild(L),clearTimeout(t))},a.cssAnimationDuration)})}}a=v(!0,a,x)},P=function(){return\"[id^=NotiflixLoadingWrap]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:fixed;z-index:4000;width:100%;height:100%;left:0;top:0;right:0;bottom:0;margin:auto;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;text-align:center;-webkit-box-sizing:border-box;box-sizing:border-box;background:rgba(0,0,0,.8);font-family:\\\"Quicksand\\\",-apple-system,BlinkMacSystemFont,\\\"Segoe UI\\\",Roboto,\\\"Helvetica Neue\\\",Arial,sans-serif}[id^=NotiflixLoadingWrap] *{-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixLoadingWrap].nx-loading-click-to-close{cursor:pointer}[id^=NotiflixLoadingWrap]>div[class*=\\\"-icon\\\"]{width:60px;height:60px;position:relative;-webkit-transition:top .2s ease-in-out;-o-transition:top .2s ease-in-out;transition:top .2s ease-in-out;margin:0 auto}[id^=NotiflixLoadingWrap]>div[class*=\\\"-icon\\\"] img,[id^=NotiflixLoadingWrap]>div[class*=\\\"-icon\\\"] svg{max-width:unset;max-height:unset;width:100%;height:auto;position:absolute;left:0;top:0}[id^=NotiflixLoadingWrap]>p{position:relative;margin:10px auto 0;font-family:inherit!important;font-weight:normal;font-size:15px;line-height:1.4;padding:0 10px;width:100%;text-align:center}[id^=NotiflixLoadingWrap].nx-with-animation{-webkit-animation:loading-animation-fade .3s ease-in-out 0s normal;animation:loading-animation-fade .3s ease-in-out 0s normal}@-webkit-keyframes loading-animation-fade{0%{opacity:0}100%{opacity:1}}@keyframes loading-animation-fade{0%{opacity:0}100%{opacity:1}}[id^=NotiflixLoadingWrap].nx-with-animation.nx-remove{opacity:0;-webkit-animation:loading-animation-fade-remove .3s ease-in-out 0s normal;animation:loading-animation-fade-remove .3s ease-in-out 0s normal}@-webkit-keyframes loading-animation-fade-remove{0%{opacity:1}100%{opacity:0}}@keyframes loading-animation-fade-remove{0%{opacity:1}100%{opacity:0}}[id^=NotiflixLoadingWrap]>p.nx-loading-message-new{-webkit-animation:loading-new-message-fade .3s ease-in-out 0s normal;animation:loading-new-message-fade .3s ease-in-out 0s normal}@-webkit-keyframes loading-new-message-fade{0%{opacity:0}100%{opacity:1}}@keyframes loading-new-message-fade{0%{opacity:0}100%{opacity:1}}\"},U=function(e,i,a,o,r){if(!w(\"body\"))return!1;n||G.Loading.init({});var l=v(!0,n,{});if(\"object\"==typeof i&&!Array.isArray(i)||\"object\"==typeof a&&!Array.isArray(a)){var m={};\"object\"==typeof i?m=i:\"object\"==typeof a&&(m=a),n=v(!0,n,m)}var c=\"\";if(\"string\"==typeof i&&0<i.length&&(c=i),o){c=c.length>n.messageMaxLength?N(c).toString().substring(0,n.messageMaxLength)+\"...\":N(c).toString();var p=\"\";0<c.length&&(p=\"<p id=\\\"\"+n.messageID+\"\\\" class=\\\"nx-loading-message\\\" style=\\\"color:\"+n.messageColor+\";font-size:\"+n.messageFontSize+\";\\\">\"+c+\"</p>\"),n.cssAnimation||(n.cssAnimationDuration=0);var f=\"\";if(e===x.Standard)f=W(n.svgSize,n.svgColor);else if(e===x.Hourglass)f=I(n.svgSize,n.svgColor);else if(e===x.Circle)f=R(n.svgSize,n.svgColor);else if(e===x.Arrows)f=A(n.svgSize,n.svgColor);else if(e===x.Dots)f=M(n.svgSize,n.svgColor);else if(e===x.Pulse)f=B(n.svgSize,n.svgColor);else if(e===x.Custom&&null!==n.customSvgCode&&null===n.customSvgUrl)f=n.customSvgCode||\"\";else if(e===x.Custom&&null!==n.customSvgUrl&&null===n.customSvgCode)f=\"<img class=\\\"nx-custom-loading-icon\\\" width=\\\"\"+n.svgSize+\"\\\" height=\\\"\"+n.svgSize+\"\\\" src=\\\"\"+n.customSvgUrl+\"\\\" alt=\\\"Notiflix\\\">\";else{if(e===x.Custom&&(null===n.customSvgUrl||null===n.customSvgCode))return y(\"You have to set a static SVG url to \\\"customSvgUrl\\\" option to use Loading Custom.\"),!1;f=X(n.svgSize,\"#f8f8f8\",\"#32c682\")}var d=parseInt((n.svgSize||\"\").replace(/[^0-9]/g,\"\")),b=t.innerWidth,u=d>=b?b-40+\"px\":d+\"px\",k=\"<div style=\\\"width:\"+u+\"; height:\"+u+\";\\\" class=\\\"\"+n.className+\"-icon\"+(0<c.length?\" nx-with-message\":\"\")+\"\\\">\"+f+\"</div>\",h=t.document.createElement(\"div\");if(h.id=g.ID,h.className=n.className+(n.cssAnimation?\" nx-with-animation\":\"\")+(n.clickToClose?\" nx-loading-click-to-close\":\"\"),h.style.zIndex=n.zindex,h.style.background=n.backgroundColor,h.style.animationDuration=n.cssAnimationDuration+\"ms\",h.style.fontFamily=\"\\\"\"+n.fontFamily+\"\\\", \"+s,h.style.display=\"flex\",h.style.flexWrap=\"wrap\",h.style.flexDirection=\"column\",h.style.alignItems=\"center\",h.style.justifyContent=\"center\",n.rtl&&(h.setAttribute(\"dir\",\"rtl\"),h.classList.add(\"nx-rtl-on\")),h.innerHTML=k+p,!t.document.getElementById(h.id)&&(t.document.body.appendChild(h),n.clickToClose)){var C=t.document.getElementById(h.id);C.addEventListener(\"click\",function(){h.classList.add(\"nx-remove\");var t=setTimeout(function(){null!==h.parentNode&&(h.parentNode.removeChild(h),clearTimeout(t))},n.cssAnimationDuration)})}}else if(t.document.getElementById(g.ID))var z=t.document.getElementById(g.ID),S=setTimeout(function(){z.classList.add(\"nx-remove\");var t=setTimeout(function(){null!==z.parentNode&&(z.parentNode.removeChild(z),clearTimeout(t))},n.cssAnimationDuration);clearTimeout(S)},r);n=v(!0,n,l)},V=function(e){\"string\"!=typeof e&&(e=\"\");var i=t.document.getElementById(g.ID);if(i)if(0<e.length){e=e.length>n.messageMaxLength?N(e).substring(0,n.messageMaxLength)+\"...\":N(e);var a=i.getElementsByTagName(\"p\")[0];if(a)a.innerHTML=e;else{var o=t.document.createElement(\"p\");o.id=n.messageID,o.className=\"nx-loading-message nx-loading-message-new\",o.style.color=n.messageColor,o.style.fontSize=n.messageFontSize,o.innerHTML=e,i.appendChild(o)}}else y(\"Where is the new message?\")},q=function(){return\"[id^=NotiflixBlockWrap]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-box-sizing:border-box;box-sizing:border-box;position:absolute;z-index:1000;font-family:\\\"Quicksand\\\",-apple-system,BlinkMacSystemFont,\\\"Segoe UI\\\",Roboto,\\\"Helvetica Neue\\\",Arial,sans-serif;background:rgba(255,255,255,.9);text-align:center;animation-duration:.4s;width:100%;height:100%;left:0;top:0;border-radius:inherit;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center}[id^=NotiflixBlockWrap] *{-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixBlockWrap]>span[class*=\\\"-icon\\\"]{display:block;width:45px;height:45px;position:relative;margin:0 auto}[id^=NotiflixBlockWrap]>span[class*=\\\"-icon\\\"] svg{width:inherit;height:inherit}[id^=NotiflixBlockWrap]>span[class*=\\\"-message\\\"]{position:relative;display:block;width:100%;margin:10px auto 0;padding:0 10px;font-family:inherit!important;font-weight:normal;font-size:14px;line-height:1.4}[id^=NotiflixBlockWrap].nx-with-animation{-webkit-animation:block-animation-fade .3s ease-in-out 0s normal;animation:block-animation-fade .3s ease-in-out 0s normal}@-webkit-keyframes block-animation-fade{0%{opacity:0}100%{opacity:1}}@keyframes block-animation-fade{0%{opacity:0}100%{opacity:1}}[id^=NotiflixBlockWrap].nx-with-animation.nx-remove{opacity:0;-webkit-animation:block-animation-fade-remove .3s ease-in-out 0s normal;animation:block-animation-fade-remove .3s ease-in-out 0s normal}@-webkit-keyframes block-animation-fade-remove{0%{opacity:1}100%{opacity:0}}@keyframes block-animation-fade-remove{0%{opacity:1}100%{opacity:0}}\"},Q=0,Y=function(e,i,a,n,r,l){var m;if(Array.isArray(a)){if(1>a.length)return y(\"Array of HTMLElements should contains at least one HTMLElement.\"),!1;m=a}else if(Object.prototype.isPrototypeOf.call(NodeList.prototype,a)){if(1>a.length)return y(\"NodeListOf<HTMLElement> should contains at least one HTMLElement.\"),!1;m=Array.prototype.slice.call(a)}else{var c=\"string\"!=typeof a||1>(a||\"\").length||1===(a||\"\").length&&(\"#\"===(a||\"\")[0]||\".\"===(a||\"\")[0]);if(c)return y(\"The selector parameter must be a string and matches a specified CSS selector(s).\"),!1;var p=t.document.querySelectorAll(a);if(1>p.length)return y(\"You called the \\\"Notiflix.Block...\\\" function with \\\"\"+a+\"\\\" selector, but there is no such element(s) in the document.\"),!1;m=p}o||G.Block.init({});var f=v(!0,o,{});if(\"object\"==typeof n&&!Array.isArray(n)||\"object\"==typeof r&&!Array.isArray(r)){var d={};\"object\"==typeof n?d=n:\"object\"==typeof r&&(d=r),o=v(!0,o,d)}var x=\"\";\"string\"==typeof n&&0<n.length&&(x=n),o.cssAnimation||(o.cssAnimationDuration=0);var g=u.className;\"string\"==typeof o.className&&(g=o.className.trim());var h=\"number\"==typeof o.querySelectorLimit?o.querySelectorLimit:200,C=(m||[]).length>=h?h:m.length,z=\"nx-block-temporary-position\";if(e){for(var S,L=[\"area\",\"base\",\"br\",\"col\",\"command\",\"embed\",\"hr\",\"img\",\"input\",\"keygen\",\"link\",\"meta\",\"param\",\"source\",\"track\",\"wbr\",\"html\",\"head\",\"title\",\"script\",\"style\",\"iframe\"],X=0;X<C;X++)if(S=m[X],S){if(-1<L.indexOf(S.tagName.toLocaleLowerCase(\"en\")))break;var D=S.querySelectorAll(\"[id^=\"+u.ID+\"]\");if(1>D.length){var T=\"\";i&&(i===b.Hourglass?T=I(o.svgSize,o.svgColor):i===b.Circle?T=R(o.svgSize,o.svgColor):i===b.Arrows?T=A(o.svgSize,o.svgColor):i===b.Dots?T=M(o.svgSize,o.svgColor):i===b.Pulse?T=B(o.svgSize,o.svgColor):T=W(o.svgSize,o.svgColor));var F=\"<span class=\\\"\"+g+\"-icon\\\" style=\\\"width:\"+o.svgSize+\";height:\"+o.svgSize+\";\\\">\"+T+\"</span>\",E=\"\";0<x.length&&(x=x.length>o.messageMaxLength?N(x).substring(0,o.messageMaxLength)+\"...\":N(x),E=\"<span style=\\\"font-size:\"+o.messageFontSize+\";color:\"+o.messageColor+\";\\\" class=\\\"\"+g+\"-message\\\">\"+x+\"</span>\"),Q++;var j=t.document.createElement(\"div\");j.id=u.ID+\"-\"+Q,j.className=g+(o.cssAnimation?\" nx-with-animation\":\"\"),j.style.position=o.position,j.style.zIndex=o.zindex,j.style.background=o.backgroundColor,j.style.animationDuration=o.cssAnimationDuration+\"ms\",j.style.fontFamily=\"\\\"\"+o.fontFamily+\"\\\", \"+s,j.style.display=\"flex\",j.style.flexWrap=\"wrap\",j.style.flexDirection=\"column\",j.style.alignItems=\"center\",j.style.justifyContent=\"center\",o.rtl&&(j.setAttribute(\"dir\",\"rtl\"),j.classList.add(\"nx-rtl-on\")),j.innerHTML=F+E;var O=t.getComputedStyle(S).getPropertyValue(\"position\"),H=\"string\"==typeof O?O.toLocaleLowerCase(\"en\"):\"relative\",P=Math.round(1.25*parseInt(o.svgSize))+40,U=S.offsetHeight||0,V=\"\";P>U&&(V=\"min-height:\"+P+\"px;\");var q=\"\";q=S.getAttribute(\"id\")?\"#\"+S.getAttribute(\"id\"):S.classList[0]?\".\"+S.classList[0]:(S.tagName||\"\").toLocaleLowerCase(\"en\");var Y=\"\",K=-1>=[\"absolute\",\"relative\",\"fixed\",\"sticky\"].indexOf(H);if(K||0<V.length){if(!w(\"head\"))return!1;K&&(Y=\"position:relative!important;\");var $=\"<style id=\\\"Style-\"+u.ID+\"-\"+Q+\"\\\">\"+q+\".\"+z+\"{\"+Y+V+\"}</style>\",J=t.document.createRange();J.selectNode(t.document.head);var Z=J.createContextualFragment($);t.document.head.appendChild(Z),S.classList.add(z)}S.appendChild(j)}}}else var _=function(e){var i=setTimeout(function(){null!==e.parentNode&&e.parentNode.removeChild(e);var a=e.getAttribute(\"id\"),n=t.document.getElementById(\"Style-\"+a);n&&null!==n.parentNode&&n.parentNode.removeChild(n),clearTimeout(i)},o.cssAnimationDuration)},tt=function(t){if(t&&0<t.length)for(var e,n=0;n<t.length;n++)e=t[n],e&&(e.classList.add(\"nx-remove\"),_(e));else\"string\"==typeof a?k(\"\\\"Notiflix.Block.remove();\\\" function called with \\\"\"+a+\"\\\" selector, but this selector does not have a \\\"Block\\\" element to remove.\"):k(\"\\\"Notiflix.Block.remove();\\\" function called with \\\"\"+a+\"\\\", but this \\\"Array<HTMLElement>\\\" or \\\"NodeListOf<HTMLElement>\\\" does not have a \\\"Block\\\" element to remove.\")},et=function(t){var e=setTimeout(function(){t.classList.remove(z),clearTimeout(e)},o.cssAnimationDuration+300)},it=setTimeout(function(){for(var t,e=0;e<C;e++)t=m[e],t&&(et(t),D=t.querySelectorAll(\"[id^=\"+u.ID+\"]\"),tt(D));clearTimeout(it)},l);o=v(!0,o,f)},G={Notify:{init:function(t){e=v(!0,m,t),h(D,\"NotiflixNotifyInternalCSS\")},merge:function(t){return e?void(e=v(!0,e,t)):(y(\"You have to initialize the Notify module before call Merge function.\"),!1)},success:function(t,e,i){F(l.Success,t,e,i)},failure:function(t,e,i){F(l.Failure,t,e,i)},warning:function(t,e,i){F(l.Warning,t,e,i)},info:function(t,e,i){F(l.Info,t,e,i)}},Report:{init:function(t){i=v(!0,p,t),h(E,\"NotiflixReportInternalCSS\")},merge:function(t){return i?void(i=v(!0,i,t)):(y(\"You have to initialize the Report module before call Merge function.\"),!1)},success:function(t,e,i,a,n){j(c.Success,t,e,i,a,n)},failure:function(t,e,i,a,n){j(c.Failure,t,e,i,a,n)},warning:function(t,e,i,a,n){j(c.Warning,t,e,i,a,n)},info:function(t,e,i,a,n){j(c.Info,t,e,i,a,n)}},Confirm:{init:function(t){a=v(!0,d,t),h(O,\"NotiflixConfirmInternalCSS\")},merge:function(t){return a?void(a=v(!0,a,t)):(y(\"You have to initialize the Confirm module before call Merge function.\"),!1)},show:function(t,e,i,a,n,o,r){H(f.Show,t,e,null,i,a,n,o,r)},ask:function(t,e,i,a,n,o,r,s){H(f.Ask,t,e,i,a,n,o,r,s)},prompt:function(t,e,i,a,n,o,r,s){H(f.Prompt,t,e,i,a,n,o,r,s)}},Loading:{init:function(t){n=v(!0,g,t),h(P,\"NotiflixLoadingInternalCSS\")},merge:function(t){return n?void(n=v(!0,n,t)):(y(\"You have to initialize the Loading module before call Merge function.\"),!1)},standard:function(t,e){U(x.Standard,t,e,!0,0)},hourglass:function(t,e){U(x.Hourglass,t,e,!0,0)},circle:function(t,e){U(x.Circle,t,e,!0,0)},arrows:function(t,e){U(x.Arrows,t,e,!0,0)},dots:function(t,e){U(x.Dots,t,e,!0,0)},pulse:function(t,e){U(x.Pulse,t,e,!0,0)},custom:function(t,e){U(x.Custom,t,e,!0,0)},notiflix:function(t,e){U(x.Notiflix,t,e,!0,0)},remove:function(t){\"number\"!=typeof t&&(t=0),U(null,null,null,!1,t)},change:function(t){V(t)}},Block:{init:function(t){o=v(!0,u,t),h(q,\"NotiflixBlockInternalCSS\")},merge:function(t){return o?void(o=v(!0,o,t)):(y(\"You have to initialize the \\\"Notiflix.Block\\\" module before call Merge function.\"),!1)},standard:function(t,e,i){Y(!0,b.Standard,t,e,i)},hourglass:function(t,e,i){Y(!0,b.Hourglass,t,e,i)},circle:function(t,e,i){Y(!0,b.Circle,t,e,i)},arrows:function(t,e,i){Y(!0,b.Arrows,t,e,i)},dots:function(t,e,i){Y(!0,b.Dots,t,e,i)},pulse:function(t,e,i){Y(!0,b.Pulse,t,e,i)},remove:function(t,e){\"number\"!=typeof e&&(e=0),Y(!1,null,t,null,null,e)}}};return\"object\"==typeof t.Notiflix?v(!0,t.Notiflix,{Notify:G.Notify,Report:G.Report,Confirm:G.Confirm,Loading:G.Loading,Block:G.Block}):{Notify:G.Notify,Report:G.Report,Confirm:G.Confirm,Loading:G.Loading,Block:G.Block}});","{{#each this}}\n<li class=\"card__item\" data-action='{{id}}'>\n\n    <div class=\"thumb\">\n        <img src=\"https://image.tmdb.org/t/p/w500{{poster_path}}\" alt=\"{{title}} {{name}}\" width=\"100%\" data-id=\"{{id}}\"\n            onerror=\"this.onerror=null;this.src='https://ik.imagekit.io/tc8jxffbcvf/default-movie-portrait_EmJUj9Tda5wa.jpg?tr=fo-auto,di-';\" />\n     \n    </div>\n    <h2 class=\"card__title\">{{title}} {{name}}</h2>\n    <p class=\"card__text\">\n        <span>{{#each genres}} {{name}}  {{/each}}</span> | <span>{{release_date}}</span>\n    </p>\n</li>\n{{/each}}","import {\n  getDatabase,\n  ref,\n  push,\n  query,\n  equalTo,\n  get,\n  orderByChild,\n} from 'firebase/database';\nimport { Notify } from 'notiflix';\n\nasync function writeWatched(userId, film) {\n  const db = getDatabase();\n  push(ref(db, 'watched/'), {\n    userId: userId,\n    film: film,\n  })\n    .then(push => {\n      Notify.info('Film add watched list');\n    })\n    .catch(error => {\n      Notify.failure('OOPS');\n    });\n}\n\nasync function writeQueue(userId, film) {\n  const db = getDatabase();\n  push(ref(db, 'queue/'), {\n    userId: userId,\n    film: film,\n  })\n    .then(push => {\n      Notify.info('Film add Queue list');\n    })\n    .catch(error => {\n      Notify.failure('OOPS');\n    });\n}\n\nasync function getWatchedByUserId(userId) {\n  const db = getDatabase();\n  const recentPostsRef = await get(\n    query(ref(db, 'watched/'), orderByChild('userId'), equalTo(userId))\n  );\n  return recentPostsRef.val();\n}\n\nasync function getQueueByUserId(userId) {\n  const db = getDatabase();\n  const recentPostsRef = await get(\n    query(ref(db, 'queue/'), orderByChild('userId'), equalTo(userId))\n  );\n  return recentPostsRef.val();\n}\nexport { writeWatched, writeQueue, getQueueByUserId, getWatchedByUserId };\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { jsonEval, stringify } from '@firebase/util';\n\n/**\n * Wraps a DOM Storage object and:\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\n *\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\n * and one for localStorage.\n *\n */\nexport class DOMStorageWrapper {\n  // Use a prefix to avoid collisions with other stuff saved by the app.\n  private prefix_ = 'firebase:';\n\n  /**\n   * @param domStorage_ - The underlying storage object (e.g. localStorage or sessionStorage)\n   */\n  constructor(private domStorage_: Storage) {}\n\n  /**\n   * @param key - The key to save the value under\n   * @param value - The value being stored, or null to remove the key.\n   */\n  set(key: string, value: unknown | null) {\n    if (value == null) {\n      this.domStorage_.removeItem(this.prefixedName_(key));\n    } else {\n      this.domStorage_.setItem(this.prefixedName_(key), stringify(value));\n    }\n  }\n\n  /**\n   * @returns The value that was stored under this key, or null\n   */\n  get(key: string): unknown {\n    const storedVal = this.domStorage_.getItem(this.prefixedName_(key));\n    if (storedVal == null) {\n      return null;\n    } else {\n      return jsonEval(storedVal);\n    }\n  }\n\n  remove(key: string) {\n    this.domStorage_.removeItem(this.prefixedName_(key));\n  }\n\n  isInMemoryStorage: boolean;\n\n  prefixedName_(name: string): string {\n    return this.prefix_ + name;\n  }\n\n  toString(): string {\n    return this.domStorage_.toString();\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains } from '@firebase/util';\n\n/**\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\n * (TODO: create interface for both to implement).\n */\nexport class MemoryStorage {\n  private cache_: { [k: string]: unknown } = {};\n\n  set(key: string, value: unknown | null) {\n    if (value == null) {\n      delete this.cache_[key];\n    } else {\n      this.cache_[key] = value;\n    }\n  }\n\n  get(key: string): unknown {\n    if (contains(this.cache_, key)) {\n      return this.cache_[key];\n    }\n    return null;\n  }\n\n  remove(key: string) {\n    delete this.cache_[key];\n  }\n\n  isInMemoryStorage = true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DOMStorageWrapper } from './DOMStorageWrapper';\nimport { MemoryStorage } from './MemoryStorage';\n\ndeclare const window: Window;\n\n/**\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\n * to reflect this type\n *\n * @param domStorageName - Name of the underlying storage object\n *   (e.g. 'localStorage' or 'sessionStorage').\n * @returns Turning off type information until a common interface is defined.\n */\nconst createStoragefor = function (\n  domStorageName: string\n): DOMStorageWrapper | MemoryStorage {\n  try {\n    // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\n    // so it must be inside the try/catch.\n    if (\n      typeof window !== 'undefined' &&\n      typeof window[domStorageName] !== 'undefined'\n    ) {\n      // Need to test cache. Just because it's here doesn't mean it works\n      const domStorage = window[domStorageName];\n      domStorage.setItem('firebase:sentinel', 'cache');\n      domStorage.removeItem('firebase:sentinel');\n      return new DOMStorageWrapper(domStorage);\n    }\n  } catch (e) {}\n\n  // Failed to create wrapper.  Just return in-memory storage.\n  // TODO: log?\n  return new MemoryStorage();\n};\n\n/** A storage object that lasts across sessions */\nexport const PersistentStorage = createStoragefor('localStorage');\n\n/** A storage object that only lasts one session */\nexport const SessionStorage = createStoragefor('sessionStorage');\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger, LogLevel } from '@firebase/logger';\nimport {\n  assert,\n  base64,\n  Sha1,\n  stringToByteArray,\n  stringify,\n  isNodeSdk\n} from '@firebase/util';\n\nimport { SessionStorage } from '../storage/storage';\nimport { QueryContext } from '../view/EventRegistration';\n\ndeclare const window: Window;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndeclare const Windows: any;\n\nconst logClient = new Logger('@firebase/database');\n\n/**\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\n */\nexport const LUIDGenerator: () => number = (function () {\n  let id = 1;\n  return function () {\n    return id++;\n  };\n})();\n\n/**\n * Sha1 hash of the input string\n * @param str - The string to hash\n * @returns {!string} The resulting hash\n */\nexport const sha1 = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  const sha1 = new Sha1();\n  sha1.update(utf8Bytes);\n  const sha1Bytes = sha1.digest();\n  return base64.encodeByteArray(sha1Bytes);\n};\n\nconst buildLogMessage_ = function (...varArgs: unknown[]): string {\n  let message = '';\n  for (let i = 0; i < varArgs.length; i++) {\n    const arg = varArgs[i];\n    if (\n      Array.isArray(arg) ||\n      (arg &&\n        typeof arg === 'object' &&\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        typeof (arg as any).length === 'number')\n    ) {\n      message += buildLogMessage_.apply(null, arg);\n    } else if (typeof arg === 'object') {\n      message += stringify(arg);\n    } else {\n      message += arg;\n    }\n    message += ' ';\n  }\n\n  return message;\n};\n\n/**\n * Use this for all debug messages in Firebase.\n */\nexport let logger: ((a: string) => void) | null = null;\n\n/**\n * Flag to check for log availability on first log message\n */\nlet firstLog_ = true;\n\n/**\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\n * @param logger_ - A flag to turn on logging, or a custom logger\n * @param persistent - Whether or not to persist logging settings across refreshes\n */\nexport const enableLogging = function (\n  logger_?: boolean | ((a: string) => void) | null,\n  persistent?: boolean\n) {\n  assert(\n    !persistent || logger_ === true || logger_ === false,\n    \"Can't turn on custom loggers persistently.\"\n  );\n  if (logger_ === true) {\n    logClient.logLevel = LogLevel.VERBOSE;\n    logger = logClient.log.bind(logClient);\n    if (persistent) {\n      SessionStorage.set('logging_enabled', true);\n    }\n  } else if (typeof logger_ === 'function') {\n    logger = logger_;\n  } else {\n    logger = null;\n    SessionStorage.remove('logging_enabled');\n  }\n};\n\nexport const log = function (...varArgs: unknown[]) {\n  if (firstLog_ === true) {\n    firstLog_ = false;\n    if (logger === null && SessionStorage.get('logging_enabled') === true) {\n      enableLogging(true);\n    }\n  }\n\n  if (logger) {\n    const message = buildLogMessage_.apply(null, varArgs);\n    logger(message);\n  }\n};\n\nexport const logWrapper = function (\n  prefix: string\n): (...varArgs: unknown[]) => void {\n  return function (...varArgs: unknown[]) {\n    log(prefix, ...varArgs);\n  };\n};\n\nexport const error = function (...varArgs: string[]) {\n  const message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_(...varArgs);\n  logClient.error(message);\n};\n\nexport const fatal = function (...varArgs: string[]) {\n  const message = `FIREBASE FATAL ERROR: ${buildLogMessage_(...varArgs)}`;\n  logClient.error(message);\n  throw new Error(message);\n};\n\nexport const warn = function (...varArgs: unknown[]) {\n  const message = 'FIREBASE WARNING: ' + buildLogMessage_(...varArgs);\n  logClient.warn(message);\n};\n\n/**\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\n * does not use https.\n */\nexport const warnIfPageIsSecure = function () {\n  // Be very careful accessing browser globals. Who knows what may or may not exist.\n  if (\n    typeof window !== 'undefined' &&\n    window.location &&\n    window.location.protocol &&\n    window.location.protocol.indexOf('https:') !== -1\n  ) {\n    warn(\n      'Insecure Firebase access from a secure page. ' +\n        'Please use https in calls to new Firebase().'\n    );\n  }\n};\n\nexport const warnAboutUnsupportedMethod = function (methodName: string) {\n  warn(\n    methodName +\n      ' is unsupported and will likely change soon.  ' +\n      'Please do not use.'\n  );\n};\n\n/**\n * Returns true if data is NaN, or +/- Infinity.\n */\nexport const isInvalidJSONNumber = function (data: unknown): boolean {\n  return (\n    typeof data === 'number' &&\n    (data !== data || // NaN\n      data === Number.POSITIVE_INFINITY ||\n      data === Number.NEGATIVE_INFINITY)\n  );\n};\n\nexport const executeWhenDOMReady = function (fn: () => void) {\n  if (isNodeSdk() || document.readyState === 'complete') {\n    fn();\n  } else {\n    // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\n    // fire before onload), but fall back to onload.\n\n    let called = false;\n    const wrappedFn = function () {\n      if (!document.body) {\n        setTimeout(wrappedFn, Math.floor(10));\n        return;\n      }\n\n      if (!called) {\n        called = true;\n        fn();\n      }\n    };\n\n    if (document.addEventListener) {\n      document.addEventListener('DOMContentLoaded', wrappedFn, false);\n      // fallback to onload.\n      window.addEventListener('load', wrappedFn, false);\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if ((document as any).attachEvent) {\n      // IE.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (document as any).attachEvent('onreadystatechange', () => {\n        if (document.readyState === 'complete') {\n          wrappedFn();\n        }\n      });\n      // fallback to onload.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (window as any).attachEvent('onload', wrappedFn);\n\n      // jQuery has an extra hack for IE that we could employ (based on\n      // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\n      // I'm hoping we don't need it.\n    }\n  }\n};\n\n/**\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\n */\nexport const MIN_NAME = '[MIN_NAME]';\n\n/**\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\n */\nexport const MAX_NAME = '[MAX_NAME]';\n\n/**\n * Compares valid Firebase key names, plus min and max name\n */\nexport const nameCompare = function (a: string, b: string): number {\n  if (a === b) {\n    return 0;\n  } else if (a === MIN_NAME || b === MAX_NAME) {\n    return -1;\n  } else if (b === MIN_NAME || a === MAX_NAME) {\n    return 1;\n  } else {\n    const aAsInt = tryParseInt(a),\n      bAsInt = tryParseInt(b);\n\n    if (aAsInt !== null) {\n      if (bAsInt !== null) {\n        return aAsInt - bAsInt === 0 ? a.length - b.length : aAsInt - bAsInt;\n      } else {\n        return -1;\n      }\n    } else if (bAsInt !== null) {\n      return 1;\n    } else {\n      return a < b ? -1 : 1;\n    }\n  }\n};\n\n/**\n * @returns {!number} comparison result.\n */\nexport const stringCompare = function (a: string, b: string): number {\n  if (a === b) {\n    return 0;\n  } else if (a < b) {\n    return -1;\n  } else {\n    return 1;\n  }\n};\n\nexport const requireKey = function (\n  key: string,\n  obj: { [k: string]: unknown }\n): unknown {\n  if (obj && key in obj) {\n    return obj[key];\n  } else {\n    throw new Error(\n      'Missing required key (' + key + ') in object: ' + stringify(obj)\n    );\n  }\n};\n\nexport const ObjectToUniqueKey = function (obj: unknown): string {\n  if (typeof obj !== 'object' || obj === null) {\n    return stringify(obj);\n  }\n\n  const keys = [];\n  // eslint-disable-next-line guard-for-in\n  for (const k in obj) {\n    keys.push(k);\n  }\n\n  // Export as json, but with the keys sorted.\n  keys.sort();\n  let key = '{';\n  for (let i = 0; i < keys.length; i++) {\n    if (i !== 0) {\n      key += ',';\n    }\n    key += stringify(keys[i]);\n    key += ':';\n    key += ObjectToUniqueKey(obj[keys[i]]);\n  }\n\n  key += '}';\n  return key;\n};\n\n/**\n * Splits a string into a number of smaller segments of maximum size\n * @param str - The string\n * @param segsize - The maximum number of chars in the string.\n * @returns The string, split into appropriately-sized chunks\n */\nexport const splitStringBySize = function (\n  str: string,\n  segsize: number\n): string[] {\n  const len = str.length;\n\n  if (len <= segsize) {\n    return [str];\n  }\n\n  const dataSegs = [];\n  for (let c = 0; c < len; c += segsize) {\n    if (c + segsize > len) {\n      dataSegs.push(str.substring(c, len));\n    } else {\n      dataSegs.push(str.substring(c, c + segsize));\n    }\n  }\n  return dataSegs;\n};\n\n/**\n * Apply a function to each (key, value) pair in an object or\n * apply a function to each (index, value) pair in an array\n * @param obj - The object or array to iterate over\n * @param fn - The function to apply\n */\nexport function each(obj: object, fn: (k: string, v: unknown) => void) {\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      fn(key, obj[key]);\n    }\n  }\n}\n\n/**\n * Like goog.bind, but doesn't bother to create a closure if opt_context is null/undefined.\n * @param callback - Callback function.\n * @param context - Optional context to bind to.\n *\n */\nexport const bindCallback = function (\n  callback: (a: unknown) => void,\n  context?: object | null\n): (a: unknown) => void {\n  return context ? callback.bind(context) : callback;\n};\n\n/**\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\n * I made one modification at the end and removed the NaN / Infinity\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\n * @param v - A double\n *\n */\nexport const doubleToIEEE754String = function (v: number): string {\n  assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\n\n  const ebits = 11,\n    fbits = 52;\n  const bias = (1 << (ebits - 1)) - 1;\n  let s, e, f, ln, i;\n\n  // Compute sign, exponent, fraction\n  // Skip NaN / Infinity handling --MJL.\n  if (v === 0) {\n    e = 0;\n    f = 0;\n    s = 1 / v === -Infinity ? 1 : 0;\n  } else {\n    s = v < 0;\n    v = Math.abs(v);\n\n    if (v >= Math.pow(2, 1 - bias)) {\n      // Normalized\n      ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\n      e = ln + bias;\n      f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\n    } else {\n      // Denormalized\n      e = 0;\n      f = Math.round(v / Math.pow(2, 1 - bias - fbits));\n    }\n  }\n\n  // Pack sign, exponent, fraction\n  const bits = [];\n  for (i = fbits; i; i -= 1) {\n    bits.push(f % 2 ? 1 : 0);\n    f = Math.floor(f / 2);\n  }\n  for (i = ebits; i; i -= 1) {\n    bits.push(e % 2 ? 1 : 0);\n    e = Math.floor(e / 2);\n  }\n  bits.push(s ? 1 : 0);\n  bits.reverse();\n  const str = bits.join('');\n\n  // Return the data as a hex string. --MJL\n  let hexByteString = '';\n  for (i = 0; i < 64; i += 8) {\n    let hexByte = parseInt(str.substr(i, 8), 2).toString(16);\n    if (hexByte.length === 1) {\n      hexByte = '0' + hexByte;\n    }\n    hexByteString = hexByteString + hexByte;\n  }\n  return hexByteString.toLowerCase();\n};\n\n/**\n * Used to detect if we're in a Chrome content script (which executes in an\n * isolated environment where long-polling doesn't work).\n */\nexport const isChromeExtensionContentScript = function (): boolean {\n  return !!(\n    typeof window === 'object' &&\n    window['chrome'] &&\n    window['chrome']['extension'] &&\n    !/^chrome/.test(window.location.href)\n  );\n};\n\n/**\n * Used to detect if we're in a Windows 8 Store app.\n */\nexport const isWindowsStoreApp = function (): boolean {\n  // Check for the presence of a couple WinRT globals\n  return typeof Windows === 'object' && typeof Windows.UI === 'object';\n};\n\n/**\n * Converts a server error code to a Javascript Error\n */\nexport function errorForServerCode(code: string, query: QueryContext): Error {\n  let reason = 'Unknown Error';\n  if (code === 'too_big') {\n    reason =\n      'The data requested exceeds the maximum size ' +\n      'that can be accessed with a single request.';\n  } else if (code === 'permission_denied') {\n    reason = \"Client doesn't have permission to access the desired data.\";\n  } else if (code === 'unavailable') {\n    reason = 'The service is unavailable';\n  }\n\n  const error = new Error(\n    code + ' at ' + query._path.toString() + ': ' + reason\n  );\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  (error as any).code = code.toUpperCase();\n  return error;\n}\n\n/**\n * Used to test for integer-looking strings\n */\nexport const INTEGER_REGEXP_ = new RegExp('^-?(0*)\\\\d{1,10}$');\n\n/**\n * For use in keys, the minimum possible 32-bit integer.\n */\nexport const INTEGER_32_MIN = -2147483648;\n\n/**\n * For use in kyes, the maximum possible 32-bit integer.\n */\nexport const INTEGER_32_MAX = 2147483647;\n\n/**\n * If the string contains a 32-bit integer, return it.  Else return null.\n */\nexport const tryParseInt = function (str: string): number | null {\n  if (INTEGER_REGEXP_.test(str)) {\n    const intVal = Number(str);\n    if (intVal >= INTEGER_32_MIN && intVal <= INTEGER_32_MAX) {\n      return intVal;\n    }\n  }\n  return null;\n};\n\n/**\n * Helper to run some code but catch any exceptions and re-throw them later.\n * Useful for preventing user callbacks from breaking internal code.\n *\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\n * convenient (we don't have to try to figure out when is a safe point to\n * re-throw it), and the behavior seems reasonable:\n *\n * * If you aren't pausing on exceptions, you get an error in the console with\n *   the correct stack trace.\n * * If you're pausing on all exceptions, the debugger will pause on your\n *   exception and then again when we rethrow it.\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\n *   on us re-throwing it.\n *\n * @param fn - The code to guard.\n */\nexport const exceptionGuard = function (fn: () => void) {\n  try {\n    fn();\n  } catch (e) {\n    // Re-throw exception when it's safe.\n    setTimeout(() => {\n      // It used to be that \"throw e\" would result in a good console error with\n      // relevant context, but as of Chrome 39, you just get the firebase.js\n      // file/line number where we re-throw it, which is useless. So we log\n      // e.stack explicitly.\n      const stack = e.stack || '';\n      warn('Exception was thrown by user callback.', stack);\n      throw e;\n    }, Math.floor(0));\n  }\n};\n\n/**\n * Helper function to safely call opt_callback with the specified arguments.  It:\n * 1. Turns into a no-op if opt_callback is null or undefined.\n * 2. Wraps the call inside exceptionGuard to prevent exceptions from breaking our state.\n *\n * @param callback - Optional onComplete callback.\n * @param varArgs - Arbitrary args to be passed to opt_onComplete\n */\nexport const callUserCallback = function (\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  callback?: Function | null,\n  ...varArgs: unknown[]\n) {\n  if (typeof callback === 'function') {\n    exceptionGuard(() => {\n      callback(...varArgs);\n    });\n  }\n};\n\n/**\n * @returns {boolean} true if we think we're currently being crawled.\n */\nexport const beingCrawled = function (): boolean {\n  const userAgent =\n    (typeof window === 'object' &&\n      window['navigator'] &&\n      window['navigator']['userAgent']) ||\n    '';\n\n  // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\n  // believe to support JavaScript/AJAX rendering.\n  // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\n  // would have seen the page\" is flaky if we don't treat it as a crawler.\n  return (\n    userAgent.search(\n      /googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i\n    ) >= 0\n  );\n};\n\n/**\n * Export a property of an object using a getter function.\n */\nexport const exportPropGetter = function (\n  object: object,\n  name: string,\n  fnGet: () => unknown\n) {\n  Object.defineProperty(object, name, { get: fnGet });\n};\n\n/**\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\n *\n * It is removed with clearTimeout() as normal.\n *\n * @param fn - Function to run.\n * @param time - Milliseconds to wait before running.\n * @returns The setTimeout() return value.\n */\nexport const setTimeoutNonBlocking = function (\n  fn: () => void,\n  time: number\n): number | object {\n  const timeout: number | object = setTimeout(fn, time);\n  // Note: at the time of this comment, unrefTimer is under the unstable set of APIs. Run with --unstable to enable the API.\n  if (\n    typeof timeout === 'number' &&\n    // @ts-ignore Is only defined in Deno environments.\n    typeof Deno !== 'undefined' &&\n    // @ts-ignore Deno and unrefTimer are only defined in Deno environments.\n    Deno['unrefTimer']\n  ) {\n    // @ts-ignore Deno and unrefTimer are only defined in Deno environments.\n    Deno.unrefTimer(timeout);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  } else if (typeof timeout === 'object' && (timeout as any)['unref']) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (timeout as any)['unref']();\n  }\n\n  return timeout;\n};\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AppCheckInternalComponentName,\n  AppCheckTokenListener,\n  AppCheckTokenResult,\n  FirebaseAppCheckInternal\n} from '@firebase/app-check-interop-types';\nimport { Provider } from '@firebase/component';\n\nimport { warn } from './util/util';\n\n/**\n * Abstraction around AppCheck's token fetching capabilities.\n */\nexport class AppCheckTokenProvider {\n  private appCheck?: FirebaseAppCheckInternal;\n  constructor(\n    private appName_: string,\n    private appCheckProvider?: Provider<AppCheckInternalComponentName>\n  ) {\n    this.appCheck = appCheckProvider?.getImmediate({ optional: true });\n    if (!this.appCheck) {\n      appCheckProvider?.get().then(appCheck => (this.appCheck = appCheck));\n    }\n  }\n\n  getToken(forceRefresh?: boolean): Promise<AppCheckTokenResult> {\n    if (!this.appCheck) {\n      return new Promise<AppCheckTokenResult>((resolve, reject) => {\n        // Support delayed initialization of FirebaseAppCheck. This allows our\n        // customers to initialize the RTDB SDK before initializing Firebase\n        // AppCheck and ensures that all requests are authenticated if a token\n        // becomes available before the timoeout below expires.\n        setTimeout(() => {\n          if (this.appCheck) {\n            this.getToken(forceRefresh).then(resolve, reject);\n          } else {\n            resolve(null);\n          }\n        }, 0);\n      });\n    }\n    return this.appCheck.getToken(forceRefresh);\n  }\n\n  addTokenChangeListener(listener: AppCheckTokenListener) {\n    this.appCheckProvider\n      ?.get()\n      .then(appCheck => appCheck.addTokenListener(listener));\n  }\n\n  notifyForInvalidToken(): void {\n    warn(\n      `Provided AppCheck credentials for the app named \"${this.appName_}\" ` +\n        'are invalid. This usually indicates your app was not initialized correctly.'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseAuthTokenData } from '@firebase/app-types/private';\nimport {\n  FirebaseAuthInternal,\n  FirebaseAuthInternalName\n} from '@firebase/auth-interop-types';\nimport { Provider } from '@firebase/component';\n\nimport { log, warn } from './util/util';\n\nexport interface AuthTokenProvider {\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData>;\n  addTokenChangeListener(listener: (token: string | null) => void): void;\n  removeTokenChangeListener(listener: (token: string | null) => void): void;\n  notifyForInvalidToken(): void;\n}\n\n/**\n * Abstraction around FirebaseApp's token fetching capabilities.\n */\nexport class FirebaseAuthTokenProvider implements AuthTokenProvider {\n  private auth_: FirebaseAuthInternal | null = null;\n\n  constructor(\n    private appName_: string,\n    private firebaseOptions_: object,\n    private authProvider_: Provider<FirebaseAuthInternalName>\n  ) {\n    this.auth_ = authProvider_.getImmediate({ optional: true });\n    if (!this.auth_) {\n      authProvider_.onInit(auth => (this.auth_ = auth));\n    }\n  }\n\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData> {\n    if (!this.auth_) {\n      return new Promise<FirebaseAuthTokenData>((resolve, reject) => {\n        // Support delayed initialization of FirebaseAuth. This allows our\n        // customers to initialize the RTDB SDK before initializing Firebase\n        // Auth and ensures that all requests are authenticated if a token\n        // becomes available before the timoeout below expires.\n        setTimeout(() => {\n          if (this.auth_) {\n            this.getToken(forceRefresh).then(resolve, reject);\n          } else {\n            resolve(null);\n          }\n        }, 0);\n      });\n    }\n\n    return this.auth_.getToken(forceRefresh).catch(error => {\n      // TODO: Need to figure out all the cases this is raised and whether\n      // this makes sense.\n      if (error && error.code === 'auth/token-not-initialized') {\n        log('Got auth/token-not-initialized error.  Treating as null token.');\n        return null;\n      } else {\n        return Promise.reject(error);\n      }\n    });\n  }\n\n  addTokenChangeListener(listener: (token: string | null) => void): void {\n    // TODO: We might want to wrap the listener and call it with no args to\n    // avoid a leaky abstraction, but that makes removing the listener harder.\n    if (this.auth_) {\n      this.auth_.addAuthTokenListener(listener);\n    } else {\n      this.authProvider_\n        .get()\n        .then(auth => auth.addAuthTokenListener(listener));\n    }\n  }\n\n  removeTokenChangeListener(listener: (token: string | null) => void): void {\n    this.authProvider_\n      .get()\n      .then(auth => auth.removeAuthTokenListener(listener));\n  }\n\n  notifyForInvalidToken(): void {\n    let errorMessage =\n      'Provided authentication credentials for the app named \"' +\n      this.appName_ +\n      '\" are invalid. This usually indicates your app was not ' +\n      'initialized correctly. ';\n    if ('credential' in this.firebaseOptions_) {\n      errorMessage +=\n        'Make sure the \"credential\" property provided to initializeApp() ' +\n        'is authorized to access the specified \"databaseURL\" and is from the correct ' +\n        'project.';\n    } else if ('serviceAccount' in this.firebaseOptions_) {\n      errorMessage +=\n        'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\n        'is authorized to access the specified \"databaseURL\" and is from the correct ' +\n        'project.';\n    } else {\n      errorMessage +=\n        'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\n        'initializeApp() match the values provided for your app at ' +\n        'https://console.firebase.google.com/.';\n    }\n    warn(errorMessage);\n  }\n}\n\n/* AuthTokenProvider that supplies a constant token. Used by Admin SDK or mockUserToken with emulators. */\nexport class EmulatorTokenProvider implements AuthTokenProvider {\n  /** A string that is treated as an admin access token by the RTDB emulator. Used by Admin SDK. */\n  static OWNER = 'owner';\n\n  constructor(private accessToken: string) {}\n\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData> {\n    return Promise.resolve({\n      accessToken: this.accessToken\n    });\n  }\n\n  addTokenChangeListener(listener: (token: string | null) => void): void {\n    // Invoke the listener immediately to match the behavior in Firebase Auth\n    // (see packages/auth/src/auth.js#L1807)\n    listener(this.accessToken);\n  }\n\n  removeTokenChangeListener(listener: (token: string | null) => void): void {}\n\n  notifyForInvalidToken(): void {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { LONG_POLLING, WEBSOCKET } from '../realtime/Constants';\n\nimport { PersistentStorage } from './storage/storage';\nimport { each } from './util/util';\n\n/**\n * A class that holds metadata about a Repo object\n */\nexport class RepoInfo {\n  private _host: string;\n  private _domain: string;\n  internalHost: string;\n\n  /**\n   * @param host - Hostname portion of the url for the repo\n   * @param secure - Whether or not this repo is accessed over ssl\n   * @param namespace - The namespace represented by the repo\n   * @param webSocketOnly - Whether to prefer websockets over all other transports (used by Nest).\n   * @param nodeAdmin - Whether this instance uses Admin SDK credentials\n   * @param persistenceKey - Override the default session persistence storage key\n   */\n  constructor(\n    host: string,\n    public readonly secure: boolean,\n    public readonly namespace: string,\n    public readonly webSocketOnly: boolean,\n    public readonly nodeAdmin: boolean = false,\n    public readonly persistenceKey: string = '',\n    public readonly includeNamespaceInQueryParams: boolean = false\n  ) {\n    this._host = host.toLowerCase();\n    this._domain = this._host.substr(this._host.indexOf('.') + 1);\n    this.internalHost =\n      (PersistentStorage.get('host:' + host) as string) || this._host;\n  }\n\n  isCacheableHost(): boolean {\n    return this.internalHost.substr(0, 2) === 's-';\n  }\n\n  isCustomHost() {\n    return (\n      this._domain !== 'firebaseio.com' &&\n      this._domain !== 'firebaseio-demo.com'\n    );\n  }\n\n  get host() {\n    return this._host;\n  }\n\n  set host(newHost: string) {\n    if (newHost !== this.internalHost) {\n      this.internalHost = newHost;\n      if (this.isCacheableHost()) {\n        PersistentStorage.set('host:' + this._host, this.internalHost);\n      }\n    }\n  }\n\n  toString(): string {\n    let str = this.toURLString();\n    if (this.persistenceKey) {\n      str += '<' + this.persistenceKey + '>';\n    }\n    return str;\n  }\n\n  toURLString(): string {\n    const protocol = this.secure ? 'https://' : 'http://';\n    const query = this.includeNamespaceInQueryParams\n      ? `?ns=${this.namespace}`\n      : '';\n    return `${protocol}${this.host}/${query}`;\n  }\n}\n\nfunction repoInfoNeedsQueryParam(repoInfo: RepoInfo): boolean {\n  return (\n    repoInfo.host !== repoInfo.internalHost ||\n    repoInfo.isCustomHost() ||\n    repoInfo.includeNamespaceInQueryParams\n  );\n}\n\n/**\n * Returns the websocket URL for this repo\n * @param repoInfo - RepoInfo object\n * @param type - of connection\n * @param params - list\n * @returns The URL for this repo\n */\nexport function repoInfoConnectionURL(\n  repoInfo: RepoInfo,\n  type: string,\n  params: { [k: string]: string }\n): string {\n  assert(typeof type === 'string', 'typeof type must == string');\n  assert(typeof params === 'object', 'typeof params must == object');\n\n  let connURL: string;\n  if (type === WEBSOCKET) {\n    connURL =\n      (repoInfo.secure ? 'wss://' : 'ws://') + repoInfo.internalHost + '/.ws?';\n  } else if (type === LONG_POLLING) {\n    connURL =\n      (repoInfo.secure ? 'https://' : 'http://') +\n      repoInfo.internalHost +\n      '/.lp?';\n  } else {\n    throw new Error('Unknown connection type: ' + type);\n  }\n  if (repoInfoNeedsQueryParam(repoInfo)) {\n    params['ns'] = repoInfo.namespace;\n  }\n\n  const pairs: string[] = [];\n\n  each(params, (key: string, value: string) => {\n    pairs.push(key + '=' + value);\n  });\n\n  return connURL + pairs.join('&');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../RepoInfo';\n\nimport { StatsCollection } from './StatsCollection';\n\nconst collections: { [k: string]: StatsCollection } = {};\nconst reporters: { [k: string]: unknown } = {};\n\nexport function statsManagerGetCollection(repoInfo: RepoInfo): StatsCollection {\n  const hashString = repoInfo.toString();\n\n  if (!collections[hashString]) {\n    collections[hashString] = new StatsCollection();\n  }\n\n  return collections[hashString];\n}\n\nexport function statsManagerGetOrCreateReporter<T>(\n  repoInfo: RepoInfo,\n  creatorFunction: () => T\n): T {\n  const hashString = repoInfo.toString();\n\n  if (!reporters[hashString]) {\n    reporters[hashString] = creatorFunction();\n  }\n\n  return reporters[hashString] as T;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { exceptionGuard } from '../../core/util/util';\n\n/**\n * This class ensures the packets from the server arrive in order\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\n */\nexport class PacketReceiver {\n  pendingResponses: unknown[] = [];\n  currentResponseNum = 0;\n  closeAfterResponse = -1;\n  onClose: (() => void) | null = null;\n\n  /**\n   * @param onMessage_\n   */\n  constructor(private onMessage_: (a: {}) => void) {}\n\n  closeAfter(responseNum: number, callback: () => void) {\n    this.closeAfterResponse = responseNum;\n    this.onClose = callback;\n    if (this.closeAfterResponse < this.currentResponseNum) {\n      this.onClose();\n      this.onClose = null;\n    }\n  }\n\n  /**\n   * Each message from the server comes with a response number, and an array of data. The responseNumber\n   * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\n   * browsers will respond in the same order as the requests we sent\n   */\n  handleResponse(requestNum: number, data: unknown[]) {\n    this.pendingResponses[requestNum] = data;\n    while (this.pendingResponses[this.currentResponseNum]) {\n      const toProcess = this.pendingResponses[\n        this.currentResponseNum\n      ] as unknown[];\n      delete this.pendingResponses[this.currentResponseNum];\n      for (let i = 0; i < toProcess.length; ++i) {\n        if (toProcess[i]) {\n          exceptionGuard(() => {\n            this.onMessage_(toProcess[i]);\n          });\n        }\n      }\n      if (this.currentResponseNum === this.closeAfterResponse) {\n        if (this.onClose) {\n          this.onClose();\n          this.onClose = null;\n        }\n        break;\n      }\n      this.currentResponseNum++;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Encode, isNodeSdk, stringify } from '@firebase/util';\n\nimport { RepoInfo, repoInfoConnectionURL } from '../core/RepoInfo';\nimport { StatsCollection } from '../core/stats/StatsCollection';\nimport { statsManagerGetCollection } from '../core/stats/StatsManager';\nimport {\n  executeWhenDOMReady,\n  isChromeExtensionContentScript,\n  isWindowsStoreApp,\n  log,\n  logWrapper,\n  LUIDGenerator,\n  splitStringBySize\n} from '../core/util/util';\n\nimport {\n  APP_CHECK_TOKEN_PARAM,\n  APPLICATION_ID_PARAM,\n  FORGE_DOMAIN_RE,\n  FORGE_REF,\n  LAST_SESSION_PARAM,\n  LONG_POLLING,\n  PROTOCOL_VERSION,\n  REFERER_PARAM,\n  TRANSPORT_SESSION_PARAM,\n  VERSION_PARAM\n} from './Constants';\nimport { PacketReceiver } from './polling/PacketReceiver';\nimport { Transport } from './Transport';\n\n// URL query parameters associated with longpolling\nexport const FIREBASE_LONGPOLL_START_PARAM = 'start';\nexport const FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\nexport const FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\nexport const FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\nexport const FIREBASE_LONGPOLL_ID_PARAM = 'id';\nexport const FIREBASE_LONGPOLL_PW_PARAM = 'pw';\nexport const FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\nexport const FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\nexport const FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\nexport const FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\nexport const FIREBASE_LONGPOLL_DATA_PARAM = 'd';\nexport const FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM = 'disconn';\nexport const FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\n\n//Data size constants.\n//TODO: Perf: the maximum length actually differs from browser to browser.\n// We should check what browser we're on and set accordingly.\nconst MAX_URL_DATA_SIZE = 1870;\nconst SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\nconst MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\n\n/**\n * Keepalive period\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\n * length of 30 seconds that we can't exceed.\n */\nconst KEEPALIVE_REQUEST_INTERVAL = 25000;\n\n/**\n * How long to wait before aborting a long-polling connection attempt.\n */\nconst LP_CONNECT_TIMEOUT = 30000;\n\n/**\n * This class manages a single long-polling connection.\n */\nexport class BrowserPollConnection implements Transport {\n  bytesSent = 0;\n  bytesReceived = 0;\n  urlFn: (params: object) => string;\n  scriptTagHolder: FirebaseIFrameScriptHolder;\n  myDisconnFrame: HTMLIFrameElement;\n  curSegmentNum: number;\n  myPacketOrderer: PacketReceiver;\n  id: string;\n  password: string;\n  private log_: (...a: unknown[]) => void;\n  private stats_: StatsCollection;\n  private everConnected_ = false;\n  private isClosed_: boolean;\n  private connectTimeoutTimer_: number | null;\n  private onDisconnect_: ((a?: boolean) => void) | null;\n\n  /**\n   * @param connId An identifier for this connection, used for logging\n   * @param repoInfo The info for the endpoint to send data to.\n   * @param applicationId The Firebase App ID for this project.\n   * @param appCheckToken The AppCheck token for this client.\n   * @param authToken The AuthToken to use for this connection.\n   * @param transportSessionId Optional transportSessionid if we are\n   * reconnecting for an existing transport session\n   * @param lastSessionId Optional lastSessionId if the PersistentConnection has\n   * already created a connection previously\n   */\n  constructor(\n    public connId: string,\n    public repoInfo: RepoInfo,\n    private applicationId?: string,\n    private appCheckToken?: string,\n    private authToken?: string,\n    public transportSessionId?: string,\n    public lastSessionId?: string\n  ) {\n    this.log_ = logWrapper(connId);\n    this.stats_ = statsManagerGetCollection(repoInfo);\n    this.urlFn = (params: { [k: string]: string }) => {\n      // Always add the token if we have one.\n      if (this.appCheckToken) {\n        params[APP_CHECK_TOKEN_PARAM] = this.appCheckToken;\n      }\n      return repoInfoConnectionURL(repoInfo, LONG_POLLING, params);\n    };\n  }\n\n  /**\n   * @param onMessage - Callback when messages arrive\n   * @param onDisconnect - Callback with connection lost.\n   */\n  open(onMessage: (msg: {}) => void, onDisconnect: (a?: boolean) => void) {\n    this.curSegmentNum = 0;\n    this.onDisconnect_ = onDisconnect;\n    this.myPacketOrderer = new PacketReceiver(onMessage);\n    this.isClosed_ = false;\n\n    this.connectTimeoutTimer_ = setTimeout(() => {\n      this.log_('Timed out trying to connect.');\n      // Make sure we clear the host cache\n      this.onClosed_();\n      this.connectTimeoutTimer_ = null;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(LP_CONNECT_TIMEOUT)) as any;\n\n    // Ensure we delay the creation of the iframe until the DOM is loaded.\n    executeWhenDOMReady(() => {\n      if (this.isClosed_) {\n        return;\n      }\n\n      //Set up a callback that gets triggered once a connection is set up.\n      this.scriptTagHolder = new FirebaseIFrameScriptHolder(\n        (...args) => {\n          const [command, arg1, arg2, arg3, arg4] = args;\n          this.incrementIncomingBytes_(args);\n          if (!this.scriptTagHolder) {\n            return; // we closed the connection.\n          }\n\n          if (this.connectTimeoutTimer_) {\n            clearTimeout(this.connectTimeoutTimer_);\n            this.connectTimeoutTimer_ = null;\n          }\n          this.everConnected_ = true;\n          if (command === FIREBASE_LONGPOLL_START_PARAM) {\n            this.id = arg1 as string;\n            this.password = arg2 as string;\n          } else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\n            // Don't clear the host cache. We got a response from the server, so we know it's reachable\n            if (arg1) {\n              // We aren't expecting any more data (other than what the server's already in the process of sending us\n              // through our already open polls), so don't send any more.\n              this.scriptTagHolder.sendNewPolls = false;\n\n              // arg1 in this case is the last response number sent by the server. We should try to receive\n              // all of the responses up to this one before closing\n              this.myPacketOrderer.closeAfter(arg1 as number, () => {\n                this.onClosed_();\n              });\n            } else {\n              this.onClosed_();\n            }\n          } else {\n            throw new Error('Unrecognized command received: ' + command);\n          }\n        },\n        (...args) => {\n          const [pN, data] = args;\n          this.incrementIncomingBytes_(args);\n          this.myPacketOrderer.handleResponse(pN as number, data as unknown[]);\n        },\n        () => {\n          this.onClosed_();\n        },\n        this.urlFn\n      );\n\n      //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\n      //from cache.\n      const urlParams: { [k: string]: string | number } = {};\n      urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(\n        Math.random() * 100000000\n      );\n      if (this.scriptTagHolder.uniqueCallbackIdentifier) {\n        urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] =\n          this.scriptTagHolder.uniqueCallbackIdentifier;\n      }\n      urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n      if (this.transportSessionId) {\n        urlParams[TRANSPORT_SESSION_PARAM] = this.transportSessionId;\n      }\n      if (this.lastSessionId) {\n        urlParams[LAST_SESSION_PARAM] = this.lastSessionId;\n      }\n      if (this.applicationId) {\n        urlParams[APPLICATION_ID_PARAM] = this.applicationId;\n      }\n      if (this.appCheckToken) {\n        urlParams[APP_CHECK_TOKEN_PARAM] = this.appCheckToken;\n      }\n      if (\n        typeof location !== 'undefined' &&\n        location.hostname &&\n        FORGE_DOMAIN_RE.test(location.hostname)\n      ) {\n        urlParams[REFERER_PARAM] = FORGE_REF;\n      }\n      const connectURL = this.urlFn(urlParams);\n      this.log_('Connecting via long-poll to ' + connectURL);\n      this.scriptTagHolder.addTag(connectURL, () => {\n        /* do nothing */\n      });\n    });\n  }\n\n  /**\n   * Call this when a handshake has completed successfully and we want to consider the connection established\n   */\n  start() {\n    this.scriptTagHolder.startLongPoll(this.id, this.password);\n    this.addDisconnectPingFrame(this.id, this.password);\n  }\n\n  static forceAllow_: boolean;\n\n  /**\n   * Forces long polling to be considered as a potential transport\n   */\n  static forceAllow() {\n    BrowserPollConnection.forceAllow_ = true;\n  }\n\n  static forceDisallow_: boolean;\n\n  /**\n   * Forces longpolling to not be considered as a potential transport\n   */\n  static forceDisallow() {\n    BrowserPollConnection.forceDisallow_ = true;\n  }\n\n  // Static method, use string literal so it can be accessed in a generic way\n  static isAvailable() {\n    if (isNodeSdk()) {\n      return false;\n    } else if (BrowserPollConnection.forceAllow_) {\n      return true;\n    } else {\n      // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\n      // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\n      return (\n        !BrowserPollConnection.forceDisallow_ &&\n        typeof document !== 'undefined' &&\n        document.createElement != null &&\n        !isChromeExtensionContentScript() &&\n        !isWindowsStoreApp()\n      );\n    }\n  }\n\n  /**\n   * No-op for polling\n   */\n  markConnectionHealthy() {}\n\n  /**\n   * Stops polling and cleans up the iframe\n   */\n  private shutdown_() {\n    this.isClosed_ = true;\n\n    if (this.scriptTagHolder) {\n      this.scriptTagHolder.close();\n      this.scriptTagHolder = null;\n    }\n\n    //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\n    if (this.myDisconnFrame) {\n      document.body.removeChild(this.myDisconnFrame);\n      this.myDisconnFrame = null;\n    }\n\n    if (this.connectTimeoutTimer_) {\n      clearTimeout(this.connectTimeoutTimer_);\n      this.connectTimeoutTimer_ = null;\n    }\n  }\n\n  /**\n   * Triggered when this transport is closed\n   */\n  private onClosed_() {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is closing itself');\n      this.shutdown_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_(this.everConnected_);\n        this.onDisconnect_ = null;\n      }\n    }\n  }\n\n  /**\n   * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\n   * that we've left.\n   */\n  close() {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is being closed.');\n      this.shutdown_();\n    }\n  }\n\n  /**\n   * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\n   * broken into chunks (since URLs have a small maximum length).\n   * @param data - The JSON data to transmit.\n   */\n  send(data: {}) {\n    const dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length);\n\n    //first, lets get the base64-encoded data\n    const base64data = base64Encode(dataStr);\n\n    //We can only fit a certain amount in each URL, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n    const dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\n\n    //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\n    //of segments so that we can reassemble the packet on the server.\n    for (let i = 0; i < dataSegs.length; i++) {\n      this.scriptTagHolder.enqueueSegment(\n        this.curSegmentNum,\n        dataSegs.length,\n        dataSegs[i]\n      );\n      this.curSegmentNum++;\n    }\n  }\n\n  /**\n   * This is how we notify the server that we're leaving.\n   * We aren't able to send requests with DHTML on a window close event, but we can\n   * trigger XHR requests in some browsers (everything but Opera basically).\n   */\n  addDisconnectPingFrame(id: string, pw: string) {\n    if (isNodeSdk()) {\n      return;\n    }\n    this.myDisconnFrame = document.createElement('iframe');\n    const urlParams: { [k: string]: string } = {};\n    urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\n    urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\n    urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\n    this.myDisconnFrame.src = this.urlFn(urlParams);\n    this.myDisconnFrame.style.display = 'none';\n\n    document.body.appendChild(this.myDisconnFrame);\n  }\n\n  /**\n   * Used to track the bytes received by this client\n   */\n  private incrementIncomingBytes_(args: unknown) {\n    // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\n    const bytesReceived = stringify(args).length;\n    this.bytesReceived += bytesReceived;\n    this.stats_.incrementCounter('bytes_received', bytesReceived);\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface IFrameElement extends HTMLIFrameElement {\n  doc: Document;\n}\n\n/*********************************************************************************************\n * A wrapper around an iframe that is used as a long-polling script holder.\n *********************************************************************************************/\nexport class FirebaseIFrameScriptHolder {\n  //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\n  //problems in some browsers.\n  outstandingRequests = new Set<number>();\n\n  //A queue of the pending segments waiting for transmission to the server.\n  pendingSegs: Array<{ seg: number; ts: number; d: unknown }> = [];\n\n  //A serial number. We use this for two things:\n  // 1) A way to ensure the browser doesn't cache responses to polls\n  // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\n  //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\n  //    JSONP code in the order it was added to the iframe.\n  currentSerial = Math.floor(Math.random() * 100000000);\n\n  // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\n  // incoming data from the server that we're waiting for).\n  sendNewPolls = true;\n\n  uniqueCallbackIdentifier: number;\n  myIFrame: IFrameElement;\n  alive: boolean;\n  myID: string;\n  myPW: string;\n  commandCB: (command: string, ...args: unknown[]) => void;\n  onMessageCB: (...args: unknown[]) => void;\n\n  /**\n   * @param commandCB - The callback to be called when control commands are recevied from the server.\n   * @param onMessageCB - The callback to be triggered when responses arrive from the server.\n   * @param onDisconnect - The callback to be triggered when this tag holder is closed\n   * @param urlFn - A function that provides the URL of the endpoint to send data to.\n   */\n  constructor(\n    commandCB: (command: string, ...args: unknown[]) => void,\n    onMessageCB: (...args: unknown[]) => void,\n    public onDisconnect: () => void,\n    public urlFn: (a: object) => string\n  ) {\n    if (!isNodeSdk()) {\n      //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\n      //iframes where we put the long-polling script tags. We have two callbacks:\n      //   1) Command Callback - Triggered for control issues, like starting a connection.\n      //   2) Message Callback - Triggered when new data arrives.\n      this.uniqueCallbackIdentifier = LUIDGenerator();\n      window[\n        FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier\n      ] = commandCB;\n      window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] =\n        onMessageCB;\n\n      //Create an iframe for us to add script tags to.\n      this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\n\n      // Set the iframe's contents.\n      let script = '';\n      // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\n      // for ie9, but ie8 needs to do it again in the document itself.\n      if (\n        this.myIFrame.src &&\n        this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:'\n      ) {\n        const currentDomain = document.domain;\n        script = '<script>document.domain=\"' + currentDomain + '\";</script>';\n      }\n      const iframeContents = '<html><body>' + script + '</body></html>';\n      try {\n        this.myIFrame.doc.open();\n        this.myIFrame.doc.write(iframeContents);\n        this.myIFrame.doc.close();\n      } catch (e) {\n        log('frame writing exception');\n        if (e.stack) {\n          log(e.stack);\n        }\n        log(e);\n      }\n    } else {\n      this.commandCB = commandCB;\n      this.onMessageCB = onMessageCB;\n    }\n  }\n\n  /**\n   * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\n   * actually use.\n   */\n  private static createIFrame_(): IFrameElement {\n    const iframe = document.createElement('iframe') as IFrameElement;\n    iframe.style.display = 'none';\n\n    // This is necessary in order to initialize the document inside the iframe\n    if (document.body) {\n      document.body.appendChild(iframe);\n      try {\n        // If document.domain has been modified in IE, this will throw an error, and we need to set the\n        // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\n        // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\n        const a = iframe.contentWindow.document;\n        if (!a) {\n          // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\n          log('No IE domain setting required');\n        }\n      } catch (e) {\n        const domain = document.domain;\n        iframe.src =\n          \"javascript:void((function(){document.open();document.domain='\" +\n          domain +\n          \"';document.close();})())\";\n      }\n    } else {\n      // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\n      // never gets hit.\n      throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\n    }\n\n    // Get the document of the iframe in a browser-specific way.\n    if (iframe.contentDocument) {\n      iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\n    } else if (iframe.contentWindow) {\n      iframe.doc = iframe.contentWindow.document; // Internet Explorer\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if ((iframe as any).document) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      iframe.doc = (iframe as any).document; //others?\n    }\n\n    return iframe;\n  }\n\n  /**\n   * Cancel all outstanding queries and remove the frame.\n   */\n  close() {\n    //Mark this iframe as dead, so no new requests are sent.\n    this.alive = false;\n\n    if (this.myIFrame) {\n      //We have to actually remove all of the html inside this iframe before removing it from the\n      //window, or IE will continue loading and executing the script tags we've already added, which\n      //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\n      this.myIFrame.doc.body.innerHTML = '';\n      setTimeout(() => {\n        if (this.myIFrame !== null) {\n          document.body.removeChild(this.myIFrame);\n          this.myIFrame = null;\n        }\n      }, Math.floor(0));\n    }\n\n    // Protect from being called recursively.\n    const onDisconnect = this.onDisconnect;\n    if (onDisconnect) {\n      this.onDisconnect = null;\n      onDisconnect();\n    }\n  }\n\n  /**\n   * Actually start the long-polling session by adding the first script tag(s) to the iframe.\n   * @param id - The ID of this connection\n   * @param pw - The password for this connection\n   */\n  startLongPoll(id: string, pw: string) {\n    this.myID = id;\n    this.myPW = pw;\n    this.alive = true;\n\n    //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\n    while (this.newRequest_()) {}\n  }\n\n  /**\n   * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\n   * too many outstanding requests and we are still alive.\n   *\n   * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\n   * needed.\n   */\n  private newRequest_() {\n    // We keep one outstanding request open all the time to receive data, but if we need to send data\n    // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\n    // close the old request.\n    if (\n      this.alive &&\n      this.sendNewPolls &&\n      this.outstandingRequests.size < (this.pendingSegs.length > 0 ? 2 : 1)\n    ) {\n      //construct our url\n      this.currentSerial++;\n      const urlParams: { [k: string]: string | number } = {};\n      urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\n      urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\n      let theURL = this.urlFn(urlParams);\n      //Now add as much data as we can.\n      let curDataString = '';\n      let i = 0;\n\n      while (this.pendingSegs.length > 0) {\n        //first, lets see if the next segment will fit.\n        const nextSeg = this.pendingSegs[0];\n        if (\n          (nextSeg.d as unknown[]).length +\n            SEG_HEADER_SIZE +\n            curDataString.length <=\n          MAX_URL_DATA_SIZE\n        ) {\n          //great, the segment will fit. Lets append it.\n          const theSeg = this.pendingSegs.shift();\n          curDataString =\n            curDataString +\n            '&' +\n            FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\n            i +\n            '=' +\n            theSeg.seg +\n            '&' +\n            FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\n            i +\n            '=' +\n            theSeg.ts +\n            '&' +\n            FIREBASE_LONGPOLL_DATA_PARAM +\n            i +\n            '=' +\n            theSeg.d;\n          i++;\n        } else {\n          break;\n        }\n      }\n\n      theURL = theURL + curDataString;\n      this.addLongPollTag_(theURL, this.currentSerial);\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Queue a packet for transmission to the server.\n   * @param segnum - A sequential id for this packet segment used for reassembly\n   * @param totalsegs - The total number of segments in this packet\n   * @param data - The data for this segment.\n   */\n  enqueueSegment(segnum: number, totalsegs: number, data: unknown) {\n    //add this to the queue of segments to send.\n    this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\n\n    //send the data immediately if there isn't already data being transmitted, unless\n    //startLongPoll hasn't been called yet.\n    if (this.alive) {\n      this.newRequest_();\n    }\n  }\n\n  /**\n   * Add a script tag for a regular long-poll request.\n   * @param url - The URL of the script tag.\n   * @param serial - The serial number of the request.\n   */\n  private addLongPollTag_(url: string, serial: number) {\n    //remember that we sent this request.\n    this.outstandingRequests.add(serial);\n\n    const doNewRequest = () => {\n      this.outstandingRequests.delete(serial);\n      this.newRequest_();\n    };\n\n    // If this request doesn't return on its own accord (by the server sending us some data), we'll\n    // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\n    const keepaliveTimeout = setTimeout(\n      doNewRequest,\n      Math.floor(KEEPALIVE_REQUEST_INTERVAL)\n    );\n\n    const readyStateCB = () => {\n      // Request completed.  Cancel the keepalive.\n      clearTimeout(keepaliveTimeout);\n\n      // Trigger a new request so we can continue receiving data.\n      doNewRequest();\n    };\n\n    this.addTag(url, readyStateCB);\n  }\n\n  /**\n   * Add an arbitrary script tag to the iframe.\n   * @param url - The URL for the script tag source.\n   * @param loadCB - A callback to be triggered once the script has loaded.\n   */\n  addTag(url: string, loadCB: () => void) {\n    if (isNodeSdk()) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (this as any).doNodeLongPoll(url, loadCB);\n    } else {\n      setTimeout(() => {\n        try {\n          // if we're already closed, don't add this poll\n          if (!this.sendNewPolls) {\n            return;\n          }\n          const newScript = this.myIFrame.doc.createElement('script');\n          newScript.type = 'text/javascript';\n          newScript.async = true;\n          newScript.src = url;\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          newScript.onload = (newScript as any).onreadystatechange =\n            function () {\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              const rstate = (newScript as any).readyState;\n              if (!rstate || rstate === 'loaded' || rstate === 'complete') {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                newScript.onload = (newScript as any).onreadystatechange = null;\n                if (newScript.parentNode) {\n                  newScript.parentNode.removeChild(newScript);\n                }\n                loadCB();\n              }\n            };\n          newScript.onerror = () => {\n            log('Long-poll script failed to load: ' + url);\n            this.sendNewPolls = false;\n            this.close();\n          };\n          this.myIFrame.doc.body.appendChild(newScript);\n        } catch (e) {\n          // TODO: we should make this error visible somehow\n        }\n      }, Math.floor(1));\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, isNodeSdk, jsonEval, stringify } from '@firebase/util';\n\nimport { RepoInfo, repoInfoConnectionURL } from '../core/RepoInfo';\nimport { StatsCollection } from '../core/stats/StatsCollection';\nimport { statsManagerGetCollection } from '../core/stats/StatsManager';\nimport { PersistentStorage } from '../core/storage/storage';\nimport { logWrapper, splitStringBySize } from '../core/util/util';\nimport { SDK_VERSION } from '../core/version';\n\nimport {\n  APPLICATION_ID_PARAM,\n  APP_CHECK_TOKEN_PARAM,\n  FORGE_DOMAIN_RE,\n  FORGE_REF,\n  LAST_SESSION_PARAM,\n  PROTOCOL_VERSION,\n  REFERER_PARAM,\n  TRANSPORT_SESSION_PARAM,\n  VERSION_PARAM,\n  WEBSOCKET\n} from './Constants';\nimport { Transport } from './Transport';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndeclare const MozWebSocket: any;\n\nconst WEBSOCKET_MAX_FRAME_SIZE = 16384;\nconst WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\n\nlet WebSocketImpl = null;\nif (typeof MozWebSocket !== 'undefined') {\n  WebSocketImpl = MozWebSocket;\n} else if (typeof WebSocket !== 'undefined') {\n  WebSocketImpl = WebSocket;\n}\n\nexport function setWebSocketImpl(impl) {\n  WebSocketImpl = impl;\n}\n\n/**\n * Create a new websocket connection with the given callbacks.\n */\nexport class WebSocketConnection implements Transport {\n  keepaliveTimer: number | null = null;\n  frames: string[] | null = null;\n  totalFrames = 0;\n  bytesSent = 0;\n  bytesReceived = 0;\n  connURL: string;\n  onDisconnect: (a?: boolean) => void;\n  onMessage: (msg: {}) => void;\n  mySock: WebSocket | null;\n  private log_: (...a: unknown[]) => void;\n  private stats_: StatsCollection;\n  private everConnected_: boolean;\n  private isClosed_: boolean;\n  private nodeAdmin: boolean;\n\n  /**\n   * @param connId identifier for this transport\n   * @param repoInfo The info for the websocket endpoint.\n   * @param applicationId The Firebase App ID for this project.\n   * @param appCheckToken The App Check Token for this client.\n   * @param authToken The Auth Token for this client.\n   * @param transportSessionId Optional transportSessionId if this is connecting\n   * to an existing transport session\n   * @param lastSessionId Optional lastSessionId if there was a previous\n   * connection\n   */\n  constructor(\n    public connId: string,\n    repoInfo: RepoInfo,\n    private applicationId?: string,\n    private appCheckToken?: string,\n    private authToken?: string,\n    transportSessionId?: string,\n    lastSessionId?: string\n  ) {\n    this.log_ = logWrapper(this.connId);\n    this.stats_ = statsManagerGetCollection(repoInfo);\n    this.connURL = WebSocketConnection.connectionURL_(\n      repoInfo,\n      transportSessionId,\n      lastSessionId,\n      appCheckToken,\n      applicationId\n    );\n    this.nodeAdmin = repoInfo.nodeAdmin;\n  }\n\n  /**\n   * @param repoInfo - The info for the websocket endpoint.\n   * @param transportSessionId - Optional transportSessionId if this is connecting to an existing transport\n   *                                         session\n   * @param lastSessionId - Optional lastSessionId if there was a previous connection\n   * @returns connection url\n   */\n  private static connectionURL_(\n    repoInfo: RepoInfo,\n    transportSessionId?: string,\n    lastSessionId?: string,\n    appCheckToken?: string,\n    applicationId?: string\n  ): string {\n    const urlParams: { [k: string]: string } = {};\n    urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n\n    if (\n      !isNodeSdk() &&\n      typeof location !== 'undefined' &&\n      location.hostname &&\n      FORGE_DOMAIN_RE.test(location.hostname)\n    ) {\n      urlParams[REFERER_PARAM] = FORGE_REF;\n    }\n    if (transportSessionId) {\n      urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\n    }\n    if (lastSessionId) {\n      urlParams[LAST_SESSION_PARAM] = lastSessionId;\n    }\n    if (appCheckToken) {\n      urlParams[APP_CHECK_TOKEN_PARAM] = appCheckToken;\n    }\n    if (applicationId) {\n      urlParams[APPLICATION_ID_PARAM] = applicationId;\n    }\n\n    return repoInfoConnectionURL(repoInfo, WEBSOCKET, urlParams);\n  }\n\n  /**\n   * @param onMessage - Callback when messages arrive\n   * @param onDisconnect - Callback with connection lost.\n   */\n  open(onMessage: (msg: {}) => void, onDisconnect: (a?: boolean) => void) {\n    this.onDisconnect = onDisconnect;\n    this.onMessage = onMessage;\n\n    this.log_('Websocket connecting to ' + this.connURL);\n\n    this.everConnected_ = false;\n    // Assume failure until proven otherwise.\n    PersistentStorage.set('previous_websocket_failure', true);\n\n    try {\n      let options: { [k: string]: object };\n      if (isNodeSdk()) {\n        const device = this.nodeAdmin ? 'AdminNode' : 'Node';\n        // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\n        options = {\n          headers: {\n            'User-Agent': `Firebase/${PROTOCOL_VERSION}/${SDK_VERSION}/${process.platform}/${device}`,\n            'X-Firebase-GMPID': this.applicationId || ''\n          }\n        };\n\n        // If using Node with admin creds, AppCheck-related checks are unnecessary.\n        // Note that we send the credentials here even if they aren't admin credentials, which is\n        // not a problem.\n        // Note that this header is just used to bypass appcheck, and the token should still be sent\n        // through the websocket connection once it is established.\n        if (this.authToken) {\n          options.headers['Authorization'] = `Bearer ${this.authToken}`;\n        }\n        if (this.appCheckToken) {\n          options.headers['X-Firebase-AppCheck'] = this.appCheckToken;\n        }\n\n        // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\n        const env = process['env'];\n        const proxy =\n          this.connURL.indexOf('wss://') === 0\n            ? env['HTTPS_PROXY'] || env['https_proxy']\n            : env['HTTP_PROXY'] || env['http_proxy'];\n\n        if (proxy) {\n          options['proxy'] = { origin: proxy };\n        }\n      }\n      this.mySock = new WebSocketImpl(this.connURL, [], options);\n    } catch (e) {\n      this.log_('Error instantiating WebSocket.');\n      const error = e.message || e.data;\n      if (error) {\n        this.log_(error);\n      }\n      this.onClosed_();\n      return;\n    }\n\n    this.mySock.onopen = () => {\n      this.log_('Websocket connected.');\n      this.everConnected_ = true;\n    };\n\n    this.mySock.onclose = () => {\n      this.log_('Websocket connection was disconnected.');\n      this.mySock = null;\n      this.onClosed_();\n    };\n\n    this.mySock.onmessage = m => {\n      this.handleIncomingFrame(m as {});\n    };\n\n    this.mySock.onerror = e => {\n      this.log_('WebSocket error.  Closing connection.');\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const error = (e as any).message || (e as any).data;\n      if (error) {\n        this.log_(error);\n      }\n      this.onClosed_();\n    };\n  }\n\n  /**\n   * No-op for websockets, we don't need to do anything once the connection is confirmed as open\n   */\n  start() {}\n\n  static forceDisallow_: boolean;\n\n  static forceDisallow() {\n    WebSocketConnection.forceDisallow_ = true;\n  }\n\n  static isAvailable(): boolean {\n    let isOldAndroid = false;\n    if (typeof navigator !== 'undefined' && navigator.userAgent) {\n      const oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\n      const oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\n      if (oldAndroidMatch && oldAndroidMatch.length > 1) {\n        if (parseFloat(oldAndroidMatch[1]) < 4.4) {\n          isOldAndroid = true;\n        }\n      }\n    }\n\n    return (\n      !isOldAndroid &&\n      WebSocketImpl !== null &&\n      !WebSocketConnection.forceDisallow_\n    );\n  }\n\n  /**\n   * Number of response before we consider the connection \"healthy.\"\n   */\n  static responsesRequiredToBeHealthy = 2;\n\n  /**\n   * Time to wait for the connection te become healthy before giving up.\n   */\n  static healthyTimeout = 30000;\n\n  /**\n   * Returns true if we previously failed to connect with this transport.\n   */\n  static previouslyFailed(): boolean {\n    // If our persistent storage is actually only in-memory storage,\n    // we default to assuming that it previously failed to be safe.\n    return (\n      PersistentStorage.isInMemoryStorage ||\n      PersistentStorage.get('previous_websocket_failure') === true\n    );\n  }\n\n  markConnectionHealthy() {\n    PersistentStorage.remove('previous_websocket_failure');\n  }\n\n  private appendFrame_(data: string) {\n    this.frames.push(data);\n    if (this.frames.length === this.totalFrames) {\n      const fullMess = this.frames.join('');\n      this.frames = null;\n      const jsonMess = jsonEval(fullMess) as object;\n\n      //handle the message\n      this.onMessage(jsonMess);\n    }\n  }\n\n  /**\n   * @param frameCount - The number of frames we are expecting from the server\n   */\n  private handleNewFrameCount_(frameCount: number) {\n    this.totalFrames = frameCount;\n    this.frames = [];\n  }\n\n  /**\n   * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\n   * @returns Any remaining data to be process, or null if there is none\n   */\n  private extractFrameCount_(data: string): string | null {\n    assert(this.frames === null, 'We already have a frame buffer');\n    // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\n    // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\n    if (data.length <= 6) {\n      const frameCount = Number(data);\n      if (!isNaN(frameCount)) {\n        this.handleNewFrameCount_(frameCount);\n        return null;\n      }\n    }\n    this.handleNewFrameCount_(1);\n    return data;\n  }\n\n  /**\n   * Process a websocket frame that has arrived from the server.\n   * @param mess - The frame data\n   */\n  handleIncomingFrame(mess: { [k: string]: unknown }) {\n    if (this.mySock === null) {\n      return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\n    }\n    const data = mess['data'] as string;\n    this.bytesReceived += data.length;\n    this.stats_.incrementCounter('bytes_received', data.length);\n\n    this.resetKeepAlive();\n\n    if (this.frames !== null) {\n      // we're buffering\n      this.appendFrame_(data);\n    } else {\n      // try to parse out a frame count, otherwise, assume 1 and process it\n      const remainingData = this.extractFrameCount_(data);\n      if (remainingData !== null) {\n        this.appendFrame_(remainingData);\n      }\n    }\n  }\n\n  /**\n   * Send a message to the server\n   * @param data - The JSON object to transmit\n   */\n  send(data: {}) {\n    this.resetKeepAlive();\n\n    const dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length);\n\n    //We can only fit a certain amount in each websocket frame, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n\n    const dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\n\n    //Send the length header\n    if (dataSegs.length > 1) {\n      this.sendString_(String(dataSegs.length));\n    }\n\n    //Send the actual data in segments.\n    for (let i = 0; i < dataSegs.length; i++) {\n      this.sendString_(dataSegs[i]);\n    }\n  }\n\n  private shutdown_() {\n    this.isClosed_ = true;\n    if (this.keepaliveTimer) {\n      clearInterval(this.keepaliveTimer);\n      this.keepaliveTimer = null;\n    }\n\n    if (this.mySock) {\n      this.mySock.close();\n      this.mySock = null;\n    }\n  }\n\n  private onClosed_() {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is closing itself');\n      this.shutdown_();\n\n      // since this is an internal close, trigger the close listener\n      if (this.onDisconnect) {\n        this.onDisconnect(this.everConnected_);\n        this.onDisconnect = null;\n      }\n    }\n  }\n\n  /**\n   * External-facing close handler.\n   * Close the websocket and kill the connection.\n   */\n  close() {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is being closed');\n      this.shutdown_();\n    }\n  }\n\n  /**\n   * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\n   * the last activity.\n   */\n  resetKeepAlive() {\n    clearInterval(this.keepaliveTimer);\n    this.keepaliveTimer = setInterval(() => {\n      //If there has been no websocket activity for a while, send a no-op\n      if (this.mySock) {\n        this.sendString_('0');\n      }\n      this.resetKeepAlive();\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL)) as any;\n  }\n\n  /**\n   * Send a string over the websocket.\n   *\n   * @param str - String to send.\n   */\n  private sendString_(str: string) {\n    // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\n    // calls for some unknown reason.  We treat these as an error and disconnect.\n    // See https://app.asana.com/0/58926111402292/68021340250410\n    try {\n      this.mySock.send(str);\n    } catch (e) {\n      this.log_(\n        'Exception thrown from WebSocket.send():',\n        e.message || e.data,\n        'Closing connection.'\n      );\n      setTimeout(this.onClosed_.bind(this), 0);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../core/RepoInfo';\nimport { warn } from '../core/util/util';\n\nimport { BrowserPollConnection } from './BrowserPollConnection';\nimport { TransportConstructor } from './Transport';\nimport { WebSocketConnection } from './WebSocketConnection';\n\n/**\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\n * lifecycle.\n *\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\n * they are available.\n */\nexport class TransportManager {\n  private transports_: TransportConstructor[];\n\n  // Keeps track of whether the TransportManager has already chosen a transport to use\n  static globalTransportInitialized_ = false;\n\n  static get ALL_TRANSPORTS() {\n    return [BrowserPollConnection, WebSocketConnection];\n  }\n\n  /**\n   * Returns whether transport has been selected to ensure WebSocketConnection or BrowserPollConnection are not called after\n   * TransportManager has already set up transports_\n   */\n  static get IS_TRANSPORT_INITIALIZED() {\n    return this.globalTransportInitialized_;\n  }\n\n  /**\n   * @param repoInfo - Metadata around the namespace we're connecting to\n   */\n  constructor(repoInfo: RepoInfo) {\n    this.initTransports_(repoInfo);\n  }\n\n  private initTransports_(repoInfo: RepoInfo) {\n    const isWebSocketsAvailable: boolean =\n      WebSocketConnection && WebSocketConnection['isAvailable']();\n    let isSkipPollConnection =\n      isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\n\n    if (repoInfo.webSocketOnly) {\n      if (!isWebSocketsAvailable) {\n        warn(\n          \"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\"\n        );\n      }\n\n      isSkipPollConnection = true;\n    }\n\n    if (isSkipPollConnection) {\n      this.transports_ = [WebSocketConnection];\n    } else {\n      const transports = (this.transports_ = [] as TransportConstructor[]);\n      for (const transport of TransportManager.ALL_TRANSPORTS) {\n        if (transport && transport['isAvailable']()) {\n          transports.push(transport);\n        }\n      }\n      TransportManager.globalTransportInitialized_ = true;\n    }\n  }\n\n  /**\n   * @returns The constructor for the initial transport to use\n   */\n  initialTransport(): TransportConstructor {\n    if (this.transports_.length > 0) {\n      return this.transports_[0];\n    } else {\n      throw new Error('No transports available');\n    }\n  }\n\n  /**\n   * @returns The constructor for the next transport, or null\n   */\n  upgradeTransport(): TransportConstructor | null {\n    if (this.transports_.length > 1) {\n      return this.transports_[1];\n    } else {\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../core/RepoInfo';\nimport { PersistentStorage } from '../core/storage/storage';\nimport { Indexable } from '../core/util/misc';\nimport {\n  error,\n  logWrapper,\n  requireKey,\n  setTimeoutNonBlocking,\n  warn\n} from '../core/util/util';\n\nimport { PROTOCOL_VERSION } from './Constants';\nimport { Transport, TransportConstructor } from './Transport';\nimport { TransportManager } from './TransportManager';\n\n// Abort upgrade attempt if it takes longer than 60s.\nconst UPGRADE_TIMEOUT = 60000;\n\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\nconst DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\n\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\n// but we've sent/received enough bytes, we don't cancel the connection.\nconst BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\nconst BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\n\nconst enum RealtimeState {\n  CONNECTING,\n  CONNECTED,\n  DISCONNECTED\n}\n\nconst MESSAGE_TYPE = 't';\nconst MESSAGE_DATA = 'd';\nconst CONTROL_SHUTDOWN = 's';\nconst CONTROL_RESET = 'r';\nconst CONTROL_ERROR = 'e';\nconst CONTROL_PONG = 'o';\nconst SWITCH_ACK = 'a';\nconst END_TRANSMISSION = 'n';\nconst PING = 'p';\n\nconst SERVER_HELLO = 'h';\n\n/**\n * Creates a new real-time connection to the server using whichever method works\n * best in the current browser.\n */\nexport class Connection {\n  connectionCount = 0;\n  pendingDataMessages: unknown[] = [];\n  sessionId: string;\n\n  private conn_: Transport;\n  private healthyTimeout_: number;\n  private isHealthy_: boolean;\n  private log_: (...args: unknown[]) => void;\n  private primaryResponsesRequired_: number;\n  private rx_: Transport;\n  private secondaryConn_: Transport;\n  private secondaryResponsesRequired_: number;\n  private state_ = RealtimeState.CONNECTING;\n  private transportManager_: TransportManager;\n  private tx_: Transport;\n\n  /**\n   * @param id - an id for this connection\n   * @param repoInfo_ - the info for the endpoint to connect to\n   * @param applicationId_ - the Firebase App ID for this project\n   * @param appCheckToken_ - The App Check Token for this device.\n   * @param authToken_ - The auth token for this session.\n   * @param onMessage_ - the callback to be triggered when a server-push message arrives\n   * @param onReady_ - the callback to be triggered when this connection is ready to send messages.\n   * @param onDisconnect_ - the callback to be triggered when a connection was lost\n   * @param onKill_ - the callback to be triggered when this connection has permanently shut down.\n   * @param lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\n   */\n  constructor(\n    public id: string,\n    private repoInfo_: RepoInfo,\n    private applicationId_: string | undefined,\n    private appCheckToken_: string | undefined,\n    private authToken_: string | undefined,\n    private onMessage_: (a: {}) => void,\n    private onReady_: (a: number, b: string) => void,\n    private onDisconnect_: () => void,\n    private onKill_: (a: string) => void,\n    public lastSessionId?: string\n  ) {\n    this.log_ = logWrapper('c:' + this.id + ':');\n    this.transportManager_ = new TransportManager(repoInfo_);\n    this.log_('Connection created');\n    this.start_();\n  }\n\n  /**\n   * Starts a connection attempt\n   */\n  private start_(): void {\n    const conn = this.transportManager_.initialTransport();\n    this.conn_ = new conn(\n      this.nextTransportId_(),\n      this.repoInfo_,\n      this.applicationId_,\n      this.appCheckToken_,\n      this.authToken_,\n      null,\n      this.lastSessionId\n    );\n\n    // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n    this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\n\n    const onMessageReceived = this.connReceiver_(this.conn_);\n    const onConnectionLost = this.disconnReceiver_(this.conn_);\n    this.tx_ = this.conn_;\n    this.rx_ = this.conn_;\n    this.secondaryConn_ = null;\n    this.isHealthy_ = false;\n\n    /*\n     * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\n     * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\n     * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\n     * still have the context of your originating frame.\n     */\n    setTimeout(() => {\n      // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\n      this.conn_ && this.conn_.open(onMessageReceived, onConnectionLost);\n    }, Math.floor(0));\n\n    const healthyTimeoutMS = conn['healthyTimeout'] || 0;\n    if (healthyTimeoutMS > 0) {\n      this.healthyTimeout_ = setTimeoutNonBlocking(() => {\n        this.healthyTimeout_ = null;\n        if (!this.isHealthy_) {\n          if (\n            this.conn_ &&\n            this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE\n          ) {\n            this.log_(\n              'Connection exceeded healthy timeout but has received ' +\n                this.conn_.bytesReceived +\n                ' bytes.  Marking connection healthy.'\n            );\n            this.isHealthy_ = true;\n            this.conn_.markConnectionHealthy();\n          } else if (\n            this.conn_ &&\n            this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE\n          ) {\n            this.log_(\n              'Connection exceeded healthy timeout but has sent ' +\n                this.conn_.bytesSent +\n                ' bytes.  Leaving connection alive.'\n            );\n            // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\n            // the server.\n          } else {\n            this.log_('Closing unhealthy connection after timeout.');\n            this.close();\n          }\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      }, Math.floor(healthyTimeoutMS)) as any;\n    }\n  }\n\n  private nextTransportId_(): string {\n    return 'c:' + this.id + ':' + this.connectionCount++;\n  }\n\n  private disconnReceiver_(conn) {\n    return everConnected => {\n      if (conn === this.conn_) {\n        this.onConnectionLost_(everConnected);\n      } else if (conn === this.secondaryConn_) {\n        this.log_('Secondary connection lost.');\n        this.onSecondaryConnectionLost_();\n      } else {\n        this.log_('closing an old connection');\n      }\n    };\n  }\n\n  private connReceiver_(conn: Transport) {\n    return (message: Indexable) => {\n      if (this.state_ !== RealtimeState.DISCONNECTED) {\n        if (conn === this.rx_) {\n          this.onPrimaryMessageReceived_(message);\n        } else if (conn === this.secondaryConn_) {\n          this.onSecondaryMessageReceived_(message);\n        } else {\n          this.log_('message on old connection');\n        }\n      }\n    };\n  }\n\n  /**\n   * @param dataMsg - An arbitrary data message to be sent to the server\n   */\n  sendRequest(dataMsg: object) {\n    // wrap in a data message envelope and send it on\n    const msg = { t: 'd', d: dataMsg };\n    this.sendData_(msg);\n  }\n\n  tryCleanupConnection() {\n    if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\n      this.log_(\n        'cleaning up and promoting a connection: ' + this.secondaryConn_.connId\n      );\n      this.conn_ = this.secondaryConn_;\n      this.secondaryConn_ = null;\n      // the server will shutdown the old connection\n    }\n  }\n\n  private onSecondaryControl_(controlData: { [k: string]: unknown }) {\n    if (MESSAGE_TYPE in controlData) {\n      const cmd = controlData[MESSAGE_TYPE] as string;\n      if (cmd === SWITCH_ACK) {\n        this.upgradeIfSecondaryHealthy_();\n      } else if (cmd === CONTROL_RESET) {\n        // Most likely the session wasn't valid. Abandon the switch attempt\n        this.log_('Got a reset on secondary, closing it');\n        this.secondaryConn_.close();\n        // If we were already using this connection for something, than we need to fully close\n        if (\n          this.tx_ === this.secondaryConn_ ||\n          this.rx_ === this.secondaryConn_\n        ) {\n          this.close();\n        }\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on secondary.');\n        this.secondaryResponsesRequired_--;\n        this.upgradeIfSecondaryHealthy_();\n      }\n    }\n  }\n\n  private onSecondaryMessageReceived_(parsedData: Indexable) {\n    const layer: string = requireKey('t', parsedData) as string;\n    const data: unknown = requireKey('d', parsedData);\n    if (layer === 'c') {\n      this.onSecondaryControl_(data as Indexable);\n    } else if (layer === 'd') {\n      // got a data message, but we're still second connection. Need to buffer it up\n      this.pendingDataMessages.push(data);\n    } else {\n      throw new Error('Unknown protocol layer: ' + layer);\n    }\n  }\n\n  private upgradeIfSecondaryHealthy_() {\n    if (this.secondaryResponsesRequired_ <= 0) {\n      this.log_('Secondary connection is healthy.');\n      this.isHealthy_ = true;\n      this.secondaryConn_.markConnectionHealthy();\n      this.proceedWithUpgrade_();\n    } else {\n      // Send a ping to make sure the connection is healthy.\n      this.log_('sending ping on secondary.');\n      this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\n    }\n  }\n\n  private proceedWithUpgrade_() {\n    // tell this connection to consider itself open\n    this.secondaryConn_.start();\n    // send ack\n    this.log_('sending client ack on secondary');\n    this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\n\n    // send end packet on primary transport, switch to sending on this one\n    // can receive on this one, buffer responses until end received on primary transport\n    this.log_('Ending transmission on primary');\n    this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\n    this.tx_ = this.secondaryConn_;\n\n    this.tryCleanupConnection();\n  }\n\n  private onPrimaryMessageReceived_(parsedData: { [k: string]: unknown }) {\n    // Must refer to parsedData properties in quotes, so closure doesn't touch them.\n    const layer: string = requireKey('t', parsedData) as string;\n    const data: unknown = requireKey('d', parsedData);\n    if (layer === 'c') {\n      this.onControl_(data as { [k: string]: unknown });\n    } else if (layer === 'd') {\n      this.onDataMessage_(data);\n    }\n  }\n\n  private onDataMessage_(message: unknown) {\n    this.onPrimaryResponse_();\n\n    // We don't do anything with data messages, just kick them up a level\n    this.onMessage_(message);\n  }\n\n  private onPrimaryResponse_() {\n    if (!this.isHealthy_) {\n      this.primaryResponsesRequired_--;\n      if (this.primaryResponsesRequired_ <= 0) {\n        this.log_('Primary connection is healthy.');\n        this.isHealthy_ = true;\n        this.conn_.markConnectionHealthy();\n      }\n    }\n  }\n\n  private onControl_(controlData: { [k: string]: unknown }) {\n    const cmd: string = requireKey(MESSAGE_TYPE, controlData) as string;\n    if (MESSAGE_DATA in controlData) {\n      const payload = controlData[MESSAGE_DATA];\n      if (cmd === SERVER_HELLO) {\n        this.onHandshake_(\n          payload as {\n            ts: number;\n            v: string;\n            h: string;\n            s: string;\n          }\n        );\n      } else if (cmd === END_TRANSMISSION) {\n        this.log_('recvd end transmission on primary');\n        this.rx_ = this.secondaryConn_;\n        for (let i = 0; i < this.pendingDataMessages.length; ++i) {\n          this.onDataMessage_(this.pendingDataMessages[i]);\n        }\n        this.pendingDataMessages = [];\n        this.tryCleanupConnection();\n      } else if (cmd === CONTROL_SHUTDOWN) {\n        // This was previously the 'onKill' callback passed to the lower-level connection\n        // payload in this case is the reason for the shutdown. Generally a human-readable error\n        this.onConnectionShutdown_(payload as string);\n      } else if (cmd === CONTROL_RESET) {\n        // payload in this case is the host we should contact\n        this.onReset_(payload as string);\n      } else if (cmd === CONTROL_ERROR) {\n        error('Server Error: ' + payload);\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on primary.');\n        this.onPrimaryResponse_();\n        this.sendPingOnPrimaryIfNecessary_();\n      } else {\n        error('Unknown control packet command: ' + cmd);\n      }\n    }\n  }\n\n  /**\n   * @param handshake - The handshake data returned from the server\n   */\n  private onHandshake_(handshake: {\n    ts: number;\n    v: string;\n    h: string;\n    s: string;\n  }): void {\n    const timestamp = handshake.ts;\n    const version = handshake.v;\n    const host = handshake.h;\n    this.sessionId = handshake.s;\n    this.repoInfo_.host = host;\n    // if we've already closed the connection, then don't bother trying to progress further\n    if (this.state_ === RealtimeState.CONNECTING) {\n      this.conn_.start();\n      this.onConnectionEstablished_(this.conn_, timestamp);\n      if (PROTOCOL_VERSION !== version) {\n        warn('Protocol version mismatch detected');\n      }\n      // TODO: do we want to upgrade? when? maybe a delay?\n      this.tryStartUpgrade_();\n    }\n  }\n\n  private tryStartUpgrade_() {\n    const conn = this.transportManager_.upgradeTransport();\n    if (conn) {\n      this.startUpgrade_(conn);\n    }\n  }\n\n  private startUpgrade_(conn: TransportConstructor) {\n    this.secondaryConn_ = new conn(\n      this.nextTransportId_(),\n      this.repoInfo_,\n      this.applicationId_,\n      this.appCheckToken_,\n      this.authToken_,\n      this.sessionId\n    );\n    // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n    this.secondaryResponsesRequired_ =\n      conn['responsesRequiredToBeHealthy'] || 0;\n\n    const onMessage = this.connReceiver_(this.secondaryConn_);\n    const onDisconnect = this.disconnReceiver_(this.secondaryConn_);\n    this.secondaryConn_.open(onMessage, onDisconnect);\n\n    // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\n    setTimeoutNonBlocking(() => {\n      if (this.secondaryConn_) {\n        this.log_('Timed out trying to upgrade.');\n        this.secondaryConn_.close();\n      }\n    }, Math.floor(UPGRADE_TIMEOUT));\n  }\n\n  private onReset_(host: string) {\n    this.log_('Reset packet received.  New host: ' + host);\n    this.repoInfo_.host = host;\n    // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\n    // We don't currently support resets after the connection has already been established\n    if (this.state_ === RealtimeState.CONNECTED) {\n      this.close();\n    } else {\n      // Close whatever connections we have open and start again.\n      this.closeConnections_();\n      this.start_();\n    }\n  }\n\n  private onConnectionEstablished_(conn: Transport, timestamp: number) {\n    this.log_('Realtime connection established.');\n    this.conn_ = conn;\n    this.state_ = RealtimeState.CONNECTED;\n\n    if (this.onReady_) {\n      this.onReady_(timestamp, this.sessionId);\n      this.onReady_ = null;\n    }\n\n    // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\n    // send some pings.\n    if (this.primaryResponsesRequired_ === 0) {\n      this.log_('Primary connection is healthy.');\n      this.isHealthy_ = true;\n    } else {\n      setTimeoutNonBlocking(() => {\n        this.sendPingOnPrimaryIfNecessary_();\n      }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\n    }\n  }\n\n  private sendPingOnPrimaryIfNecessary_() {\n    // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\n    if (!this.isHealthy_ && this.state_ === RealtimeState.CONNECTED) {\n      this.log_('sending ping on primary.');\n      this.sendData_({ t: 'c', d: { t: PING, d: {} } });\n    }\n  }\n\n  private onSecondaryConnectionLost_() {\n    const conn = this.secondaryConn_;\n    this.secondaryConn_ = null;\n    if (this.tx_ === conn || this.rx_ === conn) {\n      // we are relying on this connection already in some capacity. Therefore, a failure is real\n      this.close();\n    }\n  }\n\n  /**\n   * @param everConnected - Whether or not the connection ever reached a server. Used to determine if\n   * we should flush the host cache\n   */\n  private onConnectionLost_(everConnected: boolean) {\n    this.conn_ = null;\n\n    // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\n    // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\n    if (!everConnected && this.state_ === RealtimeState.CONNECTING) {\n      this.log_('Realtime connection failed.');\n      // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\n      if (this.repoInfo_.isCacheableHost()) {\n        PersistentStorage.remove('host:' + this.repoInfo_.host);\n        // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\n        this.repoInfo_.internalHost = this.repoInfo_.host;\n      }\n    } else if (this.state_ === RealtimeState.CONNECTED) {\n      this.log_('Realtime connection lost.');\n    }\n\n    this.close();\n  }\n\n  private onConnectionShutdown_(reason: string) {\n    this.log_('Connection shutdown command received. Shutting down...');\n\n    if (this.onKill_) {\n      this.onKill_(reason);\n      this.onKill_ = null;\n    }\n\n    // We intentionally don't want to fire onDisconnect (kill is a different case),\n    // so clear the callback.\n    this.onDisconnect_ = null;\n\n    this.close();\n  }\n\n  private sendData_(data: object) {\n    if (this.state_ !== RealtimeState.CONNECTED) {\n      throw 'Connection is not connected';\n    } else {\n      this.tx_.send(data);\n    }\n  }\n\n  /**\n   * Cleans up this connection, calling the appropriate callbacks\n   */\n  close() {\n    if (this.state_ !== RealtimeState.DISCONNECTED) {\n      this.log_('Closing realtime connection.');\n      this.state_ = RealtimeState.DISCONNECTED;\n\n      this.closeConnections_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_();\n        this.onDisconnect_ = null;\n      }\n    }\n  }\n\n  private closeConnections_() {\n    this.log_('Shutting down all connections');\n    if (this.conn_) {\n      this.conn_.close();\n      this.conn_ = null;\n    }\n\n    if (this.secondaryConn_) {\n      this.secondaryConn_.close();\n      this.secondaryConn_ = null;\n    }\n\n    if (this.healthyTimeout_) {\n      clearTimeout(this.healthyTimeout_);\n      this.healthyTimeout_ = null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { QueryContext } from './view/EventRegistration';\n\n/**\n * Interface defining the set of actions that can be performed against the Firebase server\n * (basically corresponds to our wire protocol).\n *\n * @interface\n */\nexport abstract class ServerActions {\n  abstract listen(\n    query: QueryContext,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ): void;\n\n  /**\n   * Remove a listen.\n   */\n  abstract unlisten(query: QueryContext, tag: number | null): void;\n\n  /**\n   * Get the server value satisfying this query.\n   */\n  abstract get(query: QueryContext): Promise<string>;\n\n  put(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void,\n    hash?: string\n  ) {}\n\n  merge(\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {}\n\n  /**\n   * Refreshes the auth token for the current connection.\n   * @param token - The authentication token\n   */\n  refreshAuthToken(token: string) {}\n\n  /**\n   * Refreshes the app check token for the current connection.\n   * @param token The app check token\n   */\n  refreshAppCheckToken(token: string) {}\n\n  onDisconnectPut(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  onDisconnectMerge(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  onDisconnectCancel(\n    pathString: string,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  reportStats(stats: { [k: string]: unknown }) {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\n/**\n * Base class to be used if you want to emit events. Call the constructor with\n * the set of allowed event names.\n */\nexport abstract class EventEmitter {\n  private listeners_: {\n    [eventType: string]: Array<{\n      callback(...args: unknown[]): void;\n      context: unknown;\n    }>;\n  } = {};\n\n  constructor(private allowedEvents_: string[]) {\n    assert(\n      Array.isArray(allowedEvents_) && allowedEvents_.length > 0,\n      'Requires a non-empty array'\n    );\n  }\n\n  /**\n   * To be overridden by derived classes in order to fire an initial event when\n   * somebody subscribes for data.\n   *\n   * @returns {Array.<*>} Array of parameters to trigger initial event with.\n   */\n  abstract getInitialEvent(eventType: string): unknown[];\n\n  /**\n   * To be called by derived classes to trigger events.\n   */\n  protected trigger(eventType: string, ...varArgs: unknown[]) {\n    if (Array.isArray(this.listeners_[eventType])) {\n      // Clone the list, since callbacks could add/remove listeners.\n      const listeners = [...this.listeners_[eventType]];\n\n      for (let i = 0; i < listeners.length; i++) {\n        listeners[i].callback.apply(listeners[i].context, varArgs);\n      }\n    }\n  }\n\n  on(eventType: string, callback: (a: unknown) => void, context: unknown) {\n    this.validateEventType_(eventType);\n    this.listeners_[eventType] = this.listeners_[eventType] || [];\n    this.listeners_[eventType].push({ callback, context });\n\n    const eventData = this.getInitialEvent(eventType);\n    if (eventData) {\n      callback.apply(context, eventData);\n    }\n  }\n\n  off(eventType: string, callback: (a: unknown) => void, context: unknown) {\n    this.validateEventType_(eventType);\n    const listeners = this.listeners_[eventType] || [];\n    for (let i = 0; i < listeners.length; i++) {\n      if (\n        listeners[i].callback === callback &&\n        (!context || context === listeners[i].context)\n      ) {\n        listeners.splice(i, 1);\n        return;\n      }\n    }\n  }\n\n  private validateEventType_(eventType: string) {\n    assert(\n      this.allowedEvents_.find(et => {\n        return et === eventType;\n      }),\n      'Unknown event: ' + eventType\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, isMobileCordova } from '@firebase/util';\n\nimport { EventEmitter } from './EventEmitter';\n\n/**\n * Monitors online state (as reported by window.online/offline events).\n *\n * The expectation is that this could have many false positives (thinks we are online\n * when we're not), but no false negatives.  So we can safely use it to determine when\n * we definitely cannot reach the internet.\n */\nexport class OnlineMonitor extends EventEmitter {\n  private online_ = true;\n\n  static getInstance() {\n    return new OnlineMonitor();\n  }\n\n  constructor() {\n    super(['online']);\n\n    // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\n    // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\n    // It would seem that the 'online' event does not always fire consistently. So we disable it\n    // for Cordova.\n    if (\n      typeof window !== 'undefined' &&\n      typeof window.addEventListener !== 'undefined' &&\n      !isMobileCordova()\n    ) {\n      window.addEventListener(\n        'online',\n        () => {\n          if (!this.online_) {\n            this.online_ = true;\n            this.trigger('online', true);\n          }\n        },\n        false\n      );\n\n      window.addEventListener(\n        'offline',\n        () => {\n          if (this.online_) {\n            this.online_ = false;\n            this.trigger('online', false);\n          }\n        },\n        false\n      );\n    }\n  }\n\n  getInitialEvent(eventType: string): boolean[] {\n    assert(eventType === 'online', 'Unknown event type: ' + eventType);\n    return [this.online_];\n  }\n\n  currentlyOnline(): boolean {\n    return this.online_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringLength } from '@firebase/util';\n\nimport { nameCompare } from './util';\n\n/** Maximum key depth. */\nconst MAX_PATH_DEPTH = 32;\n\n/** Maximum number of (UTF8) bytes in a Firebase path. */\nconst MAX_PATH_LENGTH_BYTES = 768;\n\n/**\n * An immutable object representing a parsed path.  It's immutable so that you\n * can pass them around to other functions without worrying about them changing\n * it.\n */\n\nexport class Path {\n  pieces_: string[];\n  pieceNum_: number;\n\n  /**\n   * @param pathOrString - Path string to parse, or another path, or the raw\n   * tokens array\n   */\n  constructor(pathOrString: string | string[], pieceNum?: number) {\n    if (pieceNum === void 0) {\n      this.pieces_ = (pathOrString as string).split('/');\n\n      // Remove empty pieces.\n      let copyTo = 0;\n      for (let i = 0; i < this.pieces_.length; i++) {\n        if (this.pieces_[i].length > 0) {\n          this.pieces_[copyTo] = this.pieces_[i];\n          copyTo++;\n        }\n      }\n      this.pieces_.length = copyTo;\n\n      this.pieceNum_ = 0;\n    } else {\n      this.pieces_ = pathOrString as string[];\n      this.pieceNum_ = pieceNum;\n    }\n  }\n\n  toString(): string {\n    let pathString = '';\n    for (let i = this.pieceNum_; i < this.pieces_.length; i++) {\n      if (this.pieces_[i] !== '') {\n        pathString += '/' + this.pieces_[i];\n      }\n    }\n\n    return pathString || '/';\n  }\n}\n\nexport function newEmptyPath(): Path {\n  return new Path('');\n}\n\nexport function pathGetFront(path: Path): string | null {\n  if (path.pieceNum_ >= path.pieces_.length) {\n    return null;\n  }\n\n  return path.pieces_[path.pieceNum_];\n}\n\n/**\n * @returns The number of segments in this path\n */\nexport function pathGetLength(path: Path): number {\n  return path.pieces_.length - path.pieceNum_;\n}\n\nexport function pathPopFront(path: Path): Path {\n  let pieceNum = path.pieceNum_;\n  if (pieceNum < path.pieces_.length) {\n    pieceNum++;\n  }\n  return new Path(path.pieces_, pieceNum);\n}\n\nexport function pathGetBack(path: Path): string | null {\n  if (path.pieceNum_ < path.pieces_.length) {\n    return path.pieces_[path.pieces_.length - 1];\n  }\n\n  return null;\n}\n\nexport function pathToUrlEncodedString(path: Path): string {\n  let pathString = '';\n  for (let i = path.pieceNum_; i < path.pieces_.length; i++) {\n    if (path.pieces_[i] !== '') {\n      pathString += '/' + encodeURIComponent(String(path.pieces_[i]));\n    }\n  }\n\n  return pathString || '/';\n}\n\n/**\n * Shallow copy of the parts of the path.\n *\n */\nexport function pathSlice(path: Path, begin: number = 0): string[] {\n  return path.pieces_.slice(path.pieceNum_ + begin);\n}\n\nexport function pathParent(path: Path): Path | null {\n  if (path.pieceNum_ >= path.pieces_.length) {\n    return null;\n  }\n\n  const pieces = [];\n  for (let i = path.pieceNum_; i < path.pieces_.length - 1; i++) {\n    pieces.push(path.pieces_[i]);\n  }\n\n  return new Path(pieces, 0);\n}\n\nexport function pathChild(path: Path, childPathObj: string | Path): Path {\n  const pieces = [];\n  for (let i = path.pieceNum_; i < path.pieces_.length; i++) {\n    pieces.push(path.pieces_[i]);\n  }\n\n  if (childPathObj instanceof Path) {\n    for (let i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\n      pieces.push(childPathObj.pieces_[i]);\n    }\n  } else {\n    const childPieces = childPathObj.split('/');\n    for (let i = 0; i < childPieces.length; i++) {\n      if (childPieces[i].length > 0) {\n        pieces.push(childPieces[i]);\n      }\n    }\n  }\n\n  return new Path(pieces, 0);\n}\n\n/**\n * @returns True if there are no segments in this path\n */\nexport function pathIsEmpty(path: Path): boolean {\n  return path.pieceNum_ >= path.pieces_.length;\n}\n\n/**\n * @returns The path from outerPath to innerPath\n */\nexport function newRelativePath(outerPath: Path, innerPath: Path): Path {\n  const outer = pathGetFront(outerPath),\n    inner = pathGetFront(innerPath);\n  if (outer === null) {\n    return innerPath;\n  } else if (outer === inner) {\n    return newRelativePath(pathPopFront(outerPath), pathPopFront(innerPath));\n  } else {\n    throw new Error(\n      'INTERNAL ERROR: innerPath (' +\n        innerPath +\n        ') is not within ' +\n        'outerPath (' +\n        outerPath +\n        ')'\n    );\n  }\n}\n\n/**\n * @returns -1, 0, 1 if left is less, equal, or greater than the right.\n */\nexport function pathCompare(left: Path, right: Path): number {\n  const leftKeys = pathSlice(left, 0);\n  const rightKeys = pathSlice(right, 0);\n  for (let i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\n    const cmp = nameCompare(leftKeys[i], rightKeys[i]);\n    if (cmp !== 0) {\n      return cmp;\n    }\n  }\n  if (leftKeys.length === rightKeys.length) {\n    return 0;\n  }\n  return leftKeys.length < rightKeys.length ? -1 : 1;\n}\n\n/**\n * @returns true if paths are the same.\n */\nexport function pathEquals(path: Path, other: Path): boolean {\n  if (pathGetLength(path) !== pathGetLength(other)) {\n    return false;\n  }\n\n  for (\n    let i = path.pieceNum_, j = other.pieceNum_;\n    i <= path.pieces_.length;\n    i++, j++\n  ) {\n    if (path.pieces_[i] !== other.pieces_[j]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * @returns True if this path is a parent of (or the same as) other\n */\nexport function pathContains(path: Path, other: Path): boolean {\n  let i = path.pieceNum_;\n  let j = other.pieceNum_;\n  if (pathGetLength(path) > pathGetLength(other)) {\n    return false;\n  }\n  while (i < path.pieces_.length) {\n    if (path.pieces_[i] !== other.pieces_[j]) {\n      return false;\n    }\n    ++i;\n    ++j;\n  }\n  return true;\n}\n\n/**\n * Dynamic (mutable) path used to count path lengths.\n *\n * This class is used to efficiently check paths for valid\n * length (in UTF8 bytes) and depth (used in path validation).\n *\n * Throws Error exception if path is ever invalid.\n *\n * The definition of a path always begins with '/'.\n */\nexport class ValidationPath {\n  parts_: string[];\n  /** Initialize to number of '/' chars needed in path. */\n  byteLength_: number;\n\n  /**\n   * @param path - Initial Path.\n   * @param errorPrefix_ - Prefix for any error messages.\n   */\n  constructor(path: Path, public errorPrefix_: string) {\n    this.parts_ = pathSlice(path, 0);\n    /** Initialize to number of '/' chars needed in path. */\n    this.byteLength_ = Math.max(1, this.parts_.length);\n\n    for (let i = 0; i < this.parts_.length; i++) {\n      this.byteLength_ += stringLength(this.parts_[i]);\n    }\n    validationPathCheckValid(this);\n  }\n}\n\nexport function validationPathPush(\n  validationPath: ValidationPath,\n  child: string\n): void {\n  // Count the needed '/'\n  if (validationPath.parts_.length > 0) {\n    validationPath.byteLength_ += 1;\n  }\n  validationPath.parts_.push(child);\n  validationPath.byteLength_ += stringLength(child);\n  validationPathCheckValid(validationPath);\n}\n\nexport function validationPathPop(validationPath: ValidationPath): void {\n  const last = validationPath.parts_.pop();\n  validationPath.byteLength_ -= stringLength(last);\n  // Un-count the previous '/'\n  if (validationPath.parts_.length > 0) {\n    validationPath.byteLength_ -= 1;\n  }\n}\n\nfunction validationPathCheckValid(validationPath: ValidationPath): void {\n  if (validationPath.byteLength_ > MAX_PATH_LENGTH_BYTES) {\n    throw new Error(\n      validationPath.errorPrefix_ +\n        'has a key path longer than ' +\n        MAX_PATH_LENGTH_BYTES +\n        ' bytes (' +\n        validationPath.byteLength_ +\n        ').'\n    );\n  }\n  if (validationPath.parts_.length > MAX_PATH_DEPTH) {\n    throw new Error(\n      validationPath.errorPrefix_ +\n        'path specified exceeds the maximum depth that can be written (' +\n        MAX_PATH_DEPTH +\n        ') or object contains a cycle ' +\n        validationPathToErrorString(validationPath)\n    );\n  }\n}\n\n/**\n * String for use in error messages - uses '.' notation for path.\n */\nexport function validationPathToErrorString(\n  validationPath: ValidationPath\n): string {\n  if (validationPath.parts_.length === 0) {\n    return '';\n  }\n  return \"in property '\" + validationPath.parts_.join('.') + \"'\";\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { EventEmitter } from './EventEmitter';\n\ndeclare const document: Document;\n\nexport class VisibilityMonitor extends EventEmitter {\n  private visible_: boolean;\n\n  static getInstance() {\n    return new VisibilityMonitor();\n  }\n\n  constructor() {\n    super(['visible']);\n    let hidden: string;\n    let visibilityChange: string;\n    if (\n      typeof document !== 'undefined' &&\n      typeof document.addEventListener !== 'undefined'\n    ) {\n      if (typeof document['hidden'] !== 'undefined') {\n        // Opera 12.10 and Firefox 18 and later support\n        visibilityChange = 'visibilitychange';\n        hidden = 'hidden';\n      } else if (typeof document['mozHidden'] !== 'undefined') {\n        visibilityChange = 'mozvisibilitychange';\n        hidden = 'mozHidden';\n      } else if (typeof document['msHidden'] !== 'undefined') {\n        visibilityChange = 'msvisibilitychange';\n        hidden = 'msHidden';\n      } else if (typeof document['webkitHidden'] !== 'undefined') {\n        visibilityChange = 'webkitvisibilitychange';\n        hidden = 'webkitHidden';\n      }\n    }\n\n    // Initially, we always assume we are visible. This ensures that in browsers\n    // without page visibility support or in cases where we are never visible\n    // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\n    // reconnects\n    this.visible_ = true;\n\n    if (visibilityChange) {\n      document.addEventListener(\n        visibilityChange,\n        () => {\n          const visible = !document[hidden];\n          if (visible !== this.visible_) {\n            this.visible_ = visible;\n            this.trigger('visible', visible);\n          }\n        },\n        false\n      );\n    }\n  }\n\n  getInitialEvent(eventType: string): boolean[] {\n    assert(eventType === 'visible', 'Unknown event type: ' + eventType);\n    return [this.visible_];\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  contains,\n  Deferred,\n  isEmpty,\n  isMobileCordova,\n  isNodeSdk,\n  isReactNative,\n  isValidFormat,\n  safeGet,\n  stringify,\n  isAdmin\n} from '@firebase/util';\n\nimport { Connection } from '../realtime/Connection';\n\nimport { AppCheckTokenProvider } from './AppCheckTokenProvider';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { OnlineMonitor } from './util/OnlineMonitor';\nimport { Path } from './util/Path';\nimport { error, log, logWrapper, warn, ObjectToUniqueKey } from './util/util';\nimport { VisibilityMonitor } from './util/VisibilityMonitor';\nimport { SDK_VERSION } from './version';\nimport { QueryContext } from './view/EventRegistration';\n\nconst RECONNECT_MIN_DELAY = 1000;\nconst RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\nconst RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\nconst RECONNECT_DELAY_MULTIPLIER = 1.3;\nconst RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\nconst SERVER_KILL_INTERRUPT_REASON = 'server_kill';\n\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\nconst INVALID_TOKEN_THRESHOLD = 3;\n\ninterface ListenSpec {\n  onComplete(s: string, p?: unknown): void;\n\n  hashFn(): string;\n\n  query: QueryContext;\n  tag: number | null;\n}\n\ninterface OnDisconnectRequest {\n  pathString: string;\n  action: string;\n  data: unknown;\n  onComplete?: (a: string, b: string) => void;\n}\n\ninterface OutstandingPut {\n  action: string;\n  request: object;\n  queued?: boolean;\n  onComplete: (a: string, b?: string) => void;\n}\n\ninterface OutstandingGet {\n  request: object;\n  onComplete: (response: { [k: string]: unknown }) => void;\n}\n\n/**\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\n *\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\n * in quotes to make sure the closure compiler does not minify them.\n */\nexport class PersistentConnection extends ServerActions {\n  // Used for diagnostic logging.\n  id = PersistentConnection.nextPersistentConnectionId_++;\n  private log_ = logWrapper('p:' + this.id + ':');\n\n  private interruptReasons_: { [reason: string]: boolean } = {};\n  private readonly listens: Map<\n    /* path */ string,\n    Map</* queryId */ string, ListenSpec>\n  > = new Map();\n  private outstandingPuts_: OutstandingPut[] = [];\n  private outstandingGets_: OutstandingGet[] = [];\n  private outstandingPutCount_ = 0;\n  private outstandingGetCount_ = 0;\n  private onDisconnectRequestQueue_: OnDisconnectRequest[] = [];\n  private connected_ = false;\n  private reconnectDelay_ = RECONNECT_MIN_DELAY;\n  private maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\n  private securityDebugCallback_: ((a: object) => void) | null = null;\n  lastSessionId: string | null = null;\n\n  private establishConnectionTimer_: number | null = null;\n\n  private visible_: boolean = false;\n\n  // Before we get connected, we keep a queue of pending messages to send.\n  private requestCBHash_: { [k: number]: (a: unknown) => void } = {};\n  private requestNumber_ = 0;\n\n  private realtime_: {\n    sendRequest(a: object): void;\n    close(): void;\n  } | null = null;\n\n  private authToken_: string | null = null;\n  private appCheckToken_: string | null = null;\n  private forceTokenRefresh_ = false;\n  private invalidAuthTokenCount_ = 0;\n  private invalidAppCheckTokenCount_ = 0;\n\n  private firstConnection_ = true;\n  private lastConnectionAttemptTime_: number | null = null;\n  private lastConnectionEstablishedTime_: number | null = null;\n\n  private static nextPersistentConnectionId_ = 0;\n\n  /**\n   * Counter for number of connections created. Mainly used for tagging in the logs\n   */\n  private static nextConnectionId_ = 0;\n\n  /**\n   * @param repoInfo_ - Data about the namespace we are connecting to\n   * @param applicationId_ - The Firebase App ID for this project\n   * @param onDataUpdate_ - A callback for new data from the server\n   */\n  constructor(\n    private repoInfo_: RepoInfo,\n    private applicationId_: string,\n    private onDataUpdate_: (\n      a: string,\n      b: unknown,\n      c: boolean,\n      d: number | null\n    ) => void,\n    private onConnectStatus_: (a: boolean) => void,\n    private onServerInfoUpdate_: (a: unknown) => void,\n    private authTokenProvider_: AuthTokenProvider,\n    private appCheckTokenProvider_: AppCheckTokenProvider,\n    private authOverride_?: object | null\n  ) {\n    super();\n\n    if (authOverride_ && !isNodeSdk()) {\n      throw new Error(\n        'Auth override specified in options, but not supported on non Node.js platforms'\n      );\n    }\n\n    VisibilityMonitor.getInstance().on('visible', this.onVisible_, this);\n\n    if (repoInfo_.host.indexOf('fblocal') === -1) {\n      OnlineMonitor.getInstance().on('online', this.onOnline_, this);\n    }\n  }\n\n  protected sendRequest(\n    action: string,\n    body: unknown,\n    onResponse?: (a: unknown) => void\n  ) {\n    const curReqNum = ++this.requestNumber_;\n\n    const msg = { r: curReqNum, a: action, b: body };\n    this.log_(stringify(msg));\n    assert(\n      this.connected_,\n      \"sendRequest call when we're not connected not allowed.\"\n    );\n    this.realtime_.sendRequest(msg);\n    if (onResponse) {\n      this.requestCBHash_[curReqNum] = onResponse;\n    }\n  }\n\n  get(query: QueryContext): Promise<string> {\n    this.initConnection_();\n\n    const deferred = new Deferred<string>();\n    const request = {\n      p: query._path.toString(),\n      q: query._queryObject\n    };\n    const outstandingGet = {\n      action: 'g',\n      request,\n      onComplete: (message: { [k: string]: unknown }) => {\n        const payload = message['d'] as string;\n        if (message['s'] === 'ok') {\n          deferred.resolve(payload);\n        } else {\n          deferred.reject(payload);\n        }\n      }\n    };\n    this.outstandingGets_.push(outstandingGet);\n    this.outstandingGetCount_++;\n    const index = this.outstandingGets_.length - 1;\n\n    if (this.connected_) {\n      this.sendGet_(index);\n    }\n\n    return deferred.promise;\n  }\n\n  listen(\n    query: QueryContext,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ) {\n    this.initConnection_();\n\n    const queryId = query._queryIdentifier;\n    const pathString = query._path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + queryId);\n    if (!this.listens.has(pathString)) {\n      this.listens.set(pathString, new Map());\n    }\n    assert(\n      query._queryParams.isDefault() || !query._queryParams.loadsAllData(),\n      'listen() called for non-default but complete query'\n    );\n    assert(\n      !this.listens.get(pathString)!.has(queryId),\n      `listen() called twice for same path/queryId.`\n    );\n    const listenSpec: ListenSpec = {\n      onComplete,\n      hashFn: currentHashFn,\n      query,\n      tag\n    };\n    this.listens.get(pathString)!.set(queryId, listenSpec);\n\n    if (this.connected_) {\n      this.sendListen_(listenSpec);\n    }\n  }\n\n  private sendGet_(index: number) {\n    const get = this.outstandingGets_[index];\n    this.sendRequest('g', get.request, (message: { [k: string]: unknown }) => {\n      delete this.outstandingGets_[index];\n      this.outstandingGetCount_--;\n      if (this.outstandingGetCount_ === 0) {\n        this.outstandingGets_ = [];\n      }\n      if (get.onComplete) {\n        get.onComplete(message);\n      }\n    });\n  }\n\n  private sendListen_(listenSpec: ListenSpec) {\n    const query = listenSpec.query;\n    const pathString = query._path.toString();\n    const queryId = query._queryIdentifier;\n    this.log_('Listen on ' + pathString + ' for ' + queryId);\n    const req: { [k: string]: unknown } = { /*path*/ p: pathString };\n\n    const action = 'q';\n\n    // Only bother to send query if it's non-default.\n    if (listenSpec.tag) {\n      req['q'] = query._queryObject;\n      req['t'] = listenSpec.tag;\n    }\n\n    req[/*hash*/ 'h'] = listenSpec.hashFn();\n\n    this.sendRequest(action, req, (message: { [k: string]: unknown }) => {\n      const payload: unknown = message[/*data*/ 'd'];\n      const status = message[/*status*/ 's'] as string;\n\n      // print warnings in any case...\n      PersistentConnection.warnOnListenWarnings_(payload, query);\n\n      const currentListenSpec =\n        this.listens.get(pathString) &&\n        this.listens.get(pathString)!.get(queryId);\n      // only trigger actions if the listen hasn't been removed and readded\n      if (currentListenSpec === listenSpec) {\n        this.log_('listen response', message);\n\n        if (status !== 'ok') {\n          this.removeListen_(pathString, queryId);\n        }\n\n        if (listenSpec.onComplete) {\n          listenSpec.onComplete(status, payload);\n        }\n      }\n    });\n  }\n\n  private static warnOnListenWarnings_(payload: unknown, query: QueryContext) {\n    if (payload && typeof payload === 'object' && contains(payload, 'w')) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const warnings = safeGet(payload as any, 'w');\n      if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\n        const indexSpec =\n          '\".indexOn\": \"' + query._queryParams.getIndex().toString() + '\"';\n        const indexPath = query._path.toString();\n        warn(\n          `Using an unspecified index. Your data will be downloaded and ` +\n            `filtered on the client. Consider adding ${indexSpec} at ` +\n            `${indexPath} to your security rules for better performance.`\n        );\n      }\n    }\n  }\n\n  refreshAuthToken(token: string) {\n    this.authToken_ = token;\n    this.log_('Auth token refreshed');\n    if (this.authToken_) {\n      this.tryAuth();\n    } else {\n      //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\n      //the credential so we dont become authenticated next time we connect.\n      if (this.connected_) {\n        this.sendRequest('unauth', {}, () => {});\n      }\n    }\n\n    this.reduceReconnectDelayIfAdminCredential_(token);\n  }\n\n  private reduceReconnectDelayIfAdminCredential_(credential: string) {\n    // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\n    // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\n    const isFirebaseSecret = credential && credential.length === 40;\n    if (isFirebaseSecret || isAdmin(credential)) {\n      this.log_(\n        'Admin auth credential detected.  Reducing max reconnect time.'\n      );\n      this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n    }\n  }\n\n  refreshAppCheckToken(token: string | null) {\n    this.appCheckToken_ = token;\n    this.log_('App check token refreshed');\n    if (this.appCheckToken_) {\n      this.tryAppCheck();\n    } else {\n      //If we're connected we want to let the server know to unauthenticate us.\n      //If we're not connected, simply delete the credential so we dont become\n      // authenticated next time we connect.\n      if (this.connected_) {\n        this.sendRequest('unappeck', {}, () => {});\n      }\n    }\n  }\n\n  /**\n   * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\n   * a auth revoked (the connection is closed).\n   */\n  tryAuth() {\n    if (this.connected_ && this.authToken_) {\n      const token = this.authToken_;\n      const authMethod = isValidFormat(token) ? 'auth' : 'gauth';\n      const requestData: { [k: string]: unknown } = { cred: token };\n      if (this.authOverride_ === null) {\n        requestData['noauth'] = true;\n      } else if (typeof this.authOverride_ === 'object') {\n        requestData['authvar'] = this.authOverride_;\n      }\n      this.sendRequest(\n        authMethod,\n        requestData,\n        (res: { [k: string]: unknown }) => {\n          const status = res[/*status*/ 's'] as string;\n          const data = (res[/*data*/ 'd'] as string) || 'error';\n\n          if (this.authToken_ === token) {\n            if (status === 'ok') {\n              this.invalidAuthTokenCount_ = 0;\n            } else {\n              // Triggers reconnect and force refresh for auth token\n              this.onAuthRevoked_(status, data);\n            }\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * Attempts to authenticate with the given token. If the authentication\n   * attempt fails, it's triggered like the token was revoked (the connection is\n   * closed).\n   */\n  tryAppCheck() {\n    if (this.connected_ && this.appCheckToken_) {\n      this.sendRequest(\n        'appcheck',\n        { 'token': this.appCheckToken_ },\n        (res: { [k: string]: unknown }) => {\n          const status = res[/*status*/ 's'] as string;\n          const data = (res[/*data*/ 'd'] as string) || 'error';\n          if (status === 'ok') {\n            this.invalidAppCheckTokenCount_ = 0;\n          } else {\n            this.onAppCheckRevoked_(status, data);\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  unlisten(query: QueryContext, tag: number | null) {\n    const pathString = query._path.toString();\n    const queryId = query._queryIdentifier;\n\n    this.log_('Unlisten called for ' + pathString + ' ' + queryId);\n\n    assert(\n      query._queryParams.isDefault() || !query._queryParams.loadsAllData(),\n      'unlisten() called for non-default but complete query'\n    );\n    const listen = this.removeListen_(pathString, queryId);\n    if (listen && this.connected_) {\n      this.sendUnlisten_(pathString, queryId, query._queryObject, tag);\n    }\n  }\n\n  private sendUnlisten_(\n    pathString: string,\n    queryId: string,\n    queryObj: object,\n    tag: number | null\n  ) {\n    this.log_('Unlisten on ' + pathString + ' for ' + queryId);\n\n    const req: { [k: string]: unknown } = { /*path*/ p: pathString };\n    const action = 'n';\n    // Only bother sending queryId if it's non-default.\n    if (tag) {\n      req['q'] = queryObj;\n      req['t'] = tag;\n    }\n\n    this.sendRequest(action, req);\n  }\n\n  onDisconnectPut(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('o', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'o',\n        data,\n        onComplete\n      });\n    }\n  }\n\n  onDisconnectMerge(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('om', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'om',\n        data,\n        onComplete\n      });\n    }\n  }\n\n  onDisconnectCancel(\n    pathString: string,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('oc', pathString, null, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'oc',\n        data: null,\n        onComplete\n      });\n    }\n  }\n\n  private sendOnDisconnect_(\n    action: string,\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string) => void\n  ) {\n    const request = { /*path*/ p: pathString, /*data*/ d: data };\n    this.log_('onDisconnect ' + action, request);\n    this.sendRequest(action, request, (response: { [k: string]: unknown }) => {\n      if (onComplete) {\n        setTimeout(() => {\n          onComplete(\n            response[/*status*/ 's'] as string,\n            response[/* data */ 'd'] as string\n          );\n        }, Math.floor(0));\n      }\n    });\n  }\n\n  put(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void,\n    hash?: string\n  ) {\n    this.putInternal('p', pathString, data, onComplete, hash);\n  }\n\n  merge(\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {\n    this.putInternal('m', pathString, data, onComplete, hash);\n  }\n\n  putInternal(\n    action: string,\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {\n    this.initConnection_();\n\n    const request: { [k: string]: unknown } = {\n      /*path*/ p: pathString,\n      /*data*/ d: data\n    };\n\n    if (hash !== undefined) {\n      request[/*hash*/ 'h'] = hash;\n    }\n\n    // TODO: Only keep track of the most recent put for a given path?\n    this.outstandingPuts_.push({\n      action,\n      request,\n      onComplete\n    });\n\n    this.outstandingPutCount_++;\n    const index = this.outstandingPuts_.length - 1;\n\n    if (this.connected_) {\n      this.sendPut_(index);\n    } else {\n      this.log_('Buffering put: ' + pathString);\n    }\n  }\n\n  private sendPut_(index: number) {\n    const action = this.outstandingPuts_[index].action;\n    const request = this.outstandingPuts_[index].request;\n    const onComplete = this.outstandingPuts_[index].onComplete;\n    this.outstandingPuts_[index].queued = this.connected_;\n\n    this.sendRequest(action, request, (message: { [k: string]: unknown }) => {\n      this.log_(action + ' response', message);\n\n      delete this.outstandingPuts_[index];\n      this.outstandingPutCount_--;\n\n      // Clean up array occasionally.\n      if (this.outstandingPutCount_ === 0) {\n        this.outstandingPuts_ = [];\n      }\n\n      if (onComplete) {\n        onComplete(\n          message[/*status*/ 's'] as string,\n          message[/* data */ 'd'] as string\n        );\n      }\n    });\n  }\n\n  reportStats(stats: { [k: string]: unknown }) {\n    // If we're not connected, we just drop the stats.\n    if (this.connected_) {\n      const request = { /*counters*/ c: stats };\n      this.log_('reportStats', request);\n\n      this.sendRequest(/*stats*/ 's', request, result => {\n        const status = result[/*status*/ 's'];\n        if (status !== 'ok') {\n          const errorReason = result[/* data */ 'd'];\n          this.log_('reportStats', 'Error sending stats: ' + errorReason);\n        }\n      });\n    }\n  }\n\n  private onDataMessage_(message: { [k: string]: unknown }) {\n    if ('r' in message) {\n      // this is a response\n      this.log_('from server: ' + stringify(message));\n      const reqNum = message['r'] as string;\n      const onResponse = this.requestCBHash_[reqNum];\n      if (onResponse) {\n        delete this.requestCBHash_[reqNum];\n        onResponse(message[/*body*/ 'b']);\n      }\n    } else if ('error' in message) {\n      throw 'A server-side error has occurred: ' + message['error'];\n    } else if ('a' in message) {\n      // a and b are action and body, respectively\n      this.onDataPush_(message['a'] as string, message['b'] as {});\n    }\n  }\n\n  private onDataPush_(action: string, body: { [k: string]: unknown }) {\n    this.log_('handleServerMessage', action, body);\n    if (action === 'd') {\n      this.onDataUpdate_(\n        body[/*path*/ 'p'] as string,\n        body[/*data*/ 'd'],\n        /*isMerge*/ false,\n        body['t'] as number\n      );\n    } else if (action === 'm') {\n      this.onDataUpdate_(\n        body[/*path*/ 'p'] as string,\n        body[/*data*/ 'd'],\n        /*isMerge=*/ true,\n        body['t'] as number\n      );\n    } else if (action === 'c') {\n      this.onListenRevoked_(\n        body[/*path*/ 'p'] as string,\n        body[/*query*/ 'q'] as unknown[]\n      );\n    } else if (action === 'ac') {\n      this.onAuthRevoked_(\n        body[/*status code*/ 's'] as string,\n        body[/* explanation */ 'd'] as string\n      );\n    } else if (action === 'apc') {\n      this.onAppCheckRevoked_(\n        body[/*status code*/ 's'] as string,\n        body[/* explanation */ 'd'] as string\n      );\n    } else if (action === 'sd') {\n      this.onSecurityDebugPacket_(body);\n    } else {\n      error(\n        'Unrecognized action received from server: ' +\n          stringify(action) +\n          '\\nAre you using the latest client?'\n      );\n    }\n  }\n\n  private onReady_(timestamp: number, sessionId: string) {\n    this.log_('connection ready');\n    this.connected_ = true;\n    this.lastConnectionEstablishedTime_ = new Date().getTime();\n    this.handleTimestamp_(timestamp);\n    this.lastSessionId = sessionId;\n    if (this.firstConnection_) {\n      this.sendConnectStats_();\n    }\n    this.restoreState_();\n    this.firstConnection_ = false;\n    this.onConnectStatus_(true);\n  }\n\n  private scheduleConnect_(timeout: number) {\n    assert(\n      !this.realtime_,\n      \"Scheduling a connect when we're already connected/ing?\"\n    );\n\n    if (this.establishConnectionTimer_) {\n      clearTimeout(this.establishConnectionTimer_);\n    }\n\n    // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\n    // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\n\n    this.establishConnectionTimer_ = setTimeout(() => {\n      this.establishConnectionTimer_ = null;\n      this.establishConnection_();\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(timeout)) as any;\n  }\n\n  private initConnection_() {\n    if (!this.realtime_ && this.firstConnection_) {\n      this.scheduleConnect_(0);\n    }\n  }\n\n  private onVisible_(visible: boolean) {\n    // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\n    if (\n      visible &&\n      !this.visible_ &&\n      this.reconnectDelay_ === this.maxReconnectDelay_\n    ) {\n      this.log_('Window became visible.  Reducing delay.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n    this.visible_ = visible;\n  }\n\n  private onOnline_(online: boolean) {\n    if (online) {\n      this.log_('Browser went online.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    } else {\n      this.log_('Browser went offline.  Killing connection.');\n      if (this.realtime_) {\n        this.realtime_.close();\n      }\n    }\n  }\n\n  private onRealtimeDisconnect_() {\n    this.log_('data client disconnected');\n    this.connected_ = false;\n    this.realtime_ = null;\n\n    // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\n    this.cancelSentTransactions_();\n\n    // Clear out the pending requests.\n    this.requestCBHash_ = {};\n\n    if (this.shouldReconnect_()) {\n      if (!this.visible_) {\n        this.log_(\"Window isn't visible.  Delaying reconnect.\");\n        this.reconnectDelay_ = this.maxReconnectDelay_;\n        this.lastConnectionAttemptTime_ = new Date().getTime();\n      } else if (this.lastConnectionEstablishedTime_) {\n        // If we've been connected long enough, reset reconnect delay to minimum.\n        const timeSinceLastConnectSucceeded =\n          new Date().getTime() - this.lastConnectionEstablishedTime_;\n        if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) {\n          this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n        }\n        this.lastConnectionEstablishedTime_ = null;\n      }\n\n      const timeSinceLastConnectAttempt =\n        new Date().getTime() - this.lastConnectionAttemptTime_;\n      let reconnectDelay = Math.max(\n        0,\n        this.reconnectDelay_ - timeSinceLastConnectAttempt\n      );\n      reconnectDelay = Math.random() * reconnectDelay;\n\n      this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\n      this.scheduleConnect_(reconnectDelay);\n\n      // Adjust reconnect delay for next time.\n      this.reconnectDelay_ = Math.min(\n        this.maxReconnectDelay_,\n        this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER\n      );\n    }\n    this.onConnectStatus_(false);\n  }\n\n  private async establishConnection_() {\n    if (this.shouldReconnect_()) {\n      this.log_('Making a connection attempt');\n      this.lastConnectionAttemptTime_ = new Date().getTime();\n      this.lastConnectionEstablishedTime_ = null;\n      const onDataMessage = this.onDataMessage_.bind(this);\n      const onReady = this.onReady_.bind(this);\n      const onDisconnect = this.onRealtimeDisconnect_.bind(this);\n      const connId = this.id + ':' + PersistentConnection.nextConnectionId_++;\n      const lastSessionId = this.lastSessionId;\n      let canceled = false;\n      let connection: Connection | null = null;\n      const closeFn = function () {\n        if (connection) {\n          connection.close();\n        } else {\n          canceled = true;\n          onDisconnect();\n        }\n      };\n      const sendRequestFn = function (msg: object) {\n        assert(\n          connection,\n          \"sendRequest call when we're not connected not allowed.\"\n        );\n        connection.sendRequest(msg);\n      };\n\n      this.realtime_ = {\n        close: closeFn,\n        sendRequest: sendRequestFn\n      };\n\n      const forceRefresh = this.forceTokenRefresh_;\n      this.forceTokenRefresh_ = false;\n\n      try {\n        // First fetch auth and app check token, and establish connection after\n        // fetching the token was successful\n        const [authToken, appCheckToken] = await Promise.all([\n          this.authTokenProvider_.getToken(forceRefresh),\n          this.appCheckTokenProvider_.getToken(forceRefresh)\n        ]);\n\n        if (!canceled) {\n          log('getToken() completed. Creating connection.');\n          this.authToken_ = authToken && authToken.accessToken;\n          this.appCheckToken_ = appCheckToken && appCheckToken.token;\n          connection = new Connection(\n            connId,\n            this.repoInfo_,\n            this.applicationId_,\n            this.appCheckToken_,\n            this.authToken_,\n            onDataMessage,\n            onReady,\n            onDisconnect,\n            /* onKill= */ reason => {\n              warn(reason + ' (' + this.repoInfo_.toString() + ')');\n              this.interrupt(SERVER_KILL_INTERRUPT_REASON);\n            },\n            lastSessionId\n          );\n        } else {\n          log('getToken() completed but was canceled');\n        }\n      } catch (error) {\n        this.log_('Failed to get token: ' + error);\n        if (!canceled) {\n          if (this.repoInfo_.nodeAdmin) {\n            // This may be a critical error for the Admin Node.js SDK, so log a warning.\n            // But getToken() may also just have temporarily failed, so we still want to\n            // continue retrying.\n            warn(error);\n          }\n          closeFn();\n        }\n      }\n    }\n  }\n\n  interrupt(reason: string) {\n    log('Interrupting connection for reason: ' + reason);\n    this.interruptReasons_[reason] = true;\n    if (this.realtime_) {\n      this.realtime_.close();\n    } else {\n      if (this.establishConnectionTimer_) {\n        clearTimeout(this.establishConnectionTimer_);\n        this.establishConnectionTimer_ = null;\n      }\n      if (this.connected_) {\n        this.onRealtimeDisconnect_();\n      }\n    }\n  }\n\n  resume(reason: string) {\n    log('Resuming connection for reason: ' + reason);\n    delete this.interruptReasons_[reason];\n    if (isEmpty(this.interruptReasons_)) {\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n  }\n\n  private handleTimestamp_(timestamp: number) {\n    const delta = timestamp - new Date().getTime();\n    this.onServerInfoUpdate_({ serverTimeOffset: delta });\n  }\n\n  private cancelSentTransactions_() {\n    for (let i = 0; i < this.outstandingPuts_.length; i++) {\n      const put = this.outstandingPuts_[i];\n      if (put && /*hash*/ 'h' in put.request && put.queued) {\n        if (put.onComplete) {\n          put.onComplete('disconnect');\n        }\n\n        delete this.outstandingPuts_[i];\n        this.outstandingPutCount_--;\n      }\n    }\n\n    // Clean up array occasionally.\n    if (this.outstandingPutCount_ === 0) {\n      this.outstandingPuts_ = [];\n    }\n  }\n\n  private onListenRevoked_(pathString: string, query?: unknown[]) {\n    // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\n    let queryId;\n    if (!query) {\n      queryId = 'default';\n    } else {\n      queryId = query.map(q => ObjectToUniqueKey(q)).join('$');\n    }\n    const listen = this.removeListen_(pathString, queryId);\n    if (listen && listen.onComplete) {\n      listen.onComplete('permission_denied');\n    }\n  }\n\n  private removeListen_(pathString: string, queryId: string): ListenSpec {\n    const normalizedPathString = new Path(pathString).toString(); // normalize path.\n    let listen;\n    if (this.listens.has(normalizedPathString)) {\n      const map = this.listens.get(normalizedPathString)!;\n      listen = map.get(queryId);\n      map.delete(queryId);\n      if (map.size === 0) {\n        this.listens.delete(normalizedPathString);\n      }\n    } else {\n      // all listens for this path has already been removed\n      listen = undefined;\n    }\n    return listen;\n  }\n\n  private onAuthRevoked_(statusCode: string, explanation: string) {\n    log('Auth token revoked: ' + statusCode + '/' + explanation);\n    this.authToken_ = null;\n    this.forceTokenRefresh_ = true;\n    this.realtime_.close();\n    if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n      // We'll wait a couple times before logging the warning / increasing the\n      // retry period since oauth tokens will report as \"invalid\" if they're\n      // just expired. Plus there may be transient issues that resolve themselves.\n      this.invalidAuthTokenCount_++;\n      if (this.invalidAuthTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\n        // Set a long reconnect delay because recovery is unlikely\n        this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n\n        // Notify the auth token provider that the token is invalid, which will log\n        // a warning\n        this.authTokenProvider_.notifyForInvalidToken();\n      }\n    }\n  }\n\n  private onAppCheckRevoked_(statusCode: string, explanation: string) {\n    log('App check token revoked: ' + statusCode + '/' + explanation);\n    this.appCheckToken_ = null;\n    this.forceTokenRefresh_ = true;\n    // Note: We don't close the connection as the developer may not have\n    // enforcement enabled. The backend closes connections with enforcements.\n    if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n      // We'll wait a couple times before logging the warning / increasing the\n      // retry period since oauth tokens will report as \"invalid\" if they're\n      // just expired. Plus there may be transient issues that resolve themselves.\n      this.invalidAppCheckTokenCount_++;\n      if (this.invalidAppCheckTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\n        this.appCheckTokenProvider_.notifyForInvalidToken();\n      }\n    }\n  }\n\n  private onSecurityDebugPacket_(body: { [k: string]: unknown }) {\n    if (this.securityDebugCallback_) {\n      this.securityDebugCallback_(body);\n    } else {\n      if ('msg' in body) {\n        console.log(\n          'FIREBASE: ' + (body['msg'] as string).replace('\\n', '\\nFIREBASE: ')\n        );\n      }\n    }\n  }\n\n  private restoreState_() {\n    //Re-authenticate ourselves if we have a credential stored.\n    this.tryAuth();\n    this.tryAppCheck();\n\n    // Puts depend on having received the corresponding data update from the server before they complete, so we must\n    // make sure to send listens before puts.\n    for (const queries of this.listens.values()) {\n      for (const listenSpec of queries.values()) {\n        this.sendListen_(listenSpec);\n      }\n    }\n\n    for (let i = 0; i < this.outstandingPuts_.length; i++) {\n      if (this.outstandingPuts_[i]) {\n        this.sendPut_(i);\n      }\n    }\n\n    while (this.onDisconnectRequestQueue_.length) {\n      const request = this.onDisconnectRequestQueue_.shift();\n      this.sendOnDisconnect_(\n        request.action,\n        request.pathString,\n        request.data,\n        request.onComplete\n      );\n    }\n\n    for (let i = 0; i < this.outstandingGets_.length; i++) {\n      if (this.outstandingGets_[i]) {\n        this.sendGet_(i);\n      }\n    }\n  }\n\n  /**\n   * Sends client stats for first connection\n   */\n  private sendConnectStats_() {\n    const stats: { [k: string]: number } = {};\n\n    let clientName = 'js';\n    if (isNodeSdk()) {\n      if (this.repoInfo_.nodeAdmin) {\n        clientName = 'admin_node';\n      } else {\n        clientName = 'node';\n      }\n    }\n\n    stats['sdk.' + clientName + '.' + SDK_VERSION.replace(/\\./g, '-')] = 1;\n\n    if (isMobileCordova()) {\n      stats['framework.cordova'] = 1;\n    } else if (isReactNative()) {\n      stats['framework.reactnative'] = 1;\n    }\n    this.reportStats(stats);\n  }\n\n  private shouldReconnect_(): boolean {\n    const online = OnlineMonitor.getInstance().currentlyOnline();\n    return isEmpty(this.interruptReasons_) && online;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Comparator } from '../../util/SortedMap';\nimport { MIN_NAME } from '../../util/util';\nimport { Node, NamedNode } from '../Node';\n\nexport abstract class Index {\n  abstract compare(a: NamedNode, b: NamedNode): number;\n\n  abstract isDefinedOn(node: Node): boolean;\n\n  /**\n   * @returns A standalone comparison function for\n   * this index\n   */\n  getCompare(): Comparator<NamedNode> {\n    return this.compare.bind(this);\n  }\n\n  /**\n   * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\n   * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\n   *\n   *\n   * @returns True if the portion of the snapshot being indexed changed between oldNode and newNode\n   */\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    const oldWrapped = new NamedNode(MIN_NAME, oldNode);\n    const newWrapped = new NamedNode(MIN_NAME, newNode);\n    return this.compare(oldWrapped, newWrapped) !== 0;\n  }\n\n  /**\n   * @returns a node wrapper that will sort equal to or less than\n   * any other node wrapper, using this index\n   */\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n\n  /**\n   * @returns a node wrapper that will sort greater than or equal to\n   * any other node wrapper, using this index\n   */\n  abstract maxPost(): NamedNode;\n\n  abstract makePost(indexValue: unknown, name: string): NamedNode;\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  abstract toString(): string;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError } from '@firebase/util';\n\nimport { nameCompare, MAX_NAME } from '../../util/util';\nimport { ChildrenNode } from '../ChildrenNode';\nimport { Node, NamedNode } from '../Node';\n\nimport { Index } from './Index';\n\nlet __EMPTY_NODE: ChildrenNode;\n\nexport class KeyIndex extends Index {\n  static get __EMPTY_NODE() {\n    return __EMPTY_NODE;\n  }\n\n  static set __EMPTY_NODE(val) {\n    __EMPTY_NODE = val;\n  }\n  compare(a: NamedNode, b: NamedNode): number {\n    return nameCompare(a.name, b.name);\n  }\n  isDefinedOn(node: Node): boolean {\n    // We could probably return true here (since every node has a key), but it's never called\n    // so just leaving unimplemented for now.\n    throw assertionError('KeyIndex.isDefinedOn not expected to be called.');\n  }\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return false; // The key for a node never changes.\n  }\n  minPost() {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n  maxPost(): NamedNode {\n    // TODO: This should really be created once and cached in a static property, but\n    // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\n    return new NamedNode(MAX_NAME, __EMPTY_NODE);\n  }\n\n  makePost(indexValue: string, name: string): NamedNode {\n    assert(\n      typeof indexValue === 'string',\n      'KeyIndex indexValue must always be a string.'\n    );\n    // We just use empty node, but it'll never be compared, since our comparator only looks at name.\n    return new NamedNode(indexValue, __EMPTY_NODE);\n  }\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.key';\n  }\n}\n\nexport const KEY_INDEX = new KeyIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Implementation of an immutable SortedMap using a Left-leaning\n * Red-Black Tree, adapted from the implementation in Mugs\n * (http://mads379.github.com/mugs/) by Mads Hartmann Jensen\n * (mads379\\@gmail.com).\n *\n * Original paper on Left-leaning Red-Black Trees:\n *   http://www.cs.princeton.edu/~rs/talks/LLRB/LLRB.pdf\n *\n * Invariant 1: No red node has a red child\n * Invariant 2: Every leaf path has the same number of black nodes\n * Invariant 3: Only the left child can be red (left leaning)\n */\n\n// TODO: There are some improvements I'd like to make to improve memory / perf:\n//  * Create two prototypes, LLRedNode and LLBlackNode, instead of storing a\n//    color property in every node.\n// TODO: It would also be good (and possibly necessary) to create a base\n// interface for LLRBNode and LLRBEmptyNode.\n\nexport type Comparator<K> = (key1: K, key2: K) => number;\n\n/**\n * An iterator over an LLRBNode.\n */\nexport class SortedMapIterator<K, V, T> {\n  private nodeStack_: Array<LLRBNode<K, V> | LLRBEmptyNode<K, V>> = [];\n\n  /**\n   * @param node - Node to iterate.\n   * @param isReverse_ - Whether or not to iterate in reverse\n   */\n  constructor(\n    node: LLRBNode<K, V> | LLRBEmptyNode<K, V>,\n    startKey: K | null,\n    comparator: Comparator<K>,\n    private isReverse_: boolean,\n    private resultGenerator_: ((k: K, v: V) => T) | null = null\n  ) {\n    let cmp = 1;\n    while (!node.isEmpty()) {\n      node = node as LLRBNode<K, V>;\n      cmp = startKey ? comparator(node.key, startKey) : 1;\n      // flip the comparison if we're going in reverse\n      if (isReverse_) {\n        cmp *= -1;\n      }\n\n      if (cmp < 0) {\n        // This node is less than our start key. ignore it\n        if (this.isReverse_) {\n          node = node.left;\n        } else {\n          node = node.right;\n        }\n      } else if (cmp === 0) {\n        // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\n        this.nodeStack_.push(node);\n        break;\n      } else {\n        // This node is greater than our start key, add it to the stack and move to the next one\n        this.nodeStack_.push(node);\n        if (this.isReverse_) {\n          node = node.right;\n        } else {\n          node = node.left;\n        }\n      }\n    }\n  }\n\n  getNext(): T {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    let node = this.nodeStack_.pop();\n    let result: T;\n    if (this.resultGenerator_) {\n      result = this.resultGenerator_(node.key, node.value);\n    } else {\n      result = { key: node.key, value: node.value } as unknown as T;\n    }\n\n    if (this.isReverse_) {\n      node = node.left;\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.right;\n      }\n    } else {\n      node = node.right;\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.left;\n      }\n    }\n\n    return result;\n  }\n\n  hasNext(): boolean {\n    return this.nodeStack_.length > 0;\n  }\n\n  peek(): T {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    const node = this.nodeStack_[this.nodeStack_.length - 1];\n    if (this.resultGenerator_) {\n      return this.resultGenerator_(node.key, node.value);\n    } else {\n      return { key: node.key, value: node.value } as unknown as T;\n    }\n  }\n}\n\n/**\n * Represents a node in a Left-leaning Red-Black tree.\n */\nexport class LLRBNode<K, V> {\n  color: boolean;\n  left: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  right: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n\n  /**\n   * @param key - Key associated with this node.\n   * @param value - Value associated with this node.\n   * @param color - Whether this node is red.\n   * @param left - Left child.\n   * @param right - Right child.\n   */\n  constructor(\n    public key: K,\n    public value: V,\n    color: boolean | null,\n    left?: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right?: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ) {\n    this.color = color != null ? color : LLRBNode.RED;\n    this.left =\n      left != null ? left : (SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>);\n    this.right =\n      right != null ? right : (SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>);\n  }\n\n  static RED = true;\n  static BLACK = false;\n\n  /**\n   * Returns a copy of the current node, optionally replacing pieces of it.\n   *\n   * @param key - New key for the node, or null.\n   * @param value - New value for the node, or null.\n   * @param color - New color for the node, or null.\n   * @param left - New left child for the node, or null.\n   * @param right - New right child for the node, or null.\n   * @returns The node copy.\n   */\n  copy(\n    key: K | null,\n    value: V | null,\n    color: boolean | null,\n    left: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ): LLRBNode<K, V> {\n    return new LLRBNode(\n      key != null ? key : this.key,\n      value != null ? value : this.value,\n      color != null ? color : this.color,\n      left != null ? left : this.left,\n      right != null ? right : this.right\n    );\n  }\n\n  /**\n   * @returns The total number of nodes in the tree.\n   */\n  count(): number {\n    return this.left.count() + 1 + this.right.count();\n  }\n\n  /**\n   * @returns True if the tree is empty.\n   */\n  isEmpty(): boolean {\n    return false;\n  }\n\n  /**\n   * Traverses the tree in key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   *   node.  If it returns true, traversal is aborted.\n   * @returns The first truthy value returned by action, or the last falsey\n   *   value returned by action\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return (\n      this.left.inorderTraversal(action) ||\n      !!action(this.key, this.value) ||\n      this.right.inorderTraversal(action)\n    );\n  }\n\n  /**\n   * Traverses the tree in reverse key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @returns True if traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return (\n      this.right.reverseTraversal(action) ||\n      action(this.key, this.value) ||\n      this.left.reverseTraversal(action)\n    );\n  }\n\n  /**\n   * @returns The minimum node in the tree.\n   */\n  private min_(): LLRBNode<K, V> {\n    if (this.left.isEmpty()) {\n      return this;\n    } else {\n      return (this.left as LLRBNode<K, V>).min_();\n    }\n  }\n\n  /**\n   * @returns The maximum key in the tree.\n   */\n  minKey(): K {\n    return this.min_().key;\n  }\n\n  /**\n   * @returns The maximum key in the tree.\n   */\n  maxKey(): K {\n    if (this.right.isEmpty()) {\n      return this.key;\n    } else {\n      return this.right.maxKey();\n    }\n  }\n\n  /**\n   * @param key - Key to insert.\n   * @param value - Value to insert.\n   * @param comparator - Comparator.\n   * @returns New tree, with the key/value added.\n   */\n  insert(key: K, value: V, comparator: Comparator<K>): LLRBNode<K, V> {\n    let n: LLRBNode<K, V> = this;\n    const cmp = comparator(key, n.key);\n    if (cmp < 0) {\n      n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\n    } else if (cmp === 0) {\n      n = n.copy(null, value, null, null, null);\n    } else {\n      n = n.copy(\n        null,\n        null,\n        null,\n        null,\n        n.right.insert(key, value, comparator)\n      );\n    }\n    return n.fixUp_();\n  }\n\n  /**\n   * @returns New tree, with the minimum key removed.\n   */\n  private removeMin_(): LLRBNode<K, V> | LLRBEmptyNode<K, V> {\n    if (this.left.isEmpty()) {\n      return SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>;\n    }\n    let n: LLRBNode<K, V> = this;\n    if (!n.left.isRed_() && !n.left.left.isRed_()) {\n      n = n.moveRedLeft_();\n    }\n    n = n.copy(null, null, null, (n.left as LLRBNode<K, V>).removeMin_(), null);\n    return n.fixUp_();\n  }\n\n  /**\n   * @param key - The key of the item to remove.\n   * @param comparator - Comparator.\n   * @returns New tree, with the specified item removed.\n   */\n  remove(\n    key: K,\n    comparator: Comparator<K>\n  ): LLRBNode<K, V> | LLRBEmptyNode<K, V> {\n    let n, smallest;\n    n = this;\n    if (comparator(key, n.key) < 0) {\n      if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\n        n = n.moveRedLeft_();\n      }\n      n = n.copy(null, null, null, n.left.remove(key, comparator), null);\n    } else {\n      if (n.left.isRed_()) {\n        n = n.rotateRight_();\n      }\n      if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\n        n = n.moveRedRight_();\n      }\n      if (comparator(key, n.key) === 0) {\n        if (n.right.isEmpty()) {\n          return SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>;\n        } else {\n          smallest = (n.right as LLRBNode<K, V>).min_();\n          n = n.copy(\n            smallest.key,\n            smallest.value,\n            null,\n            null,\n            (n.right as LLRBNode<K, V>).removeMin_()\n          );\n        }\n      }\n      n = n.copy(null, null, null, null, n.right.remove(key, comparator));\n    }\n    return n.fixUp_();\n  }\n\n  /**\n   * @returns Whether this is a RED node.\n   */\n  isRed_(): boolean {\n    return this.color;\n  }\n\n  /**\n   * @returns New tree after performing any needed rotations.\n   */\n  private fixUp_(): LLRBNode<K, V> {\n    let n: LLRBNode<K, V> = this;\n    if (n.right.isRed_() && !n.left.isRed_()) {\n      n = n.rotateLeft_();\n    }\n    if (n.left.isRed_() && n.left.left.isRed_()) {\n      n = n.rotateRight_();\n    }\n    if (n.left.isRed_() && n.right.isRed_()) {\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @returns New tree, after moveRedLeft.\n   */\n  private moveRedLeft_(): LLRBNode<K, V> {\n    let n = this.colorFlip_();\n    if (n.right.left.isRed_()) {\n      n = n.copy(\n        null,\n        null,\n        null,\n        null,\n        (n.right as LLRBNode<K, V>).rotateRight_()\n      );\n      n = n.rotateLeft_();\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @returns New tree, after moveRedRight.\n   */\n  private moveRedRight_(): LLRBNode<K, V> {\n    let n = this.colorFlip_();\n    if (n.left.left.isRed_()) {\n      n = n.rotateRight_();\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @returns New tree, after rotateLeft.\n   */\n  private rotateLeft_(): LLRBNode<K, V> {\n    const nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\n    return this.right.copy(null, null, this.color, nl, null) as LLRBNode<K, V>;\n  }\n\n  /**\n   * @returns New tree, after rotateRight.\n   */\n  private rotateRight_(): LLRBNode<K, V> {\n    const nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\n    return this.left.copy(null, null, this.color, null, nr) as LLRBNode<K, V>;\n  }\n\n  /**\n   * @returns Newt ree, after colorFlip.\n   */\n  private colorFlip_(): LLRBNode<K, V> {\n    const left = this.left.copy(null, null, !this.left.color, null, null);\n    const right = this.right.copy(null, null, !this.right.color, null, null);\n    return this.copy(null, null, !this.color, left, right);\n  }\n\n  /**\n   * For testing.\n   *\n   * @returns True if all is well.\n   */\n  private checkMaxDepth_(): boolean {\n    const blackDepth = this.check_();\n    return Math.pow(2.0, blackDepth) <= this.count() + 1;\n  }\n\n  check_(): number {\n    if (this.isRed_() && this.left.isRed_()) {\n      throw new Error(\n        'Red node has red child(' + this.key + ',' + this.value + ')'\n      );\n    }\n    if (this.right.isRed_()) {\n      throw new Error(\n        'Right child of (' + this.key + ',' + this.value + ') is red'\n      );\n    }\n    const blackDepth = this.left.check_();\n    if (blackDepth !== this.right.check_()) {\n      throw new Error('Black depths differ');\n    } else {\n      return blackDepth + (this.isRed_() ? 0 : 1);\n    }\n  }\n}\n\n/**\n * Represents an empty node (a leaf node in the Red-Black Tree).\n */\nexport class LLRBEmptyNode<K, V> {\n  key: K;\n  value: V;\n  left: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  right: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  color: boolean;\n\n  /**\n   * Returns a copy of the current node.\n   *\n   * @returns The node copy.\n   */\n  copy(\n    key: K | null,\n    value: V | null,\n    color: boolean | null,\n    left: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ): LLRBEmptyNode<K, V> {\n    return this;\n  }\n\n  /**\n   * Returns a copy of the tree, with the specified key/value added.\n   *\n   * @param key - Key to be added.\n   * @param value - Value to be added.\n   * @param comparator - Comparator.\n   * @returns New tree, with item added.\n   */\n  insert(key: K, value: V, comparator: Comparator<K>): LLRBNode<K, V> {\n    return new LLRBNode(key, value, null);\n  }\n\n  /**\n   * Returns a copy of the tree, with the specified key removed.\n   *\n   * @param key - The key to remove.\n   * @param comparator - Comparator.\n   * @returns New tree, with item removed.\n   */\n  remove(key: K, comparator: Comparator<K>): LLRBEmptyNode<K, V> {\n    return this;\n  }\n\n  /**\n   * @returns The total number of nodes in the tree.\n   */\n  count(): number {\n    return 0;\n  }\n\n  /**\n   * @returns True if the tree is empty.\n   */\n  isEmpty(): boolean {\n    return true;\n  }\n\n  /**\n   * Traverses the tree in key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @returns True if traversal was aborted.\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return false;\n  }\n\n  /**\n   * Traverses the tree in reverse key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @returns True if traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return false;\n  }\n\n  minKey(): null {\n    return null;\n  }\n\n  maxKey(): null {\n    return null;\n  }\n\n  check_(): number {\n    return 0;\n  }\n\n  /**\n   * @returns Whether this node is red.\n   */\n  isRed_() {\n    return false;\n  }\n}\n\n/**\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\n * tree.\n */\nexport class SortedMap<K, V> {\n  /**\n   * Always use the same empty node, to reduce memory.\n   */\n  static EMPTY_NODE = new LLRBEmptyNode();\n\n  /**\n   * @param comparator_ - Key comparator.\n   * @param root_ - Optional root node for the map.\n   */\n  constructor(\n    private comparator_: Comparator<K>,\n    private root_:\n      | LLRBNode<K, V>\n      | LLRBEmptyNode<K, V> = SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>\n  ) {}\n\n  /**\n   * Returns a copy of the map, with the specified key/value added or replaced.\n   * (TODO: We should perhaps rename this method to 'put')\n   *\n   * @param key - Key to be added.\n   * @param value - Value to be added.\n   * @returns New map, with item added.\n   */\n  insert(key: K, value: V): SortedMap<K, V> {\n    return new SortedMap(\n      this.comparator_,\n      this.root_\n        .insert(key, value, this.comparator_)\n        .copy(null, null, LLRBNode.BLACK, null, null)\n    );\n  }\n\n  /**\n   * Returns a copy of the map, with the specified key removed.\n   *\n   * @param key - The key to remove.\n   * @returns New map, with item removed.\n   */\n  remove(key: K): SortedMap<K, V> {\n    return new SortedMap(\n      this.comparator_,\n      this.root_\n        .remove(key, this.comparator_)\n        .copy(null, null, LLRBNode.BLACK, null, null)\n    );\n  }\n\n  /**\n   * Returns the value of the node with the given key, or null.\n   *\n   * @param key - The key to look up.\n   * @returns The value of the node with the given key, or null if the\n   * key doesn't exist.\n   */\n  get(key: K): V | null {\n    let cmp;\n    let node = this.root_;\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n      if (cmp === 0) {\n        return node.value;\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        node = node.right;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Returns the key of the item *before* the specified key, or null if key is the first item.\n   * @param key - The key to find the predecessor of\n   * @returns The predecessor key.\n   */\n  getPredecessorKey(key: K): K | null {\n    let cmp,\n      node = this.root_,\n      rightParent = null;\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n      if (cmp === 0) {\n        if (!node.left.isEmpty()) {\n          node = node.left;\n          while (!node.right.isEmpty()) {\n            node = node.right;\n          }\n          return node.key;\n        } else if (rightParent) {\n          return rightParent.key;\n        } else {\n          return null; // first item.\n        }\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        rightParent = node;\n        node = node.right;\n      }\n    }\n\n    throw new Error(\n      'Attempted to find predecessor key for a nonexistent key.  What gives?'\n    );\n  }\n\n  /**\n   * @returns True if the map is empty.\n   */\n  isEmpty(): boolean {\n    return this.root_.isEmpty();\n  }\n\n  /**\n   * @returns The total number of nodes in the map.\n   */\n  count(): number {\n    return this.root_.count();\n  }\n\n  /**\n   * @returns The minimum key in the map.\n   */\n  minKey(): K | null {\n    return this.root_.minKey();\n  }\n\n  /**\n   * @returns The maximum key in the map.\n   */\n  maxKey(): K | null {\n    return this.root_.maxKey();\n  }\n\n  /**\n   * Traverses the map in key order and calls the specified action function\n   * for each key/value pair.\n   *\n   * @param action - Callback function to be called\n   * for each key/value pair.  If action returns true, traversal is aborted.\n   * @returns The first truthy value returned by action, or the last falsey\n   *   value returned by action\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return this.root_.inorderTraversal(action);\n  }\n\n  /**\n   * Traverses the map in reverse key order and calls the specified action function\n   * for each key/value pair.\n   *\n   * @param action - Callback function to be called\n   * for each key/value pair.  If action returns true, traversal is aborted.\n   * @returns True if the traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return this.root_.reverseTraversal(action);\n  }\n\n  /**\n   * Returns an iterator over the SortedMap.\n   * @returns The iterator.\n   */\n  getIterator<T>(\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      null,\n      this.comparator_,\n      false,\n      resultGenerator\n    );\n  }\n\n  getIteratorFrom<T>(\n    key: K,\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      key,\n      this.comparator_,\n      false,\n      resultGenerator\n    );\n  }\n\n  getReverseIteratorFrom<T>(\n    key: K,\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      key,\n      this.comparator_,\n      true,\n      resultGenerator\n    );\n  }\n\n  getReverseIterator<T>(\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      null,\n      this.comparator_,\n      true,\n      resultGenerator\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare } from '../util/util';\n\nimport { NamedNode } from './Node';\n\nexport function NAME_ONLY_COMPARATOR(left: NamedNode, right: NamedNode) {\n  return nameCompare(left.name, right.name);\n}\n\nexport function NAME_COMPARATOR(left: string, right: string) {\n  return nameCompare(left, right);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, contains } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport { doubleToIEEE754String } from '../util/util';\n\nimport { Node } from './Node';\n\nlet MAX_NODE: Node;\n\nexport function setMaxNode(val: Node) {\n  MAX_NODE = val;\n}\n\nexport const priorityHashText = function (priority: string | number): string {\n  if (typeof priority === 'number') {\n    return 'number:' + doubleToIEEE754String(priority);\n  } else {\n    return 'string:' + priority;\n  }\n};\n\n/**\n * Validates that a priority snapshot Node is valid.\n */\nexport const validatePriorityNode = function (priorityNode: Node) {\n  if (priorityNode.isLeafNode()) {\n    const val = priorityNode.val();\n    assert(\n      typeof val === 'string' ||\n        typeof val === 'number' ||\n        (typeof val === 'object' && contains(val as Indexable, '.sv')),\n      'Priority must be a string or number.'\n    );\n  } else {\n    assert(\n      priorityNode === MAX_NODE || priorityNode.isEmpty(),\n      'priority of unexpected type.'\n    );\n  }\n  // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\n  assert(\n    priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(),\n    \"Priority nodes can't have a priority of their own.\"\n  );\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport {\n  Path,\n  pathGetFront,\n  pathGetLength,\n  pathIsEmpty,\n  pathPopFront\n} from '../util/Path';\nimport { doubleToIEEE754String, sha1 } from '../util/util';\n\nimport { ChildrenNodeConstructor } from './ChildrenNode';\nimport { Index } from './indexes/Index';\nimport { Node } from './Node';\nimport { priorityHashText, validatePriorityNode } from './snap';\n\nlet __childrenNodeConstructor: ChildrenNodeConstructor;\n\n/**\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\n * implements Node and stores the value of the node (a string,\n * number, or boolean) accessible via getValue().\n */\nexport class LeafNode implements Node {\n  static set __childrenNodeConstructor(val: ChildrenNodeConstructor) {\n    __childrenNodeConstructor = val;\n  }\n\n  static get __childrenNodeConstructor() {\n    return __childrenNodeConstructor;\n  }\n\n  /**\n   * The sort order for comparing leaf nodes of different types. If two leaf nodes have\n   * the same type, the comparison falls back to their value\n   */\n  static VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\n\n  private lazyHash_: string | null = null;\n\n  /**\n   * @param value_ - The value to store in this leaf node. The object type is\n   * possible in the event of a deferred value\n   * @param priorityNode_ - The priority of this node.\n   */\n  constructor(\n    private readonly value_: string | number | boolean | Indexable,\n    private priorityNode_: Node = LeafNode.__childrenNodeConstructor.EMPTY_NODE\n  ) {\n    assert(\n      this.value_ !== undefined && this.value_ !== null,\n      \"LeafNode shouldn't be created with null/undefined value.\"\n    );\n\n    validatePriorityNode(this.priorityNode_);\n  }\n\n  /** @inheritDoc */\n  isLeafNode(): boolean {\n    return true;\n  }\n\n  /** @inheritDoc */\n  getPriority(): Node {\n    return this.priorityNode_;\n  }\n\n  /** @inheritDoc */\n  updatePriority(newPriorityNode: Node): Node {\n    return new LeafNode(this.value_, newPriorityNode);\n  }\n\n  /** @inheritDoc */\n  getImmediateChild(childName: string): Node {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  }\n\n  /** @inheritDoc */\n  getChild(path: Path): Node {\n    if (pathIsEmpty(path)) {\n      return this;\n    } else if (pathGetFront(path) === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  }\n  hasChild(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  getPredecessorChildName(childName: string, childNode: Node): null {\n    return null;\n  }\n\n  /** @inheritDoc */\n  updateImmediateChild(childName: string, newChildNode: Node): Node {\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else if (newChildNode.isEmpty() && childName !== '.priority') {\n      return this;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(\n        childName,\n        newChildNode\n      ).updatePriority(this.priorityNode_);\n    }\n  }\n\n  /** @inheritDoc */\n  updateChild(path: Path, newChildNode: Node): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return newChildNode;\n    } else if (newChildNode.isEmpty() && front !== '.priority') {\n      return this;\n    } else {\n      assert(\n        front !== '.priority' || pathGetLength(path) === 1,\n        '.priority must be the last token in a path'\n      );\n\n      return this.updateImmediateChild(\n        front,\n        LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(\n          pathPopFront(path),\n          newChildNode\n        )\n      );\n    }\n  }\n\n  /** @inheritDoc */\n  isEmpty(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  numChildren(): number {\n    return 0;\n  }\n\n  /** @inheritDoc */\n  forEachChild(index: Index, action: (s: string, n: Node) => void): boolean {\n    return false;\n  }\n  val(exportFormat?: boolean): {} {\n    if (exportFormat && !this.getPriority().isEmpty()) {\n      return {\n        '.value': this.getValue(),\n        '.priority': this.getPriority().val()\n      };\n    } else {\n      return this.getValue();\n    }\n  }\n\n  /** @inheritDoc */\n  hash(): string {\n    if (this.lazyHash_ === null) {\n      let toHash = '';\n      if (!this.priorityNode_.isEmpty()) {\n        toHash +=\n          'priority:' +\n          priorityHashText(this.priorityNode_.val() as number | string) +\n          ':';\n      }\n\n      const type = typeof this.value_;\n      toHash += type + ':';\n      if (type === 'number') {\n        toHash += doubleToIEEE754String(this.value_ as number);\n      } else {\n        toHash += this.value_;\n      }\n      this.lazyHash_ = sha1(toHash);\n    }\n    return this.lazyHash_;\n  }\n\n  /**\n   * Returns the value of the leaf node.\n   * @returns The value of the node.\n   */\n  getValue(): Indexable | string | number | boolean {\n    return this.value_;\n  }\n  compareTo(other: Node): number {\n    if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\n      return 1;\n    } else if (other instanceof LeafNode.__childrenNodeConstructor) {\n      return -1;\n    } else {\n      assert(other.isLeafNode(), 'Unknown node type');\n      return this.compareToLeafNode_(other as LeafNode);\n    }\n  }\n\n  /**\n   * Comparison specifically for two leaf nodes\n   */\n  private compareToLeafNode_(otherLeaf: LeafNode): number {\n    const otherLeafType = typeof otherLeaf.value_;\n    const thisLeafType = typeof this.value_;\n    const otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\n    const thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\n    assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\n    assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\n    if (otherIndex === thisIndex) {\n      // Same type, compare values\n      if (thisLeafType === 'object') {\n        // Deferred value nodes are all equal, but we should also never get to this point...\n        return 0;\n      } else {\n        // Note that this works because true > false, all others are number or string comparisons\n        if (this.value_ < otherLeaf.value_) {\n          return -1;\n        } else if (this.value_ === otherLeaf.value_) {\n          return 0;\n        } else {\n          return 1;\n        }\n      }\n    } else {\n      return thisIndex - otherIndex;\n    }\n  }\n  withIndex(): Node {\n    return this;\n  }\n  isIndexed(): boolean {\n    return true;\n  }\n  equals(other: Node): boolean {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      const otherLeaf = other as LeafNode;\n      return (\n        this.value_ === otherLeaf.value_ &&\n        this.priorityNode_.equals(otherLeaf.priorityNode_)\n      );\n    } else {\n      return false;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare, MAX_NAME } from '../../util/util';\nimport { LeafNode } from '../LeafNode';\nimport { NamedNode, Node } from '../Node';\n\nimport { Index } from './Index';\n\nlet nodeFromJSON: (a: unknown) => Node;\nlet MAX_NODE: Node;\n\nexport function setNodeFromJSON(val: (a: unknown) => Node) {\n  nodeFromJSON = val;\n}\n\nexport function setMaxNode(val: Node) {\n  MAX_NODE = val;\n}\n\nexport class PriorityIndex extends Index {\n  compare(a: NamedNode, b: NamedNode): number {\n    const aPriority = a.node.getPriority();\n    const bPriority = b.node.getPriority();\n    const indexCmp = aPriority.compareTo(bPriority);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n  isDefinedOn(node: Node): boolean {\n    return !node.getPriority().isEmpty();\n  }\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return !oldNode.getPriority().equals(newNode.getPriority());\n  }\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n  maxPost(): NamedNode {\n    return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE));\n  }\n\n  makePost(indexValue: unknown, name: string): NamedNode {\n    const priorityNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\n  }\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.priority';\n  }\n}\n\nexport const PRIORITY_INDEX = new PriorityIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LLRBNode, SortedMap } from '../util/SortedMap';\n\nimport { NamedNode } from './Node';\n\nconst LOG_2 = Math.log(2);\n\nclass Base12Num {\n  count: number;\n  private current_: number;\n  private bits_: number;\n\n  constructor(length: number) {\n    const logBase2 = (num: number) =>\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      parseInt((Math.log(num) / LOG_2) as any, 10);\n    const bitMask = (bits: number) => parseInt(Array(bits + 1).join('1'), 2);\n    this.count = logBase2(length + 1);\n    this.current_ = this.count - 1;\n    const mask = bitMask(this.count);\n    this.bits_ = (length + 1) & mask;\n  }\n\n  nextBitIsOne(): boolean {\n    //noinspection JSBitwiseOperatorUsage\n    const result = !(this.bits_ & (0x1 << this.current_));\n    this.current_--;\n    return result;\n  }\n}\n\n/**\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\n * function\n *\n * Uses the algorithm described in the paper linked here:\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\n *\n * @param childList - Unsorted list of children\n * @param cmp - The comparison method to be used\n * @param keyFn - An optional function to extract K from a node wrapper, if K's\n * type is not NamedNode\n * @param mapSortFn - An optional override for comparator used by the generated sorted map\n */\nexport const buildChildSet = function <K, V>(\n  childList: NamedNode[],\n  cmp: (a: NamedNode, b: NamedNode) => number,\n  keyFn?: (a: NamedNode) => K,\n  mapSortFn?: (a: K, b: K) => number\n): SortedMap<K, V> {\n  childList.sort(cmp);\n\n  const buildBalancedTree = function (\n    low: number,\n    high: number\n  ): LLRBNode<K, V> | null {\n    const length = high - low;\n    let namedNode: NamedNode;\n    let key: K;\n    if (length === 0) {\n      return null;\n    } else if (length === 1) {\n      namedNode = childList[low];\n      key = keyFn ? keyFn(namedNode) : (namedNode as unknown as K);\n      return new LLRBNode(\n        key,\n        namedNode.node as unknown as V,\n        LLRBNode.BLACK,\n        null,\n        null\n      );\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const middle = parseInt((length / 2) as any, 10) + low;\n      const left = buildBalancedTree(low, middle);\n      const right = buildBalancedTree(middle + 1, high);\n      namedNode = childList[middle];\n      key = keyFn ? keyFn(namedNode) : (namedNode as unknown as K);\n      return new LLRBNode(\n        key,\n        namedNode.node as unknown as V,\n        LLRBNode.BLACK,\n        left,\n        right\n      );\n    }\n  };\n\n  const buildFrom12Array = function (base12: Base12Num): LLRBNode<K, V> {\n    let node: LLRBNode<K, V> = null;\n    let root = null;\n    let index = childList.length;\n\n    const buildPennant = function (chunkSize: number, color: boolean) {\n      const low = index - chunkSize;\n      const high = index;\n      index -= chunkSize;\n      const childTree = buildBalancedTree(low + 1, high);\n      const namedNode = childList[low];\n      const key: K = keyFn ? keyFn(namedNode) : (namedNode as unknown as K);\n      attachPennant(\n        new LLRBNode(\n          key,\n          namedNode.node as unknown as V,\n          color,\n          null,\n          childTree\n        )\n      );\n    };\n\n    const attachPennant = function (pennant: LLRBNode<K, V>) {\n      if (node) {\n        node.left = pennant;\n        node = pennant;\n      } else {\n        root = pennant;\n        node = pennant;\n      }\n    };\n\n    for (let i = 0; i < base12.count; ++i) {\n      const isOne = base12.nextBitIsOne();\n      // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\n      const chunkSize = Math.pow(2, base12.count - (i + 1));\n      if (isOne) {\n        buildPennant(chunkSize, LLRBNode.BLACK);\n      } else {\n        // current == 2\n        buildPennant(chunkSize, LLRBNode.BLACK);\n        buildPennant(chunkSize, LLRBNode.RED);\n      }\n    }\n    return root;\n  };\n\n  const base12 = new Base12Num(childList.length);\n  const root = buildFrom12Array(base12);\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return new SortedMap<K, V>(mapSortFn || (cmp as any), root);\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, contains, map, safeGet } from '@firebase/util';\n\nimport { SortedMap } from '../util/SortedMap';\n\nimport { buildChildSet } from './childSet';\nimport { Index } from './indexes/Index';\nimport { KEY_INDEX } from './indexes/KeyIndex';\nimport { PRIORITY_INDEX } from './indexes/PriorityIndex';\nimport { NamedNode, Node } from './Node';\n\nlet _defaultIndexMap: IndexMap;\n\nconst fallbackObject = {};\n\nexport class IndexMap {\n  /**\n   * The default IndexMap for nodes without a priority\n   */\n  static get Default(): IndexMap {\n    assert(\n      fallbackObject && PRIORITY_INDEX,\n      'ChildrenNode.ts has not been loaded'\n    );\n    _defaultIndexMap =\n      _defaultIndexMap ||\n      new IndexMap(\n        { '.priority': fallbackObject },\n        { '.priority': PRIORITY_INDEX }\n      );\n    return _defaultIndexMap;\n  }\n\n  constructor(\n    private indexes_: {\n      [k: string]: SortedMap<NamedNode, Node> | /*FallbackType*/ object;\n    },\n    private indexSet_: { [k: string]: Index }\n  ) {}\n\n  get(indexKey: string): SortedMap<NamedNode, Node> | null {\n    const sortedMap = safeGet(this.indexes_, indexKey);\n    if (!sortedMap) {\n      throw new Error('No index defined for ' + indexKey);\n    }\n\n    if (sortedMap instanceof SortedMap) {\n      return sortedMap;\n    } else {\n      // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\n      // regular child map\n      return null;\n    }\n  }\n\n  hasIndex(indexDefinition: Index): boolean {\n    return contains(this.indexSet_, indexDefinition.toString());\n  }\n\n  addIndex(\n    indexDefinition: Index,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    assert(\n      indexDefinition !== KEY_INDEX,\n      \"KeyIndex always exists and isn't meant to be added to the IndexMap.\"\n    );\n    const childList = [];\n    let sawIndexedValue = false;\n    const iter = existingChildren.getIterator(NamedNode.Wrap);\n    let next = iter.getNext();\n    while (next) {\n      sawIndexedValue =\n        sawIndexedValue || indexDefinition.isDefinedOn(next.node);\n      childList.push(next);\n      next = iter.getNext();\n    }\n    let newIndex;\n    if (sawIndexedValue) {\n      newIndex = buildChildSet(childList, indexDefinition.getCompare());\n    } else {\n      newIndex = fallbackObject;\n    }\n    const indexName = indexDefinition.toString();\n    const newIndexSet = { ...this.indexSet_ };\n    newIndexSet[indexName] = indexDefinition;\n    const newIndexes = { ...this.indexes_ };\n    newIndexes[indexName] = newIndex;\n    return new IndexMap(newIndexes, newIndexSet);\n  }\n\n  /**\n   * Ensure that this node is properly tracked in any indexes that we're maintaining\n   */\n  addToIndexes(\n    namedNode: NamedNode,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    const newIndexes = map(\n      this.indexes_,\n      (indexedChildren: SortedMap<NamedNode, Node>, indexName: string) => {\n        const index = safeGet(this.indexSet_, indexName);\n        assert(index, 'Missing index implementation for ' + indexName);\n        if (indexedChildren === fallbackObject) {\n          // Check to see if we need to index everything\n          if (index.isDefinedOn(namedNode.node)) {\n            // We need to build this index\n            const childList = [];\n            const iter = existingChildren.getIterator(NamedNode.Wrap);\n            let next = iter.getNext();\n            while (next) {\n              if (next.name !== namedNode.name) {\n                childList.push(next);\n              }\n              next = iter.getNext();\n            }\n            childList.push(namedNode);\n            return buildChildSet(childList, index.getCompare());\n          } else {\n            // No change, this remains a fallback\n            return fallbackObject;\n          }\n        } else {\n          const existingSnap = existingChildren.get(namedNode.name);\n          let newChildren = indexedChildren;\n          if (existingSnap) {\n            newChildren = newChildren.remove(\n              new NamedNode(namedNode.name, existingSnap)\n            );\n          }\n          return newChildren.insert(namedNode, namedNode.node);\n        }\n      }\n    );\n    return new IndexMap(newIndexes, this.indexSet_);\n  }\n\n  /**\n   * Create a new IndexMap instance with the given value removed\n   */\n  removeFromIndexes(\n    namedNode: NamedNode,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    const newIndexes = map(\n      this.indexes_,\n      (indexedChildren: SortedMap<NamedNode, Node>) => {\n        if (indexedChildren === fallbackObject) {\n          // This is the fallback. Just return it, nothing to do in this case\n          return indexedChildren;\n        } else {\n          const existingSnap = existingChildren.get(namedNode.name);\n          if (existingSnap) {\n            return indexedChildren.remove(\n              new NamedNode(namedNode.name, existingSnap)\n            );\n          } else {\n            // No record of this child\n            return indexedChildren;\n          }\n        }\n      }\n    );\n    return new IndexMap(newIndexes, this.indexSet_);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Path, pathGetFront, pathGetLength, pathPopFront } from '../util/Path';\nimport { SortedMap, SortedMapIterator } from '../util/SortedMap';\nimport { MAX_NAME, MIN_NAME, sha1 } from '../util/util';\n\nimport { NAME_COMPARATOR } from './comparators';\nimport { Index } from './indexes/Index';\nimport { KEY_INDEX, KeyIndex } from './indexes/KeyIndex';\nimport {\n  PRIORITY_INDEX,\n  setMaxNode as setPriorityMaxNode\n} from './indexes/PriorityIndex';\nimport { IndexMap } from './IndexMap';\nimport { LeafNode } from './LeafNode';\nimport { NamedNode, Node } from './Node';\nimport { priorityHashText, setMaxNode, validatePriorityNode } from './snap';\n\nexport interface ChildrenNodeConstructor {\n  new (\n    children_: SortedMap<string, Node>,\n    priorityNode_: Node | null,\n    indexMap_: IndexMap\n  ): ChildrenNode;\n  EMPTY_NODE: ChildrenNode;\n}\n\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\n\nlet EMPTY_NODE: ChildrenNode;\n\n/**\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\n * (i.e. nodes with children).  It implements Node and stores the\n * list of children in the children property, sorted by child name.\n */\nexport class ChildrenNode implements Node {\n  private lazyHash_: string | null = null;\n\n  static get EMPTY_NODE(): ChildrenNode {\n    return (\n      EMPTY_NODE ||\n      (EMPTY_NODE = new ChildrenNode(\n        new SortedMap<string, Node>(NAME_COMPARATOR),\n        null,\n        IndexMap.Default\n      ))\n    );\n  }\n\n  /**\n   * @param children_ - List of children of this node..\n   * @param priorityNode_ - The priority of this node (as a snapshot node).\n   */\n  constructor(\n    private readonly children_: SortedMap<string, Node>,\n    private readonly priorityNode_: Node | null,\n    private indexMap_: IndexMap\n  ) {\n    /**\n     * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\n     * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\n     * class instead of an empty ChildrenNode.\n     */\n    if (this.priorityNode_) {\n      validatePriorityNode(this.priorityNode_);\n    }\n\n    if (this.children_.isEmpty()) {\n      assert(\n        !this.priorityNode_ || this.priorityNode_.isEmpty(),\n        'An empty node cannot have a priority'\n      );\n    }\n  }\n\n  /** @inheritDoc */\n  isLeafNode(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  getPriority(): Node {\n    return this.priorityNode_ || EMPTY_NODE;\n  }\n\n  /** @inheritDoc */\n  updatePriority(newPriorityNode: Node): Node {\n    if (this.children_.isEmpty()) {\n      // Don't allow priorities on empty nodes\n      return this;\n    } else {\n      return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\n    }\n  }\n\n  /** @inheritDoc */\n  getImmediateChild(childName: string): Node {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.getPriority();\n    } else {\n      const child = this.children_.get(childName);\n      return child === null ? EMPTY_NODE : child;\n    }\n  }\n\n  /** @inheritDoc */\n  getChild(path: Path): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return this;\n    }\n\n    return this.getImmediateChild(front).getChild(pathPopFront(path));\n  }\n\n  /** @inheritDoc */\n  hasChild(childName: string): boolean {\n    return this.children_.get(childName) !== null;\n  }\n\n  /** @inheritDoc */\n  updateImmediateChild(childName: string, newChildNode: Node): Node {\n    assert(newChildNode, 'We should always be passing snapshot nodes');\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else {\n      const namedNode = new NamedNode(childName, newChildNode);\n      let newChildren, newIndexMap;\n      if (newChildNode.isEmpty()) {\n        newChildren = this.children_.remove(childName);\n        newIndexMap = this.indexMap_.removeFromIndexes(\n          namedNode,\n          this.children_\n        );\n      } else {\n        newChildren = this.children_.insert(childName, newChildNode);\n        newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\n      }\n\n      const newPriority = newChildren.isEmpty()\n        ? EMPTY_NODE\n        : this.priorityNode_;\n      return new ChildrenNode(newChildren, newPriority, newIndexMap);\n    }\n  }\n\n  /** @inheritDoc */\n  updateChild(path: Path, newChildNode: Node): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return newChildNode;\n    } else {\n      assert(\n        pathGetFront(path) !== '.priority' || pathGetLength(path) === 1,\n        '.priority must be the last token in a path'\n      );\n      const newImmediateChild = this.getImmediateChild(front).updateChild(\n        pathPopFront(path),\n        newChildNode\n      );\n      return this.updateImmediateChild(front, newImmediateChild);\n    }\n  }\n\n  /** @inheritDoc */\n  isEmpty(): boolean {\n    return this.children_.isEmpty();\n  }\n\n  /** @inheritDoc */\n  numChildren(): number {\n    return this.children_.count();\n  }\n\n  private static INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\n\n  /** @inheritDoc */\n  val(exportFormat?: boolean): object {\n    if (this.isEmpty()) {\n      return null;\n    }\n\n    const obj: { [k: string]: unknown } = {};\n    let numKeys = 0,\n      maxKey = 0,\n      allIntegerKeys = true;\n    this.forEachChild(PRIORITY_INDEX, (key: string, childNode: Node) => {\n      obj[key] = childNode.val(exportFormat);\n\n      numKeys++;\n      if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\n        maxKey = Math.max(maxKey, Number(key));\n      } else {\n        allIntegerKeys = false;\n      }\n    });\n\n    if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\n      // convert to array.\n      const array: unknown[] = [];\n      // eslint-disable-next-line guard-for-in\n      for (const key in obj) {\n        array[key as unknown as number] = obj[key];\n      }\n\n      return array;\n    } else {\n      if (exportFormat && !this.getPriority().isEmpty()) {\n        obj['.priority'] = this.getPriority().val();\n      }\n      return obj;\n    }\n  }\n\n  /** @inheritDoc */\n  hash(): string {\n    if (this.lazyHash_ === null) {\n      let toHash = '';\n      if (!this.getPriority().isEmpty()) {\n        toHash +=\n          'priority:' +\n          priorityHashText(this.getPriority().val() as string | number) +\n          ':';\n      }\n\n      this.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n        const childHash = childNode.hash();\n        if (childHash !== '') {\n          toHash += ':' + key + ':' + childHash;\n        }\n      });\n\n      this.lazyHash_ = toHash === '' ? '' : sha1(toHash);\n    }\n    return this.lazyHash_;\n  }\n\n  /** @inheritDoc */\n  getPredecessorChildName(\n    childName: string,\n    childNode: Node,\n    index: Index\n  ): string {\n    const idx = this.resolveIndex_(index);\n    if (idx) {\n      const predecessor = idx.getPredecessorKey(\n        new NamedNode(childName, childNode)\n      );\n      return predecessor ? predecessor.name : null;\n    } else {\n      return this.children_.getPredecessorKey(childName);\n    }\n  }\n\n  getFirstChildName(indexDefinition: Index): string | null {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      const minKey = idx.minKey();\n      return minKey && minKey.name;\n    } else {\n      return this.children_.minKey();\n    }\n  }\n\n  getFirstChild(indexDefinition: Index): NamedNode | null {\n    const minKey = this.getFirstChildName(indexDefinition);\n    if (minKey) {\n      return new NamedNode(minKey, this.children_.get(minKey));\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Given an index, return the key name of the largest value we have, according to that index\n   */\n  getLastChildName(indexDefinition: Index): string | null {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      const maxKey = idx.maxKey();\n      return maxKey && maxKey.name;\n    } else {\n      return this.children_.maxKey();\n    }\n  }\n\n  getLastChild(indexDefinition: Index): NamedNode | null {\n    const maxKey = this.getLastChildName(indexDefinition);\n    if (maxKey) {\n      return new NamedNode(maxKey, this.children_.get(maxKey));\n    } else {\n      return null;\n    }\n  }\n  forEachChild(\n    index: Index,\n    action: (key: string, node: Node) => boolean | void\n  ): boolean {\n    const idx = this.resolveIndex_(index);\n    if (idx) {\n      return idx.inorderTraversal(wrappedNode => {\n        return action(wrappedNode.name, wrappedNode.node);\n      });\n    } else {\n      return this.children_.inorderTraversal(action);\n    }\n  }\n\n  getIterator(\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\n  }\n\n  getIteratorFrom(\n    startPost: NamedNode,\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      return idx.getIteratorFrom(startPost, key => key);\n    } else {\n      const iterator = this.children_.getIteratorFrom(\n        startPost.name,\n        NamedNode.Wrap\n      );\n      let next = iterator.peek();\n      while (next != null && indexDefinition.compare(next, startPost) < 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n      return iterator;\n    }\n  }\n\n  getReverseIterator(\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    return this.getReverseIteratorFrom(\n      indexDefinition.maxPost(),\n      indexDefinition\n    );\n  }\n\n  getReverseIteratorFrom(\n    endPost: NamedNode,\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      return idx.getReverseIteratorFrom(endPost, key => {\n        return key;\n      });\n    } else {\n      const iterator = this.children_.getReverseIteratorFrom(\n        endPost.name,\n        NamedNode.Wrap\n      );\n      let next = iterator.peek();\n      while (next != null && indexDefinition.compare(next, endPost) > 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n      return iterator;\n    }\n  }\n  compareTo(other: ChildrenNode): number {\n    if (this.isEmpty()) {\n      if (other.isEmpty()) {\n        return 0;\n      } else {\n        return -1;\n      }\n    } else if (other.isLeafNode() || other.isEmpty()) {\n      return 1;\n    } else if (other === MAX_NODE) {\n      return -1;\n    } else {\n      // Must be another node with children.\n      return 0;\n    }\n  }\n  withIndex(indexDefinition: Index): Node {\n    if (\n      indexDefinition === KEY_INDEX ||\n      this.indexMap_.hasIndex(indexDefinition)\n    ) {\n      return this;\n    } else {\n      const newIndexMap = this.indexMap_.addIndex(\n        indexDefinition,\n        this.children_\n      );\n      return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\n    }\n  }\n  isIndexed(index: Index): boolean {\n    return index === KEY_INDEX || this.indexMap_.hasIndex(index);\n  }\n  equals(other: Node): boolean {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      return false;\n    } else {\n      const otherChildrenNode = other as ChildrenNode;\n      if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\n        return false;\n      } else if (\n        this.children_.count() === otherChildrenNode.children_.count()\n      ) {\n        const thisIter = this.getIterator(PRIORITY_INDEX);\n        const otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\n        let thisCurrent = thisIter.getNext();\n        let otherCurrent = otherIter.getNext();\n        while (thisCurrent && otherCurrent) {\n          if (\n            thisCurrent.name !== otherCurrent.name ||\n            !thisCurrent.node.equals(otherCurrent.node)\n          ) {\n            return false;\n          }\n          thisCurrent = thisIter.getNext();\n          otherCurrent = otherIter.getNext();\n        }\n        return thisCurrent === null && otherCurrent === null;\n      } else {\n        return false;\n      }\n    }\n  }\n\n  /**\n   * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\n   * instead.\n   *\n   */\n  private resolveIndex_(\n    indexDefinition: Index\n  ): SortedMap<NamedNode, Node> | null {\n    if (indexDefinition === KEY_INDEX) {\n      return null;\n    } else {\n      return this.indexMap_.get(indexDefinition.toString());\n    }\n  }\n}\n\nexport class MaxNode extends ChildrenNode {\n  constructor() {\n    super(\n      new SortedMap<string, Node>(NAME_COMPARATOR),\n      ChildrenNode.EMPTY_NODE,\n      IndexMap.Default\n    );\n  }\n\n  compareTo(other: Node): number {\n    if (other === this) {\n      return 0;\n    } else {\n      return 1;\n    }\n  }\n\n  equals(other: Node): boolean {\n    // Not that we every compare it, but MAX_NODE is only ever equal to itself\n    return other === this;\n  }\n\n  getPriority(): MaxNode {\n    return this;\n  }\n\n  getImmediateChild(childName: string): ChildrenNode {\n    return ChildrenNode.EMPTY_NODE;\n  }\n\n  isEmpty(): boolean {\n    return false;\n  }\n}\n\n/**\n * Marker that will sort higher than any other snapshot.\n */\nexport const MAX_NODE = new MaxNode();\n\n/**\n * Document NamedNode extensions\n */\ndeclare module './Node' {\n  interface NamedNode {\n    MIN: NamedNode;\n    MAX: NamedNode;\n  }\n}\n\nObject.defineProperties(NamedNode, {\n  MIN: {\n    value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\n  },\n  MAX: {\n    value: new NamedNode(MAX_NAME, MAX_NODE)\n  }\n});\n\n/**\n * Reference Extensions\n */\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\nLeafNode.__childrenNodeConstructor = ChildrenNode;\nsetMaxNode(MAX_NODE);\nsetPriorityMaxNode(MAX_NODE);\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains, assert } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport { SortedMap } from '../util/SortedMap';\nimport { each } from '../util/util';\n\nimport { ChildrenNode } from './ChildrenNode';\nimport { buildChildSet } from './childSet';\nimport { NAME_COMPARATOR, NAME_ONLY_COMPARATOR } from './comparators';\nimport { PRIORITY_INDEX, setNodeFromJSON } from './indexes/PriorityIndex';\nimport { IndexMap } from './IndexMap';\nimport { LeafNode } from './LeafNode';\nimport { NamedNode, Node } from './Node';\n\nconst USE_HINZE = true;\n\n/**\n * Constructs a snapshot node representing the passed JSON and returns it.\n * @param json - JSON to create a node for.\n * @param priority - Optional priority to use.  This will be ignored if the\n * passed JSON contains a .priority property.\n */\nexport function nodeFromJSON(\n  json: unknown | null,\n  priority: unknown = null\n): Node {\n  if (json === null) {\n    return ChildrenNode.EMPTY_NODE;\n  }\n\n  if (typeof json === 'object' && '.priority' in json) {\n    priority = json['.priority'];\n  }\n\n  assert(\n    priority === null ||\n      typeof priority === 'string' ||\n      typeof priority === 'number' ||\n      (typeof priority === 'object' && '.sv' in (priority as object)),\n    'Invalid priority type found: ' + typeof priority\n  );\n\n  if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\n    json = json['.value'];\n  }\n\n  // Valid leaf nodes include non-objects or server-value wrapper objects\n  if (typeof json !== 'object' || '.sv' in json) {\n    const jsonLeaf = json as string | number | boolean | Indexable;\n    return new LeafNode(jsonLeaf, nodeFromJSON(priority));\n  }\n\n  if (!(json instanceof Array) && USE_HINZE) {\n    const children: NamedNode[] = [];\n    let childrenHavePriority = false;\n    const hinzeJsonObj = json;\n    each(hinzeJsonObj, (key, child) => {\n      if (key.substring(0, 1) !== '.') {\n        // Ignore metadata nodes\n        const childNode = nodeFromJSON(child);\n        if (!childNode.isEmpty()) {\n          childrenHavePriority =\n            childrenHavePriority || !childNode.getPriority().isEmpty();\n          children.push(new NamedNode(key, childNode));\n        }\n      }\n    });\n\n    if (children.length === 0) {\n      return ChildrenNode.EMPTY_NODE;\n    }\n\n    const childSet = buildChildSet(\n      children,\n      NAME_ONLY_COMPARATOR,\n      namedNode => namedNode.name,\n      NAME_COMPARATOR\n    ) as SortedMap<string, Node>;\n    if (childrenHavePriority) {\n      const sortedChildSet = buildChildSet(\n        children,\n        PRIORITY_INDEX.getCompare()\n      );\n      return new ChildrenNode(\n        childSet,\n        nodeFromJSON(priority),\n        new IndexMap(\n          { '.priority': sortedChildSet },\n          { '.priority': PRIORITY_INDEX }\n        )\n      );\n    } else {\n      return new ChildrenNode(\n        childSet,\n        nodeFromJSON(priority),\n        IndexMap.Default\n      );\n    }\n  } else {\n    let node: Node = ChildrenNode.EMPTY_NODE;\n    each(json, (key: string, childData: unknown) => {\n      if (contains(json as object, key)) {\n        if (key.substring(0, 1) !== '.') {\n          // ignore metadata nodes.\n          const childNode = nodeFromJSON(childData);\n          if (childNode.isLeafNode() || !childNode.isEmpty()) {\n            node = node.updateImmediateChild(key, childNode);\n          }\n        }\n      }\n    });\n\n    return node.updatePriority(nodeFromJSON(priority));\n  }\n}\n\nsetNodeFromJSON(nodeFromJSON);\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Path, pathGetFront, pathIsEmpty, pathSlice } from '../../util/Path';\nimport { MAX_NAME, nameCompare } from '../../util/util';\nimport { ChildrenNode, MAX_NODE } from '../ChildrenNode';\nimport { NamedNode, Node } from '../Node';\nimport { nodeFromJSON } from '../nodeFromJSON';\n\nimport { Index } from './Index';\n\nexport class PathIndex extends Index {\n  constructor(private indexPath_: Path) {\n    super();\n\n    assert(\n      !pathIsEmpty(indexPath_) && pathGetFront(indexPath_) !== '.priority',\n      \"Can't create PathIndex with empty path or .priority key\"\n    );\n  }\n\n  protected extractChild(snap: Node): Node {\n    return snap.getChild(this.indexPath_);\n  }\n  isDefinedOn(node: Node): boolean {\n    return !node.getChild(this.indexPath_).isEmpty();\n  }\n  compare(a: NamedNode, b: NamedNode): number {\n    const aChild = this.extractChild(a.node);\n    const bChild = this.extractChild(b.node);\n    const indexCmp = aChild.compareTo(bChild);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n  makePost(indexValue: object, name: string): NamedNode {\n    const valueNode = nodeFromJSON(indexValue);\n    const node = ChildrenNode.EMPTY_NODE.updateChild(\n      this.indexPath_,\n      valueNode\n    );\n    return new NamedNode(name, node);\n  }\n  maxPost(): NamedNode {\n    const node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE);\n    return new NamedNode(MAX_NAME, node);\n  }\n  toString(): string {\n    return pathSlice(this.indexPath_, 0).join('/');\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare } from '../../util/util';\nimport { NamedNode, Node } from '../Node';\nimport { nodeFromJSON } from '../nodeFromJSON';\n\nimport { Index } from './Index';\n\nexport class ValueIndex extends Index {\n  compare(a: NamedNode, b: NamedNode): number {\n    const indexCmp = a.node.compareTo(b.node);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n  isDefinedOn(node: Node): boolean {\n    return true;\n  }\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return !oldNode.equals(newNode);\n  }\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n  maxPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MAX;\n  }\n\n  makePost(indexValue: object, name: string): NamedNode {\n    const valueNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, valueNode);\n  }\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.value';\n  }\n}\n\nexport const VALUE_INDEX = new ValueIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\n\nexport const enum ChangeType {\n  /** Event type for a child added */\n  CHILD_ADDED = 'child_added',\n  /** Event type for a child removed */\n  CHILD_REMOVED = 'child_removed',\n  /** Event type for a child changed */\n  CHILD_CHANGED = 'child_changed',\n  /** Event type for a child moved */\n  CHILD_MOVED = 'child_moved',\n  /** Event type for a value change */\n  VALUE = 'value'\n}\n\nexport interface Change {\n  /** @param type - The event type */\n  type: ChangeType;\n  /** @param snapshotNode - The data */\n  snapshotNode: Node;\n  /** @param childName - The name for this child, if it's a child even */\n  childName?: string;\n  /** @param oldSnap - Used for intermediate processing of child changed events */\n  oldSnap?: Node;\n  /**  * @param prevName - The name for the previous child, if applicable */\n  prevName?: string | null;\n}\n\nexport function changeValue(snapshotNode: Node): Change {\n  return { type: ChangeType.VALUE, snapshotNode };\n}\n\nexport function changeChildAdded(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_ADDED, snapshotNode, childName };\n}\n\nexport function changeChildRemoved(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_REMOVED, snapshotNode, childName };\n}\n\nexport function changeChildChanged(\n  childName: string,\n  snapshotNode: Node,\n  oldSnap: Node\n): Change {\n  return {\n    type: ChangeType.CHILD_CHANGED,\n    snapshotNode,\n    childName,\n    oldSnap\n  };\n}\n\nexport function changeChildMoved(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_MOVED, snapshotNode, childName };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { Index } from '../../snap/indexes/Index';\nimport { PRIORITY_INDEX } from '../../snap/indexes/PriorityIndex';\nimport { Node } from '../../snap/Node';\nimport { Path } from '../../util/Path';\nimport {\n  changeChildAdded,\n  changeChildChanged,\n  changeChildRemoved\n} from '../Change';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\nimport { CompleteChildSource } from '../CompleteChildSource';\n\nimport { NodeFilter } from './NodeFilter';\n\n/**\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\n */\nexport class IndexedFilter implements NodeFilter {\n  constructor(private readonly index_: Index) {}\n\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    assert(\n      snap.isIndexed(this.index_),\n      'A node must be indexed if only a child is updated'\n    );\n    const oldChild = snap.getImmediateChild(key);\n    // Check if anything actually changed.\n    if (\n      oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))\n    ) {\n      // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\n      // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\n      // to avoid treating these cases as \"nothing changed.\"\n      if (oldChild.isEmpty() === newChild.isEmpty()) {\n        // Nothing changed.\n\n        // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\n        //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\n        return snap;\n      }\n    }\n\n    if (optChangeAccumulator != null) {\n      if (newChild.isEmpty()) {\n        if (snap.hasChild(key)) {\n          optChangeAccumulator.trackChildChange(\n            changeChildRemoved(key, oldChild)\n          );\n        } else {\n          assert(\n            snap.isLeafNode(),\n            'A child remove without an old child only makes sense on a leaf node'\n          );\n        }\n      } else if (oldChild.isEmpty()) {\n        optChangeAccumulator.trackChildChange(changeChildAdded(key, newChild));\n      } else {\n        optChangeAccumulator.trackChildChange(\n          changeChildChanged(key, newChild, oldChild)\n        );\n      }\n    }\n    if (snap.isLeafNode() && newChild.isEmpty()) {\n      return snap;\n    } else {\n      // Make sure the node is indexed\n      return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\n    }\n  }\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (optChangeAccumulator != null) {\n      if (!oldSnap.isLeafNode()) {\n        oldSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n          if (!newSnap.hasChild(key)) {\n            optChangeAccumulator.trackChildChange(\n              changeChildRemoved(key, childNode)\n            );\n          }\n        });\n      }\n      if (!newSnap.isLeafNode()) {\n        newSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n          if (oldSnap.hasChild(key)) {\n            const oldChild = oldSnap.getImmediateChild(key);\n            if (!oldChild.equals(childNode)) {\n              optChangeAccumulator.trackChildChange(\n                changeChildChanged(key, childNode, oldChild)\n              );\n            }\n          } else {\n            optChangeAccumulator.trackChildChange(\n              changeChildAdded(key, childNode)\n            );\n          }\n        });\n      }\n    }\n    return newSnap.withIndex(this.index_);\n  }\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    if (oldSnap.isEmpty()) {\n      return ChildrenNode.EMPTY_NODE;\n    } else {\n      return oldSnap.updatePriority(newPriority);\n    }\n  }\n  filtersNodes(): boolean {\n    return false;\n  }\n  getIndexedFilter(): IndexedFilter {\n    return this;\n  }\n  getIndex(): Index {\n    return this.index_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NamedNode, Node } from '../../../core/snap/Node';\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { Index } from '../../snap/indexes/Index';\nimport { PRIORITY_INDEX } from '../../snap/indexes/PriorityIndex';\nimport { Path } from '../../util/Path';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\nimport { CompleteChildSource } from '../CompleteChildSource';\nimport { QueryParams } from '../QueryParams';\n\nimport { IndexedFilter } from './IndexedFilter';\nimport { NodeFilter } from './NodeFilter';\n\n/**\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\n */\nexport class RangedFilter implements NodeFilter {\n  private indexedFilter_: IndexedFilter;\n\n  private index_: Index;\n\n  private startPost_: NamedNode;\n\n  private endPost_: NamedNode;\n\n  private startIsInclusive_: boolean;\n\n  private endIsInclusive_: boolean;\n\n  constructor(params: QueryParams) {\n    this.indexedFilter_ = new IndexedFilter(params.getIndex());\n    this.index_ = params.getIndex();\n    this.startPost_ = RangedFilter.getStartPost_(params);\n    this.endPost_ = RangedFilter.getEndPost_(params);\n    this.startIsInclusive_ = !params.startAfterSet_;\n    this.endIsInclusive_ = !params.endBeforeSet_;\n  }\n\n  getStartPost(): NamedNode {\n    return this.startPost_;\n  }\n\n  getEndPost(): NamedNode {\n    return this.endPost_;\n  }\n\n  matches(node: NamedNode): boolean {\n    const isWithinStart = this.startIsInclusive_\n      ? this.index_.compare(this.getStartPost(), node) <= 0\n      : this.index_.compare(this.getStartPost(), node) < 0;\n    const isWithinEnd = this.endIsInclusive_\n      ? this.index_.compare(node, this.getEndPost()) <= 0\n      : this.index_.compare(node, this.getEndPost()) < 0;\n    return isWithinStart && isWithinEnd;\n  }\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (!this.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n    return this.indexedFilter_.updateChild(\n      snap,\n      key,\n      newChild,\n      affectedPath,\n      source,\n      optChangeAccumulator\n    );\n  }\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (newSnap.isLeafNode()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      newSnap = ChildrenNode.EMPTY_NODE;\n    }\n    let filtered = newSnap.withIndex(this.index_);\n    // Don't support priorities on queries\n    filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\n    const self = this;\n    newSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n      if (!self.matches(new NamedNode(key, childNode))) {\n        filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\n      }\n    });\n    return this.indexedFilter_.updateFullNode(\n      oldSnap,\n      filtered,\n      optChangeAccumulator\n    );\n  }\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    // Don't support priorities on queries\n    return oldSnap;\n  }\n  filtersNodes(): boolean {\n    return true;\n  }\n  getIndexedFilter(): IndexedFilter {\n    return this.indexedFilter_;\n  }\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  private static getStartPost_(params: QueryParams): NamedNode {\n    if (params.hasStart()) {\n      const startName = params.getIndexStartName();\n      return params.getIndex().makePost(params.getIndexStartValue(), startName);\n    } else {\n      return params.getIndex().minPost();\n    }\n  }\n\n  private static getEndPost_(params: QueryParams): NamedNode {\n    if (params.hasEnd()) {\n      const endName = params.getIndexEndName();\n      return params.getIndex().makePost(params.getIndexEndValue(), endName);\n    } else {\n      return params.getIndex().maxPost();\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { Index } from '../../snap/indexes/Index';\nimport { NamedNode, Node } from '../../snap/Node';\nimport { Path } from '../../util/Path';\nimport {\n  changeChildAdded,\n  changeChildChanged,\n  changeChildRemoved\n} from '../Change';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\nimport { CompleteChildSource } from '../CompleteChildSource';\nimport { QueryParams } from '../QueryParams';\n\nimport { IndexedFilter } from './IndexedFilter';\nimport { NodeFilter } from './NodeFilter';\nimport { RangedFilter } from './RangedFilter';\n\n/**\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\n */\nexport class LimitedFilter implements NodeFilter {\n  private readonly rangedFilter_: RangedFilter;\n\n  private readonly index_: Index;\n\n  private readonly limit_: number;\n\n  private readonly reverse_: boolean;\n\n  private readonly startIsInclusive_: boolean;\n\n  private readonly endIsInclusive_: boolean;\n\n  constructor(params: QueryParams) {\n    this.rangedFilter_ = new RangedFilter(params);\n    this.index_ = params.getIndex();\n    this.limit_ = params.getLimit();\n    this.reverse_ = !params.isViewFromLeft();\n    this.startIsInclusive_ = !params.startAfterSet_;\n    this.endIsInclusive_ = !params.endBeforeSet_;\n  }\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n    if (snap.getImmediateChild(key).equals(newChild)) {\n      // No change\n      return snap;\n    } else if (snap.numChildren() < this.limit_) {\n      return this.rangedFilter_\n        .getIndexedFilter()\n        .updateChild(\n          snap,\n          key,\n          newChild,\n          affectedPath,\n          source,\n          optChangeAccumulator\n        );\n    } else {\n      return this.fullLimitUpdateChild_(\n        snap,\n        key,\n        newChild,\n        source,\n        optChangeAccumulator\n      );\n    }\n  }\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    let filtered;\n    if (newSnap.isLeafNode() || newSnap.isEmpty()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n    } else {\n      if (\n        this.limit_ * 2 < newSnap.numChildren() &&\n        newSnap.isIndexed(this.index_)\n      ) {\n        // Easier to build up a snapshot, since what we're given has more than twice the elements we want\n        filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n        // anchor to the startPost, endPost, or last element as appropriate\n        let iterator;\n        if (this.reverse_) {\n          iterator = (newSnap as ChildrenNode).getReverseIteratorFrom(\n            this.rangedFilter_.getEndPost(),\n            this.index_\n          );\n        } else {\n          iterator = (newSnap as ChildrenNode).getIteratorFrom(\n            this.rangedFilter_.getStartPost(),\n            this.index_\n          );\n        }\n        let count = 0;\n        while (iterator.hasNext() && count < this.limit_) {\n          const next = iterator.getNext();\n          if (!this.withinDirectionalStart(next)) {\n            // if we have not reached the start, skip to the next element\n            continue;\n          } else if (!this.withinDirectionalEnd(next)) {\n            // if we have reached the end, stop adding elements\n            break;\n          } else {\n            filtered = filtered.updateImmediateChild(next.name, next.node);\n            count++;\n          }\n        }\n      } else {\n        // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\n        filtered = newSnap.withIndex(this.index_);\n        // Don't support priorities on queries\n        filtered = filtered.updatePriority(\n          ChildrenNode.EMPTY_NODE\n        ) as ChildrenNode;\n\n        let iterator;\n        if (this.reverse_) {\n          iterator = filtered.getReverseIterator(this.index_);\n        } else {\n          iterator = filtered.getIterator(this.index_);\n        }\n\n        let count = 0;\n        while (iterator.hasNext()) {\n          const next = iterator.getNext();\n          const inRange =\n            count < this.limit_ &&\n            this.withinDirectionalStart(next) &&\n            this.withinDirectionalEnd(next);\n          if (inRange) {\n            count++;\n          } else {\n            filtered = filtered.updateImmediateChild(\n              next.name,\n              ChildrenNode.EMPTY_NODE\n            );\n          }\n        }\n      }\n    }\n    return this.rangedFilter_\n      .getIndexedFilter()\n      .updateFullNode(oldSnap, filtered, optChangeAccumulator);\n  }\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    // Don't support priorities on queries\n    return oldSnap;\n  }\n  filtersNodes(): boolean {\n    return true;\n  }\n  getIndexedFilter(): IndexedFilter {\n    return this.rangedFilter_.getIndexedFilter();\n  }\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  private fullLimitUpdateChild_(\n    snap: Node,\n    childKey: string,\n    childSnap: Node,\n    source: CompleteChildSource,\n    changeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    // TODO: rename all cache stuff etc to general snap terminology\n    let cmp;\n    if (this.reverse_) {\n      const indexCmp = this.index_.getCompare();\n      cmp = (a: NamedNode, b: NamedNode) => indexCmp(b, a);\n    } else {\n      cmp = this.index_.getCompare();\n    }\n    const oldEventCache = snap as ChildrenNode;\n    assert(oldEventCache.numChildren() === this.limit_, '');\n    const newChildNamedNode = new NamedNode(childKey, childSnap);\n    const windowBoundary = this.reverse_\n      ? oldEventCache.getFirstChild(this.index_)\n      : (oldEventCache.getLastChild(this.index_) as NamedNode);\n    const inRange = this.rangedFilter_.matches(newChildNamedNode);\n    if (oldEventCache.hasChild(childKey)) {\n      const oldChildSnap = oldEventCache.getImmediateChild(childKey);\n      let nextChild = source.getChildAfterChild(\n        this.index_,\n        windowBoundary,\n        this.reverse_\n      );\n      while (\n        nextChild != null &&\n        (nextChild.name === childKey || oldEventCache.hasChild(nextChild.name))\n      ) {\n        // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\n        // been applied to the limited filter yet. Ignore this next child which will be updated later in\n        // the limited filter...\n        nextChild = source.getChildAfterChild(\n          this.index_,\n          nextChild,\n          this.reverse_\n        );\n      }\n      const compareNext =\n        nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\n      const remainsInWindow =\n        inRange && !childSnap.isEmpty() && compareNext >= 0;\n      if (remainsInWindow) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            changeChildChanged(childKey, childSnap, oldChildSnap)\n          );\n        }\n        return oldEventCache.updateImmediateChild(childKey, childSnap);\n      } else {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            changeChildRemoved(childKey, oldChildSnap)\n          );\n        }\n        const newEventCache = oldEventCache.updateImmediateChild(\n          childKey,\n          ChildrenNode.EMPTY_NODE\n        );\n        const nextChildInRange =\n          nextChild != null && this.rangedFilter_.matches(nextChild);\n        if (nextChildInRange) {\n          if (changeAccumulator != null) {\n            changeAccumulator.trackChildChange(\n              changeChildAdded(nextChild.name, nextChild.node)\n            );\n          }\n          return newEventCache.updateImmediateChild(\n            nextChild.name,\n            nextChild.node\n          );\n        } else {\n          return newEventCache;\n        }\n      }\n    } else if (childSnap.isEmpty()) {\n      // we're deleting a node, but it was not in the window, so ignore it\n      return snap;\n    } else if (inRange) {\n      if (cmp(windowBoundary, newChildNamedNode) >= 0) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            changeChildRemoved(windowBoundary.name, windowBoundary.node)\n          );\n          changeAccumulator.trackChildChange(\n            changeChildAdded(childKey, childSnap)\n          );\n        }\n        return oldEventCache\n          .updateImmediateChild(childKey, childSnap)\n          .updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\n      } else {\n        return snap;\n      }\n    } else {\n      return snap;\n    }\n  }\n\n  private withinDirectionalStart = (node: NamedNode) =>\n    this.reverse_ ? this.withinEndPost(node) : this.withinStartPost(node);\n\n  private withinDirectionalEnd = (node: NamedNode) =>\n    this.reverse_ ? this.withinStartPost(node) : this.withinEndPost(node);\n\n  private withinStartPost = (node: NamedNode) => {\n    const compareRes = this.index_.compare(\n      this.rangedFilter_.getStartPost(),\n      node\n    );\n    return this.startIsInclusive_ ? compareRes <= 0 : compareRes < 0;\n  };\n\n  private withinEndPost = (node: NamedNode) => {\n    const compareRes = this.index_.compare(\n      node,\n      this.rangedFilter_.getEndPost()\n    );\n    return this.endIsInclusive_ ? compareRes <= 0 : compareRes < 0;\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, stringify } from '@firebase/util';\n\nimport { Index } from '../snap/indexes/Index';\nimport { KEY_INDEX } from '../snap/indexes/KeyIndex';\nimport { PathIndex } from '../snap/indexes/PathIndex';\nimport { PRIORITY_INDEX, PriorityIndex } from '../snap/indexes/PriorityIndex';\nimport { VALUE_INDEX } from '../snap/indexes/ValueIndex';\nimport { MAX_NAME, MIN_NAME } from '../util/util';\n\nimport { IndexedFilter } from './filter/IndexedFilter';\nimport { LimitedFilter } from './filter/LimitedFilter';\nimport { NodeFilter } from './filter/NodeFilter';\nimport { RangedFilter } from './filter/RangedFilter';\n\n/**\n * Wire Protocol Constants\n */\nconst enum WIRE_PROTOCOL_CONSTANTS {\n  INDEX_START_VALUE = 'sp',\n  INDEX_START_NAME = 'sn',\n  INDEX_START_IS_INCLUSIVE = 'sin',\n  INDEX_END_VALUE = 'ep',\n  INDEX_END_NAME = 'en',\n  INDEX_END_IS_INCLUSIVE = 'ein',\n  LIMIT = 'l',\n  VIEW_FROM = 'vf',\n  VIEW_FROM_LEFT = 'l',\n  VIEW_FROM_RIGHT = 'r',\n  INDEX = 'i'\n}\n\n/**\n * REST Query Constants\n */\nconst enum REST_QUERY_CONSTANTS {\n  ORDER_BY = 'orderBy',\n  PRIORITY_INDEX = '$priority',\n  VALUE_INDEX = '$value',\n  KEY_INDEX = '$key',\n  START_AFTER = 'startAfter',\n  START_AT = 'startAt',\n  END_AT = 'endAt',\n  END_BEFORE = 'endBefore',\n  LIMIT_TO_FIRST = 'limitToFirst',\n  LIMIT_TO_LAST = 'limitToLast'\n}\n\n/**\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\n * user-facing API level, so it is not done here.\n *\n * @internal\n */\nexport class QueryParams {\n  limitSet_ = false;\n  startSet_ = false;\n  startNameSet_ = false;\n  startAfterSet_ = false; // can only be true if startSet_ is true\n  endSet_ = false;\n  endNameSet_ = false;\n  endBeforeSet_ = false; // can only be true if endSet_ is true\n  limit_ = 0;\n  viewFrom_ = '';\n  indexStartValue_: unknown | null = null;\n  indexStartName_ = '';\n  indexEndValue_: unknown | null = null;\n  indexEndName_ = '';\n  index_: PriorityIndex = PRIORITY_INDEX;\n\n  hasStart(): boolean {\n    return this.startSet_;\n  }\n\n  /**\n   * @returns True if it would return from left.\n   */\n  isViewFromLeft(): boolean {\n    if (this.viewFrom_ === '') {\n      // limit(), rather than limitToFirst or limitToLast was called.\n      // This means that only one of startSet_ and endSet_ is true. Use them\n      // to calculate which side of the view to anchor to. If neither is set,\n      // anchor to the end.\n      return this.startSet_;\n    } else {\n      return this.viewFrom_ === WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n    }\n  }\n\n  /**\n   * Only valid to call if hasStart() returns true\n   */\n  getIndexStartValue(): unknown {\n    assert(this.startSet_, 'Only valid if start has been set');\n    return this.indexStartValue_;\n  }\n\n  /**\n   * Only valid to call if hasStart() returns true.\n   * Returns the starting key name for the range defined by these query parameters\n   */\n  getIndexStartName(): string {\n    assert(this.startSet_, 'Only valid if start has been set');\n    if (this.startNameSet_) {\n      return this.indexStartName_;\n    } else {\n      return MIN_NAME;\n    }\n  }\n\n  hasEnd(): boolean {\n    return this.endSet_;\n  }\n\n  /**\n   * Only valid to call if hasEnd() returns true.\n   */\n  getIndexEndValue(): unknown {\n    assert(this.endSet_, 'Only valid if end has been set');\n    return this.indexEndValue_;\n  }\n\n  /**\n   * Only valid to call if hasEnd() returns true.\n   * Returns the end key name for the range defined by these query parameters\n   */\n  getIndexEndName(): string {\n    assert(this.endSet_, 'Only valid if end has been set');\n    if (this.endNameSet_) {\n      return this.indexEndName_;\n    } else {\n      return MAX_NAME;\n    }\n  }\n\n  hasLimit(): boolean {\n    return this.limitSet_;\n  }\n\n  /**\n   * @returns True if a limit has been set and it has been explicitly anchored\n   */\n  hasAnchoredLimit(): boolean {\n    return this.limitSet_ && this.viewFrom_ !== '';\n  }\n\n  /**\n   * Only valid to call if hasLimit() returns true\n   */\n  getLimit(): number {\n    assert(this.limitSet_, 'Only valid if limit has been set');\n    return this.limit_;\n  }\n\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  loadsAllData(): boolean {\n    return !(this.startSet_ || this.endSet_ || this.limitSet_);\n  }\n\n  isDefault(): boolean {\n    return this.loadsAllData() && this.index_ === PRIORITY_INDEX;\n  }\n\n  copy(): QueryParams {\n    const copy = new QueryParams();\n    copy.limitSet_ = this.limitSet_;\n    copy.limit_ = this.limit_;\n    copy.startSet_ = this.startSet_;\n    copy.startAfterSet_ = this.startAfterSet_;\n    copy.indexStartValue_ = this.indexStartValue_;\n    copy.startNameSet_ = this.startNameSet_;\n    copy.indexStartName_ = this.indexStartName_;\n    copy.endSet_ = this.endSet_;\n    copy.endBeforeSet_ = this.endBeforeSet_;\n    copy.indexEndValue_ = this.indexEndValue_;\n    copy.endNameSet_ = this.endNameSet_;\n    copy.indexEndName_ = this.indexEndName_;\n    copy.index_ = this.index_;\n    copy.viewFrom_ = this.viewFrom_;\n    return copy;\n  }\n}\n\nexport function queryParamsGetNodeFilter(queryParams: QueryParams): NodeFilter {\n  if (queryParams.loadsAllData()) {\n    return new IndexedFilter(queryParams.getIndex());\n  } else if (queryParams.hasLimit()) {\n    return new LimitedFilter(queryParams);\n  } else {\n    return new RangedFilter(queryParams);\n  }\n}\n\nexport function queryParamsLimit(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = '';\n  return newParams;\n}\n\nexport function queryParamsLimitToFirst(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n  return newParams;\n}\n\nexport function queryParamsLimitToLast(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\n  return newParams;\n}\n\nexport function queryParamsStartAt(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.startSet_ = true;\n  if (indexValue === undefined) {\n    indexValue = null;\n  }\n  newParams.indexStartValue_ = indexValue;\n  if (key != null) {\n    newParams.startNameSet_ = true;\n    newParams.indexStartName_ = key;\n  } else {\n    newParams.startNameSet_ = false;\n    newParams.indexStartName_ = '';\n  }\n  return newParams;\n}\n\nexport function queryParamsStartAfter(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  let params: QueryParams;\n  if (queryParams.index_ === KEY_INDEX || !!key) {\n    params = queryParamsStartAt(queryParams, indexValue, key);\n  } else {\n    params = queryParamsStartAt(queryParams, indexValue, MAX_NAME);\n  }\n  params.startAfterSet_ = true;\n  return params;\n}\n\nexport function queryParamsEndAt(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.endSet_ = true;\n  if (indexValue === undefined) {\n    indexValue = null;\n  }\n  newParams.indexEndValue_ = indexValue;\n  if (key !== undefined) {\n    newParams.endNameSet_ = true;\n    newParams.indexEndName_ = key;\n  } else {\n    newParams.endNameSet_ = false;\n    newParams.indexEndName_ = '';\n  }\n  return newParams;\n}\n\nexport function queryParamsEndBefore(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  let params: QueryParams;\n  if (queryParams.index_ === KEY_INDEX || !!key) {\n    params = queryParamsEndAt(queryParams, indexValue, key);\n  } else {\n    params = queryParamsEndAt(queryParams, indexValue, MIN_NAME);\n  }\n  params.endBeforeSet_ = true;\n  return params;\n}\n\nexport function queryParamsOrderBy(\n  queryParams: QueryParams,\n  index: Index\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.index_ = index;\n  return newParams;\n}\n\n/**\n * Returns a set of REST query string parameters representing this query.\n *\n * @returns query string parameters\n */\nexport function queryParamsToRestQueryStringParameters(\n  queryParams: QueryParams\n): Record<string, string | number> {\n  const qs: Record<string, string | number> = {};\n\n  if (queryParams.isDefault()) {\n    return qs;\n  }\n\n  let orderBy;\n  if (queryParams.index_ === PRIORITY_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.PRIORITY_INDEX;\n  } else if (queryParams.index_ === VALUE_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.VALUE_INDEX;\n  } else if (queryParams.index_ === KEY_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.KEY_INDEX;\n  } else {\n    assert(queryParams.index_ instanceof PathIndex, 'Unrecognized index type!');\n    orderBy = queryParams.index_.toString();\n  }\n  qs[REST_QUERY_CONSTANTS.ORDER_BY] = stringify(orderBy);\n\n  if (queryParams.startSet_) {\n    const startParam = queryParams.startAfterSet_\n      ? REST_QUERY_CONSTANTS.START_AFTER\n      : REST_QUERY_CONSTANTS.START_AT;\n    qs[startParam] = stringify(queryParams.indexStartValue_);\n    if (queryParams.startNameSet_) {\n      qs[startParam] += ',' + stringify(queryParams.indexStartName_);\n    }\n  }\n\n  if (queryParams.endSet_) {\n    const endParam = queryParams.endBeforeSet_\n      ? REST_QUERY_CONSTANTS.END_BEFORE\n      : REST_QUERY_CONSTANTS.END_AT;\n    qs[endParam] = stringify(queryParams.indexEndValue_);\n    if (queryParams.endNameSet_) {\n      qs[endParam] += ',' + stringify(queryParams.indexEndName_);\n    }\n  }\n\n  if (queryParams.limitSet_) {\n    if (queryParams.isViewFromLeft()) {\n      qs[REST_QUERY_CONSTANTS.LIMIT_TO_FIRST] = queryParams.limit_;\n    } else {\n      qs[REST_QUERY_CONSTANTS.LIMIT_TO_LAST] = queryParams.limit_;\n    }\n  }\n\n  return qs;\n}\n\nexport function queryParamsGetQueryObject(\n  queryParams: QueryParams\n): Record<string, unknown> {\n  const obj: Record<string, unknown> = {};\n  if (queryParams.startSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE] =\n      queryParams.indexStartValue_;\n    if (queryParams.startNameSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME] =\n        queryParams.indexStartName_;\n    }\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_IS_INCLUSIVE] =\n      !queryParams.startAfterSet_;\n  }\n  if (queryParams.endSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE] = queryParams.indexEndValue_;\n    if (queryParams.endNameSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME] = queryParams.indexEndName_;\n    }\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_IS_INCLUSIVE] =\n      !queryParams.endBeforeSet_;\n  }\n  if (queryParams.limitSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.LIMIT] = queryParams.limit_;\n    let viewFrom = queryParams.viewFrom_;\n    if (viewFrom === '') {\n      if (queryParams.isViewFromLeft()) {\n        viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n      } else {\n        viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\n      }\n    }\n    obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM] = viewFrom;\n  }\n  // For now, priority index is the default, so we only specify if it's some other index\n  if (queryParams.index_ !== PRIORITY_INDEX) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX] = queryParams.index_.toString();\n  }\n  return obj;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  jsonEval,\n  safeGet,\n  querystring,\n  Deferred\n} from '@firebase/util';\n\nimport { AppCheckTokenProvider } from './AppCheckTokenProvider';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { logWrapper, warn } from './util/util';\nimport { QueryContext } from './view/EventRegistration';\nimport { queryParamsToRestQueryStringParameters } from './view/QueryParams';\n\n/**\n * An implementation of ServerActions that communicates with the server via REST requests.\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\n * persistent connection (using WebSockets or long-polling)\n */\nexport class ReadonlyRestClient extends ServerActions {\n  reportStats(stats: { [k: string]: unknown }): void {\n    throw new Error('Method not implemented.');\n  }\n\n  /** @private {function(...[*])} */\n  private log_: (...args: unknown[]) => void = logWrapper('p:rest:');\n\n  /**\n   * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\n   * that's been removed. :-/\n   */\n  private listens_: { [k: string]: object } = {};\n\n  static getListenId_(query: QueryContext, tag?: number | null): string {\n    if (tag !== undefined) {\n      return 'tag$' + tag;\n    } else {\n      assert(\n        query._queryParams.isDefault(),\n        \"should have a tag if it's not a default query.\"\n      );\n      return query._path.toString();\n    }\n  }\n\n  /**\n   * @param repoInfo_ - Data about the namespace we are connecting to\n   * @param onDataUpdate_ - A callback for new data from the server\n   */\n  constructor(\n    private repoInfo_: RepoInfo,\n    private onDataUpdate_: (\n      a: string,\n      b: unknown,\n      c: boolean,\n      d: number | null\n    ) => void,\n    private authTokenProvider_: AuthTokenProvider,\n    private appCheckTokenProvider_: AppCheckTokenProvider\n  ) {\n    super();\n  }\n\n  /** @inheritDoc */\n  listen(\n    query: QueryContext,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ) {\n    const pathString = query._path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + query._queryIdentifier);\n\n    // Mark this listener so we can tell if it's removed.\n    const listenId = ReadonlyRestClient.getListenId_(query, tag);\n    const thisListen = {};\n    this.listens_[listenId] = thisListen;\n\n    const queryStringParameters = queryParamsToRestQueryStringParameters(\n      query._queryParams\n    );\n\n    this.restRequest_(\n      pathString + '.json',\n      queryStringParameters,\n      (error, result) => {\n        let data = result;\n\n        if (error === 404) {\n          data = null;\n          error = null;\n        }\n\n        if (error === null) {\n          this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\n        }\n\n        if (safeGet(this.listens_, listenId) === thisListen) {\n          let status;\n          if (!error) {\n            status = 'ok';\n          } else if (error === 401) {\n            status = 'permission_denied';\n          } else {\n            status = 'rest_error:' + error;\n          }\n\n          onComplete(status, null);\n        }\n      }\n    );\n  }\n\n  /** @inheritDoc */\n  unlisten(query: QueryContext, tag: number | null) {\n    const listenId = ReadonlyRestClient.getListenId_(query, tag);\n    delete this.listens_[listenId];\n  }\n\n  get(query: QueryContext): Promise<string> {\n    const queryStringParameters = queryParamsToRestQueryStringParameters(\n      query._queryParams\n    );\n\n    const pathString = query._path.toString();\n\n    const deferred = new Deferred<string>();\n\n    this.restRequest_(\n      pathString + '.json',\n      queryStringParameters,\n      (error, result) => {\n        let data = result;\n\n        if (error === 404) {\n          data = null;\n          error = null;\n        }\n\n        if (error === null) {\n          this.onDataUpdate_(\n            pathString,\n            data,\n            /*isMerge=*/ false,\n            /*tag=*/ null\n          );\n          deferred.resolve(data as string);\n        } else {\n          deferred.reject(new Error(data as string));\n        }\n      }\n    );\n    return deferred.promise;\n  }\n\n  /** @inheritDoc */\n  refreshAuthToken(token: string) {\n    // no-op since we just always call getToken.\n  }\n\n  /**\n   * Performs a REST request to the given path, with the provided query string parameters,\n   * and any auth credentials we have.\n   */\n  private restRequest_(\n    pathString: string,\n    queryStringParameters: { [k: string]: string | number } = {},\n    callback: ((a: number | null, b?: unknown) => void) | null\n  ) {\n    queryStringParameters['format'] = 'export';\n\n    return Promise.all([\n      this.authTokenProvider_.getToken(/*forceRefresh=*/ false),\n      this.appCheckTokenProvider_.getToken(/*forceRefresh=*/ false)\n    ]).then(([authToken, appCheckToken]) => {\n      if (authToken && authToken.accessToken) {\n        queryStringParameters['auth'] = authToken.accessToken;\n      }\n      if (appCheckToken && appCheckToken.token) {\n        queryStringParameters['ac'] = appCheckToken.token;\n      }\n\n      const url =\n        (this.repoInfo_.secure ? 'https://' : 'http://') +\n        this.repoInfo_.host +\n        pathString +\n        '?' +\n        'ns=' +\n        this.repoInfo_.namespace +\n        querystring(queryStringParameters);\n\n      this.log_('Sending REST request for ' + url);\n      const xhr = new XMLHttpRequest();\n      xhr.onreadystatechange = () => {\n        if (callback && xhr.readyState === 4) {\n          this.log_(\n            'REST Response for ' + url + ' received. status:',\n            xhr.status,\n            'response:',\n            xhr.responseText\n          );\n          let res = null;\n          if (xhr.status >= 200 && xhr.status < 300) {\n            try {\n              res = jsonEval(xhr.responseText);\n            } catch (e) {\n              warn(\n                'Failed to parse JSON response for ' +\n                  url +\n                  ': ' +\n                  xhr.responseText\n              );\n            }\n            callback(null, res);\n          } else {\n            // 401 and 404 are expected.\n            if (xhr.status !== 401 && xhr.status !== 404) {\n              warn(\n                'Got unsuccessful REST response for ' +\n                  url +\n                  ' Status: ' +\n                  xhr.status\n              );\n            }\n            callback(xhr.status);\n          }\n          callback = null;\n        }\n      };\n\n      xhr.open('GET', url, /*asynchronous=*/ true);\n      xhr.send();\n    });\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { Node } from './snap/Node';\nimport { Path, pathGetFront, pathIsEmpty, pathPopFront } from './util/Path';\n\n/**\n * Helper class to store a sparse set of snapshots.\n */\nexport interface SparseSnapshotTree {\n  value: Node | null;\n  readonly children: Map<string, SparseSnapshotTree>;\n}\n\nexport function newSparseSnapshotTree(): SparseSnapshotTree {\n  return {\n    value: null,\n    children: new Map()\n  };\n}\n\n/**\n * Gets the node stored at the given path if one exists.\n * Only seems to be used in tests.\n *\n * @param path - Path to look up snapshot for.\n * @returns The retrieved node, or null.\n */\nexport function sparseSnapshotTreeFind(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path\n): Node | null {\n  if (sparseSnapshotTree.value != null) {\n    return sparseSnapshotTree.value.getChild(path);\n  } else if (!pathIsEmpty(path) && sparseSnapshotTree.children.size > 0) {\n    const childKey = pathGetFront(path);\n    path = pathPopFront(path);\n    if (sparseSnapshotTree.children.has(childKey)) {\n      const childTree = sparseSnapshotTree.children.get(childKey);\n      return sparseSnapshotTreeFind(childTree, path);\n    } else {\n      return null;\n    }\n  } else {\n    return null;\n  }\n}\n\n/**\n * Stores the given node at the specified path. If there is already a node\n * at a shallower path, it merges the new data into that snapshot node.\n *\n * @param path - Path to look up snapshot for.\n * @param data - The new data, or null.\n */\nexport function sparseSnapshotTreeRemember(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path,\n  data: Node\n): void {\n  if (pathIsEmpty(path)) {\n    sparseSnapshotTree.value = data;\n    sparseSnapshotTree.children.clear();\n  } else if (sparseSnapshotTree.value !== null) {\n    sparseSnapshotTree.value = sparseSnapshotTree.value.updateChild(path, data);\n  } else {\n    const childKey = pathGetFront(path);\n    if (!sparseSnapshotTree.children.has(childKey)) {\n      sparseSnapshotTree.children.set(childKey, newSparseSnapshotTree());\n    }\n\n    const child = sparseSnapshotTree.children.get(childKey);\n    path = pathPopFront(path);\n    sparseSnapshotTreeRemember(child, path, data);\n  }\n}\n\n/**\n * Purge the data at path from the cache.\n *\n * @param path - Path to look up snapshot for.\n * @returns True if this node should now be removed.\n */\nexport function sparseSnapshotTreeForget(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path\n): boolean {\n  if (pathIsEmpty(path)) {\n    sparseSnapshotTree.value = null;\n    sparseSnapshotTree.children.clear();\n    return true;\n  } else {\n    if (sparseSnapshotTree.value !== null) {\n      if (sparseSnapshotTree.value.isLeafNode()) {\n        // We're trying to forget a node that doesn't exist\n        return false;\n      } else {\n        const value = sparseSnapshotTree.value;\n        sparseSnapshotTree.value = null;\n\n        value.forEachChild(PRIORITY_INDEX, (key, tree) => {\n          sparseSnapshotTreeRemember(sparseSnapshotTree, new Path(key), tree);\n        });\n\n        return sparseSnapshotTreeForget(sparseSnapshotTree, path);\n      }\n    } else if (sparseSnapshotTree.children.size > 0) {\n      const childKey = pathGetFront(path);\n      path = pathPopFront(path);\n      if (sparseSnapshotTree.children.has(childKey)) {\n        const safeToRemove = sparseSnapshotTreeForget(\n          sparseSnapshotTree.children.get(childKey),\n          path\n        );\n        if (safeToRemove) {\n          sparseSnapshotTree.children.delete(childKey);\n        }\n      }\n\n      return sparseSnapshotTree.children.size === 0;\n    } else {\n      return true;\n    }\n  }\n}\n\n/**\n * Recursively iterates through all of the stored tree and calls the\n * callback on each one.\n *\n * @param prefixPath - Path to look up node for.\n * @param func - The function to invoke for each tree.\n */\nexport function sparseSnapshotTreeForEachTree(\n  sparseSnapshotTree: SparseSnapshotTree,\n  prefixPath: Path,\n  func: (a: Path, b: Node) => unknown\n): void {\n  if (sparseSnapshotTree.value !== null) {\n    func(prefixPath, sparseSnapshotTree.value);\n  } else {\n    sparseSnapshotTreeForEachChild(sparseSnapshotTree, (key, tree) => {\n      const path = new Path(prefixPath.toString() + '/' + key);\n      sparseSnapshotTreeForEachTree(tree, path, func);\n    });\n  }\n}\n\n/**\n * Iterates through each immediate child and triggers the callback.\n * Only seems to be used in tests.\n *\n * @param func - The function to invoke for each child.\n */\nexport function sparseSnapshotTreeForEachChild(\n  sparseSnapshotTree: SparseSnapshotTree,\n  func: (a: string, b: SparseSnapshotTree) => void\n): void {\n  sparseSnapshotTree.children.forEach((tree, key) => {\n    func(key, tree);\n  });\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { Path } from './util/Path';\n\n/**\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\n */\nexport class SnapshotHolder {\n  private rootNode_: Node = ChildrenNode.EMPTY_NODE;\n\n  getNode(path: Path): Node {\n    return this.rootNode_.getChild(path);\n  }\n\n  updateSnapshot(path: Path, newSnapshotNode: Node) {\n    this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { each } from '../util/util';\n\nimport { StatsCollection } from './StatsCollection';\n\n/**\n * Returns the delta from the previous call to get stats.\n *\n * @param collection_ - The collection to \"listen\" to.\n */\nexport class StatsListener {\n  private last_: { [k: string]: number } | null = null;\n\n  constructor(private collection_: StatsCollection) {}\n\n  get(): { [k: string]: number } {\n    const newStats = this.collection_.get();\n\n    const delta = { ...newStats };\n    if (this.last_) {\n      each(this.last_, (stat: string, value: number) => {\n        delta[stat] = delta[stat] - value;\n      });\n    }\n    this.last_ = newStats;\n\n    return delta;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains } from '@firebase/util';\n\nimport { ServerActions } from '../ServerActions';\nimport { setTimeoutNonBlocking, each } from '../util/util';\n\nimport { StatsCollection } from './StatsCollection';\nimport { StatsListener } from './StatsListener';\n\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\n// seconds to try to ensure the Firebase connection is established / settled.\nconst FIRST_STATS_MIN_TIME = 10 * 1000;\nconst FIRST_STATS_MAX_TIME = 30 * 1000;\n\n// We'll continue to report stats on average every 5 minutes.\nconst REPORT_STATS_INTERVAL = 5 * 60 * 1000;\n\nexport class StatsReporter {\n  private statsListener_: StatsListener;\n  statsToReport_: { [k: string]: boolean } = {};\n\n  constructor(collection: StatsCollection, private server_: ServerActions) {\n    this.statsListener_ = new StatsListener(collection);\n\n    const timeout =\n      FIRST_STATS_MIN_TIME +\n      (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\n    setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\n  }\n\n  private reportStats_() {\n    const stats = this.statsListener_.get();\n    const reportedStats: typeof stats = {};\n    let haveStatsToReport = false;\n\n    each(stats, (stat: string, value: number) => {\n      if (value > 0 && contains(this.statsToReport_, stat)) {\n        reportedStats[stat] = value;\n        haveStatsToReport = true;\n      }\n    });\n\n    if (haveStatsToReport) {\n      this.server_.reportStats(reportedStats);\n    }\n\n    // queue our next run.\n    setTimeoutNonBlocking(\n      this.reportStats_.bind(this),\n      Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL)\n    );\n  }\n}\n\nexport function statsReporterIncludeStat(\n  reporter: StatsReporter,\n  stat: string\n) {\n  reporter.statsToReport_[stat] = true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path } from '../util/Path';\n\n/**\n *\n * @enum\n */\nexport enum OperationType {\n  OVERWRITE,\n  MERGE,\n  ACK_USER_WRITE,\n  LISTEN_COMPLETE\n}\n\n/**\n * @interface\n */\nexport interface Operation {\n  source: OperationSource;\n\n  type: OperationType;\n\n  path: Path;\n\n  operationForChild(childName: string): Operation | null;\n}\n\nexport interface OperationSource {\n  fromUser: boolean;\n  fromServer: boolean;\n  queryId: string | null;\n  tagged: boolean;\n}\n\nexport function newOperationSourceUser(): OperationSource {\n  return {\n    fromUser: true,\n    fromServer: false,\n    queryId: null,\n    tagged: false\n  };\n}\n\nexport function newOperationSourceServer(): OperationSource {\n  return {\n    fromUser: false,\n    fromServer: true,\n    queryId: null,\n    tagged: false\n  };\n}\n\nexport function newOperationSourceServerTaggedQuery(\n  queryId: string\n): OperationSource {\n  return {\n    fromUser: false,\n    fromServer: true,\n    queryId,\n    tagged: true\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { newEmptyPath, Path, pathIsEmpty, pathPopFront } from '../util/Path';\n\nimport { Operation, OperationSource, OperationType } from './Operation';\n\nexport class ListenComplete implements Operation {\n  /** @inheritDoc */\n  type = OperationType.LISTEN_COMPLETE;\n\n  constructor(public source: OperationSource, public path: Path) {}\n\n  operationForChild(childName: string): ListenComplete {\n    if (pathIsEmpty(this.path)) {\n      return new ListenComplete(this.source, newEmptyPath());\n    } else {\n      return new ListenComplete(this.source, pathPopFront(this.path));\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\nimport { newEmptyPath, Path, pathIsEmpty, pathPopFront } from '../util/Path';\n\nimport { Operation, OperationSource, OperationType } from './Operation';\n\nexport class Overwrite implements Operation {\n  /** @inheritDoc */\n  type = OperationType.OVERWRITE;\n\n  constructor(\n    public source: OperationSource,\n    public path: Path,\n    public snap: Node\n  ) {}\n\n  operationForChild(childName: string): Overwrite {\n    if (pathIsEmpty(this.path)) {\n      return new Overwrite(\n        this.source,\n        newEmptyPath(),\n        this.snap.getImmediateChild(childName)\n      );\n    } else {\n      return new Overwrite(this.source, pathPopFront(this.path), this.snap);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Node } from '../snap/Node';\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport {\n  newEmptyPath,\n  Path,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from '../util/Path';\n\nimport { Operation, OperationSource, OperationType } from './Operation';\nimport { Overwrite } from './Overwrite';\n\nexport class Merge implements Operation {\n  /** @inheritDoc */\n  type = OperationType.MERGE;\n\n  constructor(\n    /** @inheritDoc */ public source: OperationSource,\n    /** @inheritDoc */ public path: Path,\n    /** @inheritDoc */ public children: ImmutableTree<Node>\n  ) {}\n  operationForChild(childName: string): Operation {\n    if (pathIsEmpty(this.path)) {\n      const childTree = this.children.subtree(new Path(childName));\n      if (childTree.isEmpty()) {\n        // This child is unaffected\n        return null;\n      } else if (childTree.value) {\n        // We have a snapshot for the child in question.  This becomes an overwrite of the child.\n        return new Overwrite(this.source, newEmptyPath(), childTree.value);\n      } else {\n        // This is a merge at a deeper level\n        return new Merge(this.source, newEmptyPath(), childTree);\n      }\n    } else {\n      assert(\n        pathGetFront(this.path) === childName,\n        \"Can't get a merge for a child not on the path of the operation\"\n      );\n      return new Merge(this.source, pathPopFront(this.path), this.children);\n    }\n  }\n  toString(): string {\n    return (\n      'Operation(' +\n      this.path +\n      ': ' +\n      this.source.toString() +\n      ' merge: ' +\n      this.children.toString() +\n      ')'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\nimport { Path, pathGetFront, pathIsEmpty } from '../util/Path';\n\n/**\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\n * whether a node potentially had children removed due to a filter.\n */\nexport class CacheNode {\n  constructor(\n    private node_: Node,\n    private fullyInitialized_: boolean,\n    private filtered_: boolean\n  ) {}\n\n  /**\n   * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\n   */\n  isFullyInitialized(): boolean {\n    return this.fullyInitialized_;\n  }\n\n  /**\n   * Returns whether this node is potentially missing children due to a filter applied to the node\n   */\n  isFiltered(): boolean {\n    return this.filtered_;\n  }\n\n  isCompleteForPath(path: Path): boolean {\n    if (pathIsEmpty(path)) {\n      return this.isFullyInitialized() && !this.filtered_;\n    }\n\n    const childKey = pathGetFront(path);\n    return this.isCompleteForChild(childKey);\n  }\n\n  isCompleteForChild(key: string): boolean {\n    return (\n      (this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key)\n    );\n  }\n\n  getNode(): Node {\n    return this.node_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assertionError } from '@firebase/util';\n\nimport { Index } from '../snap/indexes/Index';\nimport { NamedNode, Node } from '../snap/Node';\n\nimport { Change, ChangeType, changeChildMoved } from './Change';\nimport { Event } from './Event';\nimport { EventRegistration, QueryContext } from './EventRegistration';\n\n/**\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\n * for details.\n *\n */\nexport class EventGenerator {\n  index_: Index;\n\n  constructor(public query_: QueryContext) {\n    this.index_ = this.query_._queryParams.getIndex();\n  }\n}\n\n/**\n * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\n * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\n *\n * Notes:\n *  - child_moved events will be synthesized at this time for any child_changed events that affect\n *    our index.\n *  - prevName will be calculated based on the index ordering.\n */\nexport function eventGeneratorGenerateEventsForChanges(\n  eventGenerator: EventGenerator,\n  changes: Change[],\n  eventCache: Node,\n  eventRegistrations: EventRegistration[]\n): Event[] {\n  const events: Event[] = [];\n  const moves: Change[] = [];\n\n  changes.forEach(change => {\n    if (\n      change.type === ChangeType.CHILD_CHANGED &&\n      eventGenerator.index_.indexedValueChanged(\n        change.oldSnap as Node,\n        change.snapshotNode\n      )\n    ) {\n      moves.push(changeChildMoved(change.childName, change.snapshotNode));\n    }\n  });\n\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_REMOVED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_ADDED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_MOVED,\n    moves,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_CHANGED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.VALUE,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n\n  return events;\n}\n\n/**\n * Given changes of a single change type, generate the corresponding events.\n */\nfunction eventGeneratorGenerateEventsForType(\n  eventGenerator: EventGenerator,\n  events: Event[],\n  eventType: string,\n  changes: Change[],\n  registrations: EventRegistration[],\n  eventCache: Node\n) {\n  const filteredChanges = changes.filter(change => change.type === eventType);\n\n  filteredChanges.sort((a, b) =>\n    eventGeneratorCompareChanges(eventGenerator, a, b)\n  );\n  filteredChanges.forEach(change => {\n    const materializedChange = eventGeneratorMaterializeSingleChange(\n      eventGenerator,\n      change,\n      eventCache\n    );\n    registrations.forEach(registration => {\n      if (registration.respondsTo(change.type)) {\n        events.push(\n          registration.createEvent(materializedChange, eventGenerator.query_)\n        );\n      }\n    });\n  });\n}\n\nfunction eventGeneratorMaterializeSingleChange(\n  eventGenerator: EventGenerator,\n  change: Change,\n  eventCache: Node\n): Change {\n  if (change.type === 'value' || change.type === 'child_removed') {\n    return change;\n  } else {\n    change.prevName = eventCache.getPredecessorChildName(\n      change.childName,\n      change.snapshotNode,\n      eventGenerator.index_\n    );\n    return change;\n  }\n}\n\nfunction eventGeneratorCompareChanges(\n  eventGenerator: EventGenerator,\n  a: Change,\n  b: Change\n) {\n  if (a.childName == null || b.childName == null) {\n    throw assertionError('Should only compare child_ events.');\n  }\n  const aWrapped = new NamedNode(a.childName, a.snapshotNode);\n  const bWrapped = new NamedNode(b.childName, b.snapshotNode);\n  return eventGenerator.index_.compare(aWrapped, bWrapped);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\n\nimport { CacheNode } from './CacheNode';\n\n/**\n * Stores the data we have cached for a view.\n *\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\n */\nexport interface ViewCache {\n  readonly eventCache: CacheNode;\n  readonly serverCache: CacheNode;\n}\n\nexport function newViewCache(\n  eventCache: CacheNode,\n  serverCache: CacheNode\n): ViewCache {\n  return { eventCache, serverCache };\n}\n\nexport function viewCacheUpdateEventSnap(\n  viewCache: ViewCache,\n  eventSnap: Node,\n  complete: boolean,\n  filtered: boolean\n): ViewCache {\n  return newViewCache(\n    new CacheNode(eventSnap, complete, filtered),\n    viewCache.serverCache\n  );\n}\n\nexport function viewCacheUpdateServerSnap(\n  viewCache: ViewCache,\n  serverSnap: Node,\n  complete: boolean,\n  filtered: boolean\n): ViewCache {\n  return newViewCache(\n    viewCache.eventCache,\n    new CacheNode(serverSnap, complete, filtered)\n  );\n}\n\nexport function viewCacheGetCompleteEventSnap(\n  viewCache: ViewCache\n): Node | null {\n  return viewCache.eventCache.isFullyInitialized()\n    ? viewCache.eventCache.getNode()\n    : null;\n}\n\nexport function viewCacheGetCompleteServerSnap(\n  viewCache: ViewCache\n): Node | null {\n  return viewCache.serverCache.isFullyInitialized()\n    ? viewCache.serverCache.getNode()\n    : null;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  newEmptyPath,\n  Path,\n  pathChild,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from './Path';\nimport { SortedMap } from './SortedMap';\nimport { each, stringCompare } from './util';\n\nlet emptyChildrenSingleton: SortedMap<string, ImmutableTree<null>>;\n\n/**\n * Singleton empty children collection.\n *\n */\nconst EmptyChildren = (): SortedMap<string, ImmutableTree<null>> => {\n  if (!emptyChildrenSingleton) {\n    emptyChildrenSingleton = new SortedMap<string, ImmutableTree<null>>(\n      stringCompare\n    );\n  }\n  return emptyChildrenSingleton;\n};\n\n/**\n * A tree with immutable elements.\n */\nexport class ImmutableTree<T> {\n  static fromObject<T>(obj: { [k: string]: T }): ImmutableTree<T> {\n    let tree: ImmutableTree<T> = new ImmutableTree<T>(null);\n    each(obj, (childPath: string, childSnap: T) => {\n      tree = tree.set(new Path(childPath), childSnap);\n    });\n    return tree;\n  }\n\n  constructor(\n    public readonly value: T | null,\n    public readonly children: SortedMap<\n      string,\n      ImmutableTree<T>\n    > = EmptyChildren()\n  ) {}\n\n  /**\n   * True if the value is empty and there are no children\n   */\n  isEmpty(): boolean {\n    return this.value === null && this.children.isEmpty();\n  }\n\n  /**\n   * Given a path and predicate, return the first node and the path to that node\n   * where the predicate returns true.\n   *\n   * TODO Do a perf test -- If we're creating a bunch of `{path: value:}`\n   * objects on the way back out, it may be better to pass down a pathSoFar obj.\n   *\n   * @param relativePath - The remainder of the path\n   * @param predicate - The predicate to satisfy to return a node\n   */\n  findRootMostMatchingPathAndValue(\n    relativePath: Path,\n    predicate: (a: T) => boolean\n  ): { path: Path; value: T } | null {\n    if (this.value != null && predicate(this.value)) {\n      return { path: newEmptyPath(), value: this.value };\n    } else {\n      if (pathIsEmpty(relativePath)) {\n        return null;\n      } else {\n        const front = pathGetFront(relativePath);\n        const child = this.children.get(front);\n        if (child !== null) {\n          const childExistingPathAndValue =\n            child.findRootMostMatchingPathAndValue(\n              pathPopFront(relativePath),\n              predicate\n            );\n          if (childExistingPathAndValue != null) {\n            const fullPath = pathChild(\n              new Path(front),\n              childExistingPathAndValue.path\n            );\n            return { path: fullPath, value: childExistingPathAndValue.value };\n          } else {\n            return null;\n          }\n        } else {\n          return null;\n        }\n      }\n    }\n  }\n\n  /**\n   * Find, if it exists, the shortest subpath of the given path that points a defined\n   * value in the tree\n   */\n  findRootMostValueAndPath(\n    relativePath: Path\n  ): { path: Path; value: T } | null {\n    return this.findRootMostMatchingPathAndValue(relativePath, () => true);\n  }\n\n  /**\n   * @returns The subtree at the given path\n   */\n  subtree(relativePath: Path): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return this;\n    } else {\n      const front = pathGetFront(relativePath);\n      const childTree = this.children.get(front);\n      if (childTree !== null) {\n        return childTree.subtree(pathPopFront(relativePath));\n      } else {\n        return new ImmutableTree<T>(null);\n      }\n    }\n  }\n\n  /**\n   * Sets a value at the specified path.\n   *\n   * @param relativePath - Path to set value at.\n   * @param toSet - Value to set.\n   * @returns Resulting tree.\n   */\n  set(relativePath: Path, toSet: T | null): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return new ImmutableTree(toSet, this.children);\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front) || new ImmutableTree<T>(null);\n      const newChild = child.set(pathPopFront(relativePath), toSet);\n      const newChildren = this.children.insert(front, newChild);\n      return new ImmutableTree(this.value, newChildren);\n    }\n  }\n\n  /**\n   * Removes the value at the specified path.\n   *\n   * @param relativePath - Path to value to remove.\n   * @returns Resulting tree.\n   */\n  remove(relativePath: Path): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      if (this.children.isEmpty()) {\n        return new ImmutableTree<T>(null);\n      } else {\n        return new ImmutableTree(null, this.children);\n      }\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front);\n      if (child) {\n        const newChild = child.remove(pathPopFront(relativePath));\n        let newChildren;\n        if (newChild.isEmpty()) {\n          newChildren = this.children.remove(front);\n        } else {\n          newChildren = this.children.insert(front, newChild);\n        }\n        if (this.value === null && newChildren.isEmpty()) {\n          return new ImmutableTree<T>(null);\n        } else {\n          return new ImmutableTree(this.value, newChildren);\n        }\n      } else {\n        return this;\n      }\n    }\n  }\n\n  /**\n   * Gets a value from the tree.\n   *\n   * @param relativePath - Path to get value for.\n   * @returns Value at path, or null.\n   */\n  get(relativePath: Path): T | null {\n    if (pathIsEmpty(relativePath)) {\n      return this.value;\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front);\n      if (child) {\n        return child.get(pathPopFront(relativePath));\n      } else {\n        return null;\n      }\n    }\n  }\n\n  /**\n   * Replace the subtree at the specified path with the given new tree.\n   *\n   * @param relativePath - Path to replace subtree for.\n   * @param newTree - New tree.\n   * @returns Resulting tree.\n   */\n  setTree(relativePath: Path, newTree: ImmutableTree<T>): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return newTree;\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front) || new ImmutableTree<T>(null);\n      const newChild = child.setTree(pathPopFront(relativePath), newTree);\n      let newChildren;\n      if (newChild.isEmpty()) {\n        newChildren = this.children.remove(front);\n      } else {\n        newChildren = this.children.insert(front, newChild);\n      }\n      return new ImmutableTree(this.value, newChildren);\n    }\n  }\n\n  /**\n   * Performs a depth first fold on this tree. Transforms a tree into a single\n   * value, given a function that operates on the path to a node, an optional\n   * current value, and a map of child names to folded subtrees\n   */\n  fold<V>(fn: (path: Path, value: T, children: { [k: string]: V }) => V): V {\n    return this.fold_(newEmptyPath(), fn);\n  }\n\n  /**\n   * Recursive helper for public-facing fold() method\n   */\n  private fold_<V>(\n    pathSoFar: Path,\n    fn: (path: Path, value: T | null, children: { [k: string]: V }) => V\n  ): V {\n    const accum: { [k: string]: V } = {};\n    this.children.inorderTraversal(\n      (childKey: string, childTree: ImmutableTree<T>) => {\n        accum[childKey] = childTree.fold_(pathChild(pathSoFar, childKey), fn);\n      }\n    );\n    return fn(pathSoFar, this.value, accum);\n  }\n\n  /**\n   * Find the first matching value on the given path. Return the result of applying f to it.\n   */\n  findOnPath<V>(path: Path, f: (path: Path, value: T) => V | null): V | null {\n    return this.findOnPath_(path, newEmptyPath(), f);\n  }\n\n  private findOnPath_<V>(\n    pathToFollow: Path,\n    pathSoFar: Path,\n    f: (path: Path, value: T) => V | null\n  ): V | null {\n    const result = this.value ? f(pathSoFar, this.value) : false;\n    if (result) {\n      return result;\n    } else {\n      if (pathIsEmpty(pathToFollow)) {\n        return null;\n      } else {\n        const front = pathGetFront(pathToFollow)!;\n        const nextChild = this.children.get(front);\n        if (nextChild) {\n          return nextChild.findOnPath_(\n            pathPopFront(pathToFollow),\n            pathChild(pathSoFar, front),\n            f\n          );\n        } else {\n          return null;\n        }\n      }\n    }\n  }\n\n  foreachOnPath(\n    path: Path,\n    f: (path: Path, value: T) => void\n  ): ImmutableTree<T> {\n    return this.foreachOnPath_(path, newEmptyPath(), f);\n  }\n\n  private foreachOnPath_(\n    pathToFollow: Path,\n    currentRelativePath: Path,\n    f: (path: Path, value: T) => void\n  ): ImmutableTree<T> {\n    if (pathIsEmpty(pathToFollow)) {\n      return this;\n    } else {\n      if (this.value) {\n        f(currentRelativePath, this.value);\n      }\n      const front = pathGetFront(pathToFollow);\n      const nextChild = this.children.get(front);\n      if (nextChild) {\n        return nextChild.foreachOnPath_(\n          pathPopFront(pathToFollow),\n          pathChild(currentRelativePath, front),\n          f\n        );\n      } else {\n        return new ImmutableTree<T>(null);\n      }\n    }\n  }\n\n  /**\n   * Calls the given function for each node in the tree that has a value.\n   *\n   * @param f - A function to be called with the path from the root of the tree to\n   * a node, and the value at that node. Called in depth-first order.\n   */\n  foreach(f: (path: Path, value: T) => void) {\n    this.foreach_(newEmptyPath(), f);\n  }\n\n  private foreach_(\n    currentRelativePath: Path,\n    f: (path: Path, value: T) => void\n  ) {\n    this.children.inorderTraversal((childName, childTree) => {\n      childTree.foreach_(pathChild(currentRelativePath, childName), f);\n    });\n    if (this.value) {\n      f(currentRelativePath, this.value);\n    }\n  }\n\n  foreachChild(f: (name: string, value: T) => void) {\n    this.children.inorderTraversal(\n      (childName: string, childTree: ImmutableTree<T>) => {\n        if (childTree.value) {\n          f(childName, childTree.value);\n        }\n      }\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { NamedNode, Node } from './snap/Node';\nimport { ImmutableTree } from './util/ImmutableTree';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathIsEmpty\n} from './util/Path';\nimport { each } from './util/util';\n\n/**\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\n * to reflect the write added.\n */\nexport class CompoundWrite {\n  constructor(public writeTree_: ImmutableTree<Node>) {}\n\n  static empty(): CompoundWrite {\n    return new CompoundWrite(new ImmutableTree(null));\n  }\n}\n\nexport function compoundWriteAddWrite(\n  compoundWrite: CompoundWrite,\n  path: Path,\n  node: Node\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return new CompoundWrite(new ImmutableTree(node));\n  } else {\n    const rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\n    if (rootmost != null) {\n      const rootMostPath = rootmost.path;\n      let value = rootmost.value;\n      const relativePath = newRelativePath(rootMostPath, path);\n      value = value.updateChild(relativePath, node);\n      return new CompoundWrite(\n        compoundWrite.writeTree_.set(rootMostPath, value)\n      );\n    } else {\n      const subtree = new ImmutableTree(node);\n      const newWriteTree = compoundWrite.writeTree_.setTree(path, subtree);\n      return new CompoundWrite(newWriteTree);\n    }\n  }\n}\n\nexport function compoundWriteAddWrites(\n  compoundWrite: CompoundWrite,\n  path: Path,\n  updates: { [name: string]: Node }\n): CompoundWrite {\n  let newWrite = compoundWrite;\n  each(updates, (childKey: string, node: Node) => {\n    newWrite = compoundWriteAddWrite(newWrite, pathChild(path, childKey), node);\n  });\n  return newWrite;\n}\n\n/**\n * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\n * location, which must be removed by calling this method with that path.\n *\n * @param compoundWrite - The CompoundWrite to remove.\n * @param path - The path at which a write and all deeper writes should be removed\n * @returns The new CompoundWrite with the removed path\n */\nexport function compoundWriteRemoveWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return CompoundWrite.empty();\n  } else {\n    const newWriteTree = compoundWrite.writeTree_.setTree(\n      path,\n      new ImmutableTree<Node>(null)\n    );\n    return new CompoundWrite(newWriteTree);\n  }\n}\n\n/**\n * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\n * considered \"complete\".\n *\n * @param compoundWrite - The CompoundWrite to check.\n * @param path - The path to check for\n * @returns Whether there is a complete write at that path\n */\nexport function compoundWriteHasCompleteWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): boolean {\n  return compoundWriteGetCompleteNode(compoundWrite, path) != null;\n}\n\n/**\n * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\n * writes from deeper paths, but will return child nodes from a more shallow path.\n *\n * @param compoundWrite - The CompoundWrite to get the node from.\n * @param path - The path to get a complete write\n * @returns The node if complete at that path, or null otherwise.\n */\nexport function compoundWriteGetCompleteNode(\n  compoundWrite: CompoundWrite,\n  path: Path\n): Node | null {\n  const rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\n  if (rootmost != null) {\n    return compoundWrite.writeTree_\n      .get(rootmost.path)\n      .getChild(newRelativePath(rootmost.path, path));\n  } else {\n    return null;\n  }\n}\n\n/**\n * Returns all children that are guaranteed to be a complete overwrite.\n *\n * @param compoundWrite - The CompoundWrite to get children from.\n * @returns A list of all complete children.\n */\nexport function compoundWriteGetCompleteChildren(\n  compoundWrite: CompoundWrite\n): NamedNode[] {\n  const children: NamedNode[] = [];\n  const node = compoundWrite.writeTree_.value;\n  if (node != null) {\n    // If it's a leaf node, it has no children; so nothing to do.\n    if (!node.isLeafNode()) {\n      (node as ChildrenNode).forEachChild(\n        PRIORITY_INDEX,\n        (childName, childNode) => {\n          children.push(new NamedNode(childName, childNode));\n        }\n      );\n    }\n  } else {\n    compoundWrite.writeTree_.children.inorderTraversal(\n      (childName, childTree) => {\n        if (childTree.value != null) {\n          children.push(new NamedNode(childName, childTree.value));\n        }\n      }\n    );\n  }\n  return children;\n}\n\nexport function compoundWriteChildCompoundWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return compoundWrite;\n  } else {\n    const shadowingNode = compoundWriteGetCompleteNode(compoundWrite, path);\n    if (shadowingNode != null) {\n      return new CompoundWrite(new ImmutableTree(shadowingNode));\n    } else {\n      return new CompoundWrite(compoundWrite.writeTree_.subtree(path));\n    }\n  }\n}\n\n/**\n * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\n * @returns Whether this CompoundWrite is empty\n */\nexport function compoundWriteIsEmpty(compoundWrite: CompoundWrite): boolean {\n  return compoundWrite.writeTree_.isEmpty();\n}\n\n/**\n * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\n * node\n * @param node - The node to apply this CompoundWrite to\n * @returns The node with all writes applied\n */\nexport function compoundWriteApply(\n  compoundWrite: CompoundWrite,\n  node: Node\n): Node {\n  return applySubtreeWrite(newEmptyPath(), compoundWrite.writeTree_, node);\n}\n\nfunction applySubtreeWrite(\n  relativePath: Path,\n  writeTree: ImmutableTree<Node>,\n  node: Node\n): Node {\n  if (writeTree.value != null) {\n    // Since there a write is always a leaf, we're done here\n    return node.updateChild(relativePath, writeTree.value);\n  } else {\n    let priorityWrite = null;\n    writeTree.children.inorderTraversal((childKey, childTree) => {\n      if (childKey === '.priority') {\n        // Apply priorities at the end so we don't update priorities for either empty nodes or forget\n        // to apply priorities to empty nodes that are later filled\n        assert(\n          childTree.value !== null,\n          'Priority writes must always be leaf nodes'\n        );\n        priorityWrite = childTree.value;\n      } else {\n        node = applySubtreeWrite(\n          pathChild(relativePath, childKey),\n          childTree,\n          node\n        );\n      }\n    });\n    // If there was a priority write, we only apply it if the node is not empty\n    if (!node.getChild(relativePath).isEmpty() && priorityWrite !== null) {\n      node = node.updateChild(\n        pathChild(relativePath, '.priority'),\n        priorityWrite\n      );\n    }\n    return node;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError, safeGet } from '@firebase/util';\n\nimport {\n  CompoundWrite,\n  compoundWriteAddWrite,\n  compoundWriteAddWrites,\n  compoundWriteApply,\n  compoundWriteChildCompoundWrite,\n  compoundWriteGetCompleteChildren,\n  compoundWriteGetCompleteNode,\n  compoundWriteHasCompleteWrite,\n  compoundWriteIsEmpty,\n  compoundWriteRemoveWrite\n} from './CompoundWrite';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Index } from './snap/indexes/Index';\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { NamedNode, Node } from './snap/Node';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathContains,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from './util/Path';\nimport { each } from './util/util';\nimport { CacheNode } from './view/CacheNode';\n\n/**\n * Defines a single user-initiated write operation. May be the result of a set(), transaction(), or update() call. In\n * the case of a set() or transaction, snap wil be non-null.  In the case of an update(), children will be non-null.\n */\nexport interface WriteRecord {\n  writeId: number;\n  path: Path;\n  snap?: Node | null;\n  children?: { [k: string]: Node } | null;\n  visible: boolean;\n}\n\n/**\n * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\n *\n */\nexport function writeTreeChildWrites(\n  writeTree: WriteTree,\n  path: Path\n): WriteTreeRef {\n  return newWriteTreeRef(path, writeTree);\n}\n\n/**\n * Record a new overwrite from user code.\n *\n * @param visible - This is set to false by some transactions. It should be excluded from event caches\n */\nexport function writeTreeAddOverwrite(\n  writeTree: WriteTree,\n  path: Path,\n  snap: Node,\n  writeId: number,\n  visible?: boolean\n) {\n  assert(\n    writeId > writeTree.lastWriteId,\n    'Stacking an older write on top of newer ones'\n  );\n  if (visible === undefined) {\n    visible = true;\n  }\n  writeTree.allWrites.push({\n    path,\n    snap,\n    writeId,\n    visible\n  });\n\n  if (visible) {\n    writeTree.visibleWrites = compoundWriteAddWrite(\n      writeTree.visibleWrites,\n      path,\n      snap\n    );\n  }\n  writeTree.lastWriteId = writeId;\n}\n\n/**\n * Record a new merge from user code.\n */\nexport function writeTreeAddMerge(\n  writeTree: WriteTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  writeId: number\n) {\n  assert(\n    writeId > writeTree.lastWriteId,\n    'Stacking an older merge on top of newer ones'\n  );\n  writeTree.allWrites.push({\n    path,\n    children: changedChildren,\n    writeId,\n    visible: true\n  });\n\n  writeTree.visibleWrites = compoundWriteAddWrites(\n    writeTree.visibleWrites,\n    path,\n    changedChildren\n  );\n  writeTree.lastWriteId = writeId;\n}\n\nexport function writeTreeGetWrite(\n  writeTree: WriteTree,\n  writeId: number\n): WriteRecord | null {\n  for (let i = 0; i < writeTree.allWrites.length; i++) {\n    const record = writeTree.allWrites[i];\n    if (record.writeId === writeId) {\n      return record;\n    }\n  }\n  return null;\n}\n\n/**\n * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\n * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\n *\n * @returns true if the write may have been visible (meaning we'll need to reevaluate / raise\n * events as a result).\n */\nexport function writeTreeRemoveWrite(\n  writeTree: WriteTree,\n  writeId: number\n): boolean {\n  // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\n  // out of order.\n  //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\n  //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\n\n  const idx = writeTree.allWrites.findIndex(s => {\n    return s.writeId === writeId;\n  });\n  assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\n  const writeToRemove = writeTree.allWrites[idx];\n  writeTree.allWrites.splice(idx, 1);\n\n  let removedWriteWasVisible = writeToRemove.visible;\n  let removedWriteOverlapsWithOtherWrites = false;\n\n  let i = writeTree.allWrites.length - 1;\n\n  while (removedWriteWasVisible && i >= 0) {\n    const currentWrite = writeTree.allWrites[i];\n    if (currentWrite.visible) {\n      if (\n        i >= idx &&\n        writeTreeRecordContainsPath_(currentWrite, writeToRemove.path)\n      ) {\n        // The removed write was completely shadowed by a subsequent write.\n        removedWriteWasVisible = false;\n      } else if (pathContains(writeToRemove.path, currentWrite.path)) {\n        // Either we're covering some writes or they're covering part of us (depending on which came first).\n        removedWriteOverlapsWithOtherWrites = true;\n      }\n    }\n    i--;\n  }\n\n  if (!removedWriteWasVisible) {\n    return false;\n  } else if (removedWriteOverlapsWithOtherWrites) {\n    // There's some shadowing going on. Just rebuild the visible writes from scratch.\n    writeTreeResetTree_(writeTree);\n    return true;\n  } else {\n    // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\n    if (writeToRemove.snap) {\n      writeTree.visibleWrites = compoundWriteRemoveWrite(\n        writeTree.visibleWrites,\n        writeToRemove.path\n      );\n    } else {\n      const children = writeToRemove.children;\n      each(children, (childName: string) => {\n        writeTree.visibleWrites = compoundWriteRemoveWrite(\n          writeTree.visibleWrites,\n          pathChild(writeToRemove.path, childName)\n        );\n      });\n    }\n    return true;\n  }\n}\n\nfunction writeTreeRecordContainsPath_(\n  writeRecord: WriteRecord,\n  path: Path\n): boolean {\n  if (writeRecord.snap) {\n    return pathContains(writeRecord.path, path);\n  } else {\n    for (const childName in writeRecord.children) {\n      if (\n        writeRecord.children.hasOwnProperty(childName) &&\n        pathContains(pathChild(writeRecord.path, childName), path)\n      ) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\n/**\n * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\n */\nfunction writeTreeResetTree_(writeTree: WriteTree) {\n  writeTree.visibleWrites = writeTreeLayerTree_(\n    writeTree.allWrites,\n    writeTreeDefaultFilter_,\n    newEmptyPath()\n  );\n  if (writeTree.allWrites.length > 0) {\n    writeTree.lastWriteId =\n      writeTree.allWrites[writeTree.allWrites.length - 1].writeId;\n  } else {\n    writeTree.lastWriteId = -1;\n  }\n}\n\n/**\n * The default filter used when constructing the tree. Keep everything that's visible.\n */\nfunction writeTreeDefaultFilter_(write: WriteRecord) {\n  return write.visible;\n}\n\n/**\n * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\n * event data at that path.\n */\nfunction writeTreeLayerTree_(\n  writes: WriteRecord[],\n  filter: (w: WriteRecord) => boolean,\n  treeRoot: Path\n): CompoundWrite {\n  let compoundWrite = CompoundWrite.empty();\n  for (let i = 0; i < writes.length; ++i) {\n    const write = writes[i];\n    // Theory, a later set will either:\n    // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\n    // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\n    if (filter(write)) {\n      const writePath = write.path;\n      let relativePath: Path;\n      if (write.snap) {\n        if (pathContains(treeRoot, writePath)) {\n          relativePath = newRelativePath(treeRoot, writePath);\n          compoundWrite = compoundWriteAddWrite(\n            compoundWrite,\n            relativePath,\n            write.snap\n          );\n        } else if (pathContains(writePath, treeRoot)) {\n          relativePath = newRelativePath(writePath, treeRoot);\n          compoundWrite = compoundWriteAddWrite(\n            compoundWrite,\n            newEmptyPath(),\n            write.snap.getChild(relativePath)\n          );\n        } else {\n          // There is no overlap between root path and write path, ignore write\n        }\n      } else if (write.children) {\n        if (pathContains(treeRoot, writePath)) {\n          relativePath = newRelativePath(treeRoot, writePath);\n          compoundWrite = compoundWriteAddWrites(\n            compoundWrite,\n            relativePath,\n            write.children\n          );\n        } else if (pathContains(writePath, treeRoot)) {\n          relativePath = newRelativePath(writePath, treeRoot);\n          if (pathIsEmpty(relativePath)) {\n            compoundWrite = compoundWriteAddWrites(\n              compoundWrite,\n              newEmptyPath(),\n              write.children\n            );\n          } else {\n            const child = safeGet(write.children, pathGetFront(relativePath));\n            if (child) {\n              // There exists a child in this node that matches the root path\n              const deepNode = child.getChild(pathPopFront(relativePath));\n              compoundWrite = compoundWriteAddWrite(\n                compoundWrite,\n                newEmptyPath(),\n                deepNode\n              );\n            }\n          }\n        } else {\n          // There is no overlap between root path and write path, ignore write\n        }\n      } else {\n        throw assertionError('WriteRecord should have .snap or .children');\n      }\n    }\n  }\n  return compoundWrite;\n}\n\n/**\n * Return a complete snapshot for the given path if there's visible write data at that path, else null.\n * No server data is considered.\n *\n */\nexport function writeTreeGetCompleteWriteData(\n  writeTree: WriteTree,\n  path: Path\n): Node | null {\n  return compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\n}\n\n/**\n * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\n * writes), attempt to calculate a complete snapshot for the given path\n *\n * @param writeIdsToExclude - An optional set to be excluded\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\n */\nexport function writeTreeCalcCompleteEventCache(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerCache: Node | null,\n  writeIdsToExclude?: number[],\n  includeHiddenWrites?: boolean\n): Node | null {\n  if (!writeIdsToExclude && !includeHiddenWrites) {\n    const shadowingNode = compoundWriteGetCompleteNode(\n      writeTree.visibleWrites,\n      treePath\n    );\n    if (shadowingNode != null) {\n      return shadowingNode;\n    } else {\n      const subMerge = compoundWriteChildCompoundWrite(\n        writeTree.visibleWrites,\n        treePath\n      );\n      if (compoundWriteIsEmpty(subMerge)) {\n        return completeServerCache;\n      } else if (\n        completeServerCache == null &&\n        !compoundWriteHasCompleteWrite(subMerge, newEmptyPath())\n      ) {\n        // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\n        return null;\n      } else {\n        const layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n        return compoundWriteApply(subMerge, layeredCache);\n      }\n    }\n  } else {\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    if (!includeHiddenWrites && compoundWriteIsEmpty(merge)) {\n      return completeServerCache;\n    } else {\n      // If the server cache is null, and we don't have a complete cache, we need to return null\n      if (\n        !includeHiddenWrites &&\n        completeServerCache == null &&\n        !compoundWriteHasCompleteWrite(merge, newEmptyPath())\n      ) {\n        return null;\n      } else {\n        const filter = function (write: WriteRecord) {\n          return (\n            (write.visible || includeHiddenWrites) &&\n            (!writeIdsToExclude ||\n              !~writeIdsToExclude.indexOf(write.writeId)) &&\n            (pathContains(write.path, treePath) ||\n              pathContains(treePath, write.path))\n          );\n        };\n        const mergeAtPath = writeTreeLayerTree_(\n          writeTree.allWrites,\n          filter,\n          treePath\n        );\n        const layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n        return compoundWriteApply(mergeAtPath, layeredCache);\n      }\n    }\n  }\n}\n\n/**\n * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\n * Used when creating new views, to pre-fill their complete event children snapshot.\n */\nexport function writeTreeCalcCompleteEventChildren(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerChildren: ChildrenNode | null\n) {\n  let completeChildren = ChildrenNode.EMPTY_NODE as Node;\n  const topLevelSet = compoundWriteGetCompleteNode(\n    writeTree.visibleWrites,\n    treePath\n  );\n  if (topLevelSet) {\n    if (!topLevelSet.isLeafNode()) {\n      // we're shadowing everything. Return the children.\n      topLevelSet.forEachChild(PRIORITY_INDEX, (childName, childSnap) => {\n        completeChildren = completeChildren.updateImmediateChild(\n          childName,\n          childSnap\n        );\n      });\n    }\n    return completeChildren;\n  } else if (completeServerChildren) {\n    // Layer any children we have on top of this\n    // We know we don't have a top-level set, so just enumerate existing children\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    completeServerChildren.forEachChild(\n      PRIORITY_INDEX,\n      (childName, childNode) => {\n        const node = compoundWriteApply(\n          compoundWriteChildCompoundWrite(merge, new Path(childName)),\n          childNode\n        );\n        completeChildren = completeChildren.updateImmediateChild(\n          childName,\n          node\n        );\n      }\n    );\n    // Add any complete children we have from the set\n    compoundWriteGetCompleteChildren(merge).forEach(namedNode => {\n      completeChildren = completeChildren.updateImmediateChild(\n        namedNode.name,\n        namedNode.node\n      );\n    });\n    return completeChildren;\n  } else {\n    // We don't have anything to layer on top of. Layer on any children we have\n    // Note that we can return an empty snap if we have a defined delete\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    compoundWriteGetCompleteChildren(merge).forEach(namedNode => {\n      completeChildren = completeChildren.updateImmediateChild(\n        namedNode.name,\n        namedNode.node\n      );\n    });\n    return completeChildren;\n  }\n}\n\n/**\n * Given that the underlying server data has updated, determine what, if anything, needs to be\n * applied to the event cache.\n *\n * Possibilities:\n *\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\n *\n * 2. Some write is completely shadowing. No events to be raised\n *\n * 3. Is partially shadowed. Events\n *\n * Either existingEventSnap or existingServerSnap must exist\n */\nexport function writeTreeCalcEventCacheAfterServerOverwrite(\n  writeTree: WriteTree,\n  treePath: Path,\n  childPath: Path,\n  existingEventSnap: Node | null,\n  existingServerSnap: Node | null\n): Node | null {\n  assert(\n    existingEventSnap || existingServerSnap,\n    'Either existingEventSnap or existingServerSnap must exist'\n  );\n  const path = pathChild(treePath, childPath);\n  if (compoundWriteHasCompleteWrite(writeTree.visibleWrites, path)) {\n    // At this point we can probably guarantee that we're in case 2, meaning no events\n    // May need to check visibility while doing the findRootMostValueAndPath call\n    return null;\n  } else {\n    // No complete shadowing. We're either partially shadowing or not shadowing at all.\n    const childMerge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      path\n    );\n    if (compoundWriteIsEmpty(childMerge)) {\n      // We're not shadowing at all. Case 1\n      return existingServerSnap.getChild(childPath);\n    } else {\n      // This could be more efficient if the serverNode + updates doesn't change the eventSnap\n      // However this is tricky to find out, since user updates don't necessary change the server\n      // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\n      // adds nodes, but doesn't change any existing writes. It is therefore not enough to\n      // only check if the updates change the serverNode.\n      // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\n      return compoundWriteApply(\n        childMerge,\n        existingServerSnap.getChild(childPath)\n      );\n    }\n  }\n}\n\n/**\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\n * complete child for this ChildKey.\n */\nexport function writeTreeCalcCompleteChild(\n  writeTree: WriteTree,\n  treePath: Path,\n  childKey: string,\n  existingServerSnap: CacheNode\n): Node | null {\n  const path = pathChild(treePath, childKey);\n  const shadowingNode = compoundWriteGetCompleteNode(\n    writeTree.visibleWrites,\n    path\n  );\n  if (shadowingNode != null) {\n    return shadowingNode;\n  } else {\n    if (existingServerSnap.isCompleteForChild(childKey)) {\n      const childMerge = compoundWriteChildCompoundWrite(\n        writeTree.visibleWrites,\n        path\n      );\n      return compoundWriteApply(\n        childMerge,\n        existingServerSnap.getNode().getImmediateChild(childKey)\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\n/**\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\n * a higher path, this will return the child of that write relative to the write and this path.\n * Returns null if there is no write at this path.\n */\nexport function writeTreeShadowingWrite(\n  writeTree: WriteTree,\n  path: Path\n): Node | null {\n  return compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\n}\n\n/**\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\n * the window, but may now be in the window.\n */\nexport function writeTreeCalcIndexedSlice(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerData: Node | null,\n  startPost: NamedNode,\n  count: number,\n  reverse: boolean,\n  index: Index\n): NamedNode[] {\n  let toIterate: Node;\n  const merge = compoundWriteChildCompoundWrite(\n    writeTree.visibleWrites,\n    treePath\n  );\n  const shadowingNode = compoundWriteGetCompleteNode(merge, newEmptyPath());\n  if (shadowingNode != null) {\n    toIterate = shadowingNode;\n  } else if (completeServerData != null) {\n    toIterate = compoundWriteApply(merge, completeServerData);\n  } else {\n    // no children to iterate on\n    return [];\n  }\n  toIterate = toIterate.withIndex(index);\n  if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\n    const nodes = [];\n    const cmp = index.getCompare();\n    const iter = reverse\n      ? (toIterate as ChildrenNode).getReverseIteratorFrom(startPost, index)\n      : (toIterate as ChildrenNode).getIteratorFrom(startPost, index);\n    let next = iter.getNext();\n    while (next && nodes.length < count) {\n      if (cmp(next, startPost) !== 0) {\n        nodes.push(next);\n      }\n      next = iter.getNext();\n    }\n    return nodes;\n  } else {\n    return [];\n  }\n}\n\nexport function newWriteTree(): WriteTree {\n  return {\n    visibleWrites: CompoundWrite.empty(),\n    allWrites: [],\n    lastWriteId: -1\n  };\n}\n\n/**\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\n * and addMerge(), and removed with removeWrite().\n */\nexport interface WriteTree {\n  /**\n   * A tree tracking the result of applying all visible writes.  This does not include transactions with\n   * applyLocally=false or writes that are completely shadowed by other writes.\n   */\n  visibleWrites: CompoundWrite;\n\n  /**\n   * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\n   * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\n   * used by transactions).\n   */\n  allWrites: WriteRecord[];\n\n  lastWriteId: number;\n}\n\n/**\n * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\n * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\n * can lead to a more expensive calculation.\n *\n * @param writeIdsToExclude - Optional writes to exclude.\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\n */\nexport function writeTreeRefCalcCompleteEventCache(\n  writeTreeRef: WriteTreeRef,\n  completeServerCache: Node | null,\n  writeIdsToExclude?: number[],\n  includeHiddenWrites?: boolean\n): Node | null {\n  return writeTreeCalcCompleteEventCache(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerCache,\n    writeIdsToExclude,\n    includeHiddenWrites\n  );\n}\n\n/**\n * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\n * mix of the given server data and write data.\n *\n */\nexport function writeTreeRefCalcCompleteEventChildren(\n  writeTreeRef: WriteTreeRef,\n  completeServerChildren: ChildrenNode | null\n): ChildrenNode {\n  return writeTreeCalcCompleteEventChildren(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerChildren\n  ) as ChildrenNode;\n}\n\n/**\n * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\n * if anything, needs to be applied to the event cache.\n *\n * Possibilities:\n *\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\n *\n * 2. Some write is completely shadowing. No events to be raised\n *\n * 3. Is partially shadowed. Events should be raised\n *\n * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\n *\n *\n */\nexport function writeTreeRefCalcEventCacheAfterServerOverwrite(\n  writeTreeRef: WriteTreeRef,\n  path: Path,\n  existingEventSnap: Node | null,\n  existingServerSnap: Node | null\n): Node | null {\n  return writeTreeCalcEventCacheAfterServerOverwrite(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    path,\n    existingEventSnap,\n    existingServerSnap\n  );\n}\n\n/**\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\n * a higher path, this will return the child of that write relative to the write and this path.\n * Returns null if there is no write at this path.\n *\n */\nexport function writeTreeRefShadowingWrite(\n  writeTreeRef: WriteTreeRef,\n  path: Path\n): Node | null {\n  return writeTreeShadowingWrite(\n    writeTreeRef.writeTree,\n    pathChild(writeTreeRef.treePath, path)\n  );\n}\n\n/**\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\n * the window, but may now be in the window\n */\nexport function writeTreeRefCalcIndexedSlice(\n  writeTreeRef: WriteTreeRef,\n  completeServerData: Node | null,\n  startPost: NamedNode,\n  count: number,\n  reverse: boolean,\n  index: Index\n): NamedNode[] {\n  return writeTreeCalcIndexedSlice(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerData,\n    startPost,\n    count,\n    reverse,\n    index\n  );\n}\n\n/**\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\n * complete child for this ChildKey.\n */\nexport function writeTreeRefCalcCompleteChild(\n  writeTreeRef: WriteTreeRef,\n  childKey: string,\n  existingServerCache: CacheNode\n): Node | null {\n  return writeTreeCalcCompleteChild(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    childKey,\n    existingServerCache\n  );\n}\n\n/**\n * Return a WriteTreeRef for a child.\n */\nexport function writeTreeRefChild(\n  writeTreeRef: WriteTreeRef,\n  childName: string\n): WriteTreeRef {\n  return newWriteTreeRef(\n    pathChild(writeTreeRef.treePath, childName),\n    writeTreeRef.writeTree\n  );\n}\n\nexport function newWriteTreeRef(\n  path: Path,\n  writeTree: WriteTree\n): WriteTreeRef {\n  return {\n    treePath: path,\n    writeTree\n  };\n}\n\n/**\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\n * just proxy to the underlying WriteTree.\n *\n */\nexport interface WriteTreeRef {\n  /**\n   * The path to this particular write tree ref. Used for calling methods on writeTree_ while exposing a simpler\n   * interface to callers.\n   */\n  readonly treePath: Path;\n\n  /**\n   * * A reference to the actual tree of write data. All methods are pass-through to the tree, but with the appropriate\n   * path prefixed.\n   *\n   * This lets us make cheap references to points in the tree for sync points without having to copy and maintain all of\n   * the data.\n   */\n  readonly writeTree: WriteTree;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError } from '@firebase/util';\n\nimport {\n  Change,\n  ChangeType,\n  changeChildAdded,\n  changeChildChanged,\n  changeChildRemoved\n} from './Change';\n\nexport class ChildChangeAccumulator {\n  private readonly changeMap: Map<string, Change> = new Map();\n\n  trackChildChange(change: Change) {\n    const type = change.type;\n    const childKey = change.childName!;\n    assert(\n      type === ChangeType.CHILD_ADDED ||\n        type === ChangeType.CHILD_CHANGED ||\n        type === ChangeType.CHILD_REMOVED,\n      'Only child changes supported for tracking'\n    );\n    assert(\n      childKey !== '.priority',\n      'Only non-priority child changes can be tracked.'\n    );\n    const oldChange = this.changeMap.get(childKey);\n    if (oldChange) {\n      const oldType = oldChange.type;\n      if (\n        type === ChangeType.CHILD_ADDED &&\n        oldType === ChangeType.CHILD_REMOVED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildChanged(\n            childKey,\n            change.snapshotNode,\n            oldChange.snapshotNode\n          )\n        );\n      } else if (\n        type === ChangeType.CHILD_REMOVED &&\n        oldType === ChangeType.CHILD_ADDED\n      ) {\n        this.changeMap.delete(childKey);\n      } else if (\n        type === ChangeType.CHILD_REMOVED &&\n        oldType === ChangeType.CHILD_CHANGED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildRemoved(childKey, oldChange.oldSnap)\n        );\n      } else if (\n        type === ChangeType.CHILD_CHANGED &&\n        oldType === ChangeType.CHILD_ADDED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildAdded(childKey, change.snapshotNode)\n        );\n      } else if (\n        type === ChangeType.CHILD_CHANGED &&\n        oldType === ChangeType.CHILD_CHANGED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildChanged(childKey, change.snapshotNode, oldChange.oldSnap)\n        );\n      } else {\n        throw assertionError(\n          'Illegal combination of changes: ' +\n            change +\n            ' occurred after ' +\n            oldChange\n        );\n      }\n    } else {\n      this.changeMap.set(childKey, change);\n    }\n  }\n\n  getChanges(): Change[] {\n    return Array.from(this.changeMap.values());\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Index } from '../snap/indexes/Index';\nimport { NamedNode, Node } from '../snap/Node';\nimport {\n  WriteTreeRef,\n  writeTreeRefCalcCompleteChild,\n  writeTreeRefCalcIndexedSlice\n} from '../WriteTree';\n\nimport { CacheNode } from './CacheNode';\nimport { ViewCache, viewCacheGetCompleteServerSnap } from './ViewCache';\n\n/**\n * Since updates to filtered nodes might require nodes to be pulled in from \"outside\" the node, this interface\n * can help to get complete children that can be pulled in.\n * A class implementing this interface takes potentially multiple sources (e.g. user writes, server data from\n * other views etc.) to try it's best to get a complete child that might be useful in pulling into the view.\n *\n * @interface\n */\nexport interface CompleteChildSource {\n  getCompleteChild(childKey: string): Node | null;\n\n  getChildAfterChild(\n    index: Index,\n    child: NamedNode,\n    reverse: boolean\n  ): NamedNode | null;\n}\n\n/**\n * An implementation of CompleteChildSource that never returns any additional children\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport class NoCompleteChildSource_ implements CompleteChildSource {\n  getCompleteChild(childKey?: string): Node | null {\n    return null;\n  }\n  getChildAfterChild(\n    index?: Index,\n    child?: NamedNode,\n    reverse?: boolean\n  ): NamedNode | null {\n    return null;\n  }\n}\n\n/**\n * Singleton instance.\n */\nexport const NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\n\n/**\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\n * old event caches available to calculate complete children.\n */\nexport class WriteTreeCompleteChildSource implements CompleteChildSource {\n  constructor(\n    private writes_: WriteTreeRef,\n    private viewCache_: ViewCache,\n    private optCompleteServerCache_: Node | null = null\n  ) {}\n  getCompleteChild(childKey: string): Node | null {\n    const node = this.viewCache_.eventCache;\n    if (node.isCompleteForChild(childKey)) {\n      return node.getNode().getImmediateChild(childKey);\n    } else {\n      const serverNode =\n        this.optCompleteServerCache_ != null\n          ? new CacheNode(this.optCompleteServerCache_, true, false)\n          : this.viewCache_.serverCache;\n      return writeTreeRefCalcCompleteChild(this.writes_, childKey, serverNode);\n    }\n  }\n  getChildAfterChild(\n    index: Index,\n    child: NamedNode,\n    reverse: boolean\n  ): NamedNode | null {\n    const completeServerData =\n      this.optCompleteServerCache_ != null\n        ? this.optCompleteServerCache_\n        : viewCacheGetCompleteServerSnap(this.viewCache_);\n    const nodes = writeTreeRefCalcIndexedSlice(\n      this.writes_,\n      completeServerData,\n      child,\n      1,\n      reverse,\n      index\n    );\n    if (nodes.length === 0) {\n      return null;\n    } else {\n      return nodes[0];\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError } from '@firebase/util';\n\nimport { AckUserWrite } from '../operation/AckUserWrite';\nimport { Merge } from '../operation/Merge';\nimport { Operation, OperationType } from '../operation/Operation';\nimport { Overwrite } from '../operation/Overwrite';\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { KEY_INDEX } from '../snap/indexes/KeyIndex';\nimport { Node } from '../snap/Node';\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport {\n  newEmptyPath,\n  Path,\n  pathChild,\n  pathGetBack,\n  pathGetFront,\n  pathGetLength,\n  pathIsEmpty,\n  pathParent,\n  pathPopFront\n} from '../util/Path';\nimport {\n  WriteTreeRef,\n  writeTreeRefCalcCompleteChild,\n  writeTreeRefCalcCompleteEventCache,\n  writeTreeRefCalcCompleteEventChildren,\n  writeTreeRefCalcEventCacheAfterServerOverwrite,\n  writeTreeRefShadowingWrite\n} from '../WriteTree';\n\nimport { Change, changeValue } from './Change';\nimport { ChildChangeAccumulator } from './ChildChangeAccumulator';\nimport {\n  CompleteChildSource,\n  NO_COMPLETE_CHILD_SOURCE,\n  WriteTreeCompleteChildSource\n} from './CompleteChildSource';\nimport { NodeFilter } from './filter/NodeFilter';\nimport {\n  ViewCache,\n  viewCacheGetCompleteEventSnap,\n  viewCacheGetCompleteServerSnap,\n  viewCacheUpdateEventSnap,\n  viewCacheUpdateServerSnap\n} from './ViewCache';\n\nexport interface ProcessorResult {\n  readonly viewCache: ViewCache;\n  readonly changes: Change[];\n}\n\nexport interface ViewProcessor {\n  readonly filter: NodeFilter;\n}\n\nexport function newViewProcessor(filter: NodeFilter): ViewProcessor {\n  return { filter };\n}\n\nexport function viewProcessorAssertIndexed(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache\n): void {\n  assert(\n    viewCache.eventCache.getNode().isIndexed(viewProcessor.filter.getIndex()),\n    'Event snap not indexed'\n  );\n  assert(\n    viewCache.serverCache.getNode().isIndexed(viewProcessor.filter.getIndex()),\n    'Server snap not indexed'\n  );\n}\n\nexport function viewProcessorApplyOperation(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null\n): ProcessorResult {\n  const accumulator = new ChildChangeAccumulator();\n  let newViewCache, filterServerNode;\n  if (operation.type === OperationType.OVERWRITE) {\n    const overwrite = operation as Overwrite;\n    if (overwrite.source.fromUser) {\n      newViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        oldViewCache,\n        overwrite.path,\n        overwrite.snap,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      assert(overwrite.source.fromServer, 'Unknown source.');\n      // We filter the node if it's a tagged update or the node has been previously filtered  and the\n      // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\n      // again\n      filterServerNode =\n        overwrite.source.tagged ||\n        (oldViewCache.serverCache.isFiltered() && !pathIsEmpty(overwrite.path));\n      newViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        oldViewCache,\n        overwrite.path,\n        overwrite.snap,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.MERGE) {\n    const merge = operation as Merge;\n    if (merge.source.fromUser) {\n      newViewCache = viewProcessorApplyUserMerge(\n        viewProcessor,\n        oldViewCache,\n        merge.path,\n        merge.children,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      assert(merge.source.fromServer, 'Unknown source.');\n      // We filter the node if it's a tagged update or the node has been previously filtered\n      filterServerNode =\n        merge.source.tagged || oldViewCache.serverCache.isFiltered();\n      newViewCache = viewProcessorApplyServerMerge(\n        viewProcessor,\n        oldViewCache,\n        merge.path,\n        merge.children,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.ACK_USER_WRITE) {\n    const ackUserWrite = operation as AckUserWrite;\n    if (!ackUserWrite.revert) {\n      newViewCache = viewProcessorAckUserWrite(\n        viewProcessor,\n        oldViewCache,\n        ackUserWrite.path,\n        ackUserWrite.affectedTree,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      newViewCache = viewProcessorRevertUserWrite(\n        viewProcessor,\n        oldViewCache,\n        ackUserWrite.path,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.LISTEN_COMPLETE) {\n    newViewCache = viewProcessorListenComplete(\n      viewProcessor,\n      oldViewCache,\n      operation.path,\n      writesCache,\n      accumulator\n    );\n  } else {\n    throw assertionError('Unknown operation type: ' + operation.type);\n  }\n  const changes = accumulator.getChanges();\n  viewProcessorMaybeAddValueEvent(oldViewCache, newViewCache, changes);\n  return { viewCache: newViewCache, changes };\n}\n\nfunction viewProcessorMaybeAddValueEvent(\n  oldViewCache: ViewCache,\n  newViewCache: ViewCache,\n  accumulator: Change[]\n): void {\n  const eventSnap = newViewCache.eventCache;\n  if (eventSnap.isFullyInitialized()) {\n    const isLeafOrEmpty =\n      eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\n    const oldCompleteSnap = viewCacheGetCompleteEventSnap(oldViewCache);\n    if (\n      accumulator.length > 0 ||\n      !oldViewCache.eventCache.isFullyInitialized() ||\n      (isLeafOrEmpty && !eventSnap.getNode().equals(oldCompleteSnap)) ||\n      !eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())\n    ) {\n      accumulator.push(\n        changeValue(viewCacheGetCompleteEventSnap(newViewCache))\n      );\n    }\n  }\n}\n\nfunction viewProcessorGenerateEventCacheAfterServerEvent(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  changePath: Path,\n  writesCache: WriteTreeRef,\n  source: CompleteChildSource,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldEventSnap = viewCache.eventCache;\n  if (writeTreeRefShadowingWrite(writesCache, changePath) != null) {\n    // we have a shadowing write, ignore changes\n    return viewCache;\n  } else {\n    let newEventCache, serverNode;\n    if (pathIsEmpty(changePath)) {\n      // TODO: figure out how this plays with \"sliding ack windows\"\n      assert(\n        viewCache.serverCache.isFullyInitialized(),\n        'If change path is empty, we must have complete server data'\n      );\n      if (viewCache.serverCache.isFiltered()) {\n        // We need to special case this, because we need to only apply writes to complete children, or\n        // we might end up raising events for incomplete children. If the server data is filtered deep\n        // writes cannot be guaranteed to be complete\n        const serverCache = viewCacheGetCompleteServerSnap(viewCache);\n        const completeChildren =\n          serverCache instanceof ChildrenNode\n            ? serverCache\n            : ChildrenNode.EMPTY_NODE;\n        const completeEventChildren = writeTreeRefCalcCompleteEventChildren(\n          writesCache,\n          completeChildren\n        );\n        newEventCache = viewProcessor.filter.updateFullNode(\n          viewCache.eventCache.getNode(),\n          completeEventChildren,\n          accumulator\n        );\n      } else {\n        const completeNode = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n        newEventCache = viewProcessor.filter.updateFullNode(\n          viewCache.eventCache.getNode(),\n          completeNode,\n          accumulator\n        );\n      }\n    } else {\n      const childKey = pathGetFront(changePath);\n      if (childKey === '.priority') {\n        assert(\n          pathGetLength(changePath) === 1,\n          \"Can't have a priority with additional path components\"\n        );\n        const oldEventNode = oldEventSnap.getNode();\n        serverNode = viewCache.serverCache.getNode();\n        // we might have overwrites for this priority\n        const updatedPriority = writeTreeRefCalcEventCacheAfterServerOverwrite(\n          writesCache,\n          changePath,\n          oldEventNode,\n          serverNode\n        );\n        if (updatedPriority != null) {\n          newEventCache = viewProcessor.filter.updatePriority(\n            oldEventNode,\n            updatedPriority\n          );\n        } else {\n          // priority didn't change, keep old node\n          newEventCache = oldEventSnap.getNode();\n        }\n      } else {\n        const childChangePath = pathPopFront(changePath);\n        // update child\n        let newEventChild;\n        if (oldEventSnap.isCompleteForChild(childKey)) {\n          serverNode = viewCache.serverCache.getNode();\n          const eventChildUpdate =\n            writeTreeRefCalcEventCacheAfterServerOverwrite(\n              writesCache,\n              changePath,\n              oldEventSnap.getNode(),\n              serverNode\n            );\n          if (eventChildUpdate != null) {\n            newEventChild = oldEventSnap\n              .getNode()\n              .getImmediateChild(childKey)\n              .updateChild(childChangePath, eventChildUpdate);\n          } else {\n            // Nothing changed, just keep the old child\n            newEventChild = oldEventSnap.getNode().getImmediateChild(childKey);\n          }\n        } else {\n          newEventChild = writeTreeRefCalcCompleteChild(\n            writesCache,\n            childKey,\n            viewCache.serverCache\n          );\n        }\n        if (newEventChild != null) {\n          newEventCache = viewProcessor.filter.updateChild(\n            oldEventSnap.getNode(),\n            childKey,\n            newEventChild,\n            childChangePath,\n            source,\n            accumulator\n          );\n        } else {\n          // no complete child available or no change\n          newEventCache = oldEventSnap.getNode();\n        }\n      }\n    }\n    return viewCacheUpdateEventSnap(\n      viewCache,\n      newEventCache,\n      oldEventSnap.isFullyInitialized() || pathIsEmpty(changePath),\n      viewProcessor.filter.filtersNodes()\n    );\n  }\n}\n\nfunction viewProcessorApplyServerOverwrite(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  changePath: Path,\n  changedSnap: Node,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  filterServerNode: boolean,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldServerSnap = oldViewCache.serverCache;\n  let newServerCache;\n  const serverFilter = filterServerNode\n    ? viewProcessor.filter\n    : viewProcessor.filter.getIndexedFilter();\n  if (pathIsEmpty(changePath)) {\n    newServerCache = serverFilter.updateFullNode(\n      oldServerSnap.getNode(),\n      changedSnap,\n      null\n    );\n  } else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\n    // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\n    const newServerNode = oldServerSnap\n      .getNode()\n      .updateChild(changePath, changedSnap);\n    newServerCache = serverFilter.updateFullNode(\n      oldServerSnap.getNode(),\n      newServerNode,\n      null\n    );\n  } else {\n    const childKey = pathGetFront(changePath);\n    if (\n      !oldServerSnap.isCompleteForPath(changePath) &&\n      pathGetLength(changePath) > 1\n    ) {\n      // We don't update incomplete nodes with updates intended for other listeners\n      return oldViewCache;\n    }\n    const childChangePath = pathPopFront(changePath);\n    const childNode = oldServerSnap.getNode().getImmediateChild(childKey);\n    const newChildNode = childNode.updateChild(childChangePath, changedSnap);\n    if (childKey === '.priority') {\n      newServerCache = serverFilter.updatePriority(\n        oldServerSnap.getNode(),\n        newChildNode\n      );\n    } else {\n      newServerCache = serverFilter.updateChild(\n        oldServerSnap.getNode(),\n        childKey,\n        newChildNode,\n        childChangePath,\n        NO_COMPLETE_CHILD_SOURCE,\n        null\n      );\n    }\n  }\n  const newViewCache = viewCacheUpdateServerSnap(\n    oldViewCache,\n    newServerCache,\n    oldServerSnap.isFullyInitialized() || pathIsEmpty(changePath),\n    serverFilter.filtersNodes()\n  );\n  const source = new WriteTreeCompleteChildSource(\n    writesCache,\n    newViewCache,\n    completeCache\n  );\n  return viewProcessorGenerateEventCacheAfterServerEvent(\n    viewProcessor,\n    newViewCache,\n    changePath,\n    writesCache,\n    source,\n    accumulator\n  );\n}\n\nfunction viewProcessorApplyUserOverwrite(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  changePath: Path,\n  changedSnap: Node,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldEventSnap = oldViewCache.eventCache;\n  let newViewCache, newEventCache;\n  const source = new WriteTreeCompleteChildSource(\n    writesCache,\n    oldViewCache,\n    completeCache\n  );\n  if (pathIsEmpty(changePath)) {\n    newEventCache = viewProcessor.filter.updateFullNode(\n      oldViewCache.eventCache.getNode(),\n      changedSnap,\n      accumulator\n    );\n    newViewCache = viewCacheUpdateEventSnap(\n      oldViewCache,\n      newEventCache,\n      true,\n      viewProcessor.filter.filtersNodes()\n    );\n  } else {\n    const childKey = pathGetFront(changePath);\n    if (childKey === '.priority') {\n      newEventCache = viewProcessor.filter.updatePriority(\n        oldViewCache.eventCache.getNode(),\n        changedSnap\n      );\n      newViewCache = viewCacheUpdateEventSnap(\n        oldViewCache,\n        newEventCache,\n        oldEventSnap.isFullyInitialized(),\n        oldEventSnap.isFiltered()\n      );\n    } else {\n      const childChangePath = pathPopFront(changePath);\n      const oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\n      let newChild;\n      if (pathIsEmpty(childChangePath)) {\n        // Child overwrite, we can replace the child\n        newChild = changedSnap;\n      } else {\n        const childNode = source.getCompleteChild(childKey);\n        if (childNode != null) {\n          if (\n            pathGetBack(childChangePath) === '.priority' &&\n            childNode.getChild(pathParent(childChangePath)).isEmpty()\n          ) {\n            // This is a priority update on an empty node. If this node exists on the server, the\n            // server will send down the priority in the update, so ignore for now\n            newChild = childNode;\n          } else {\n            newChild = childNode.updateChild(childChangePath, changedSnap);\n          }\n        } else {\n          // There is no complete child node available\n          newChild = ChildrenNode.EMPTY_NODE;\n        }\n      }\n      if (!oldChild.equals(newChild)) {\n        const newEventSnap = viewProcessor.filter.updateChild(\n          oldEventSnap.getNode(),\n          childKey,\n          newChild,\n          childChangePath,\n          source,\n          accumulator\n        );\n        newViewCache = viewCacheUpdateEventSnap(\n          oldViewCache,\n          newEventSnap,\n          oldEventSnap.isFullyInitialized(),\n          viewProcessor.filter.filtersNodes()\n        );\n      } else {\n        newViewCache = oldViewCache;\n      }\n    }\n  }\n  return newViewCache;\n}\n\nfunction viewProcessorCacheHasChild(\n  viewCache: ViewCache,\n  childKey: string\n): boolean {\n  return viewCache.eventCache.isCompleteForChild(childKey);\n}\n\nfunction viewProcessorApplyUserMerge(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  changedChildren: ImmutableTree<Node>,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  // HACK: In the case of a limit query, there may be some changes that bump things out of the\n  // window leaving room for new items.  It's important we process these changes first, so we\n  // iterate the changes twice, first processing any that affect items currently in view.\n  // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n  // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n  // not the other.\n  let curViewCache = viewCache;\n  changedChildren.foreach((relativePath, childNode) => {\n    const writePath = pathChild(path, relativePath);\n    if (viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\n      curViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        curViewCache,\n        writePath,\n        childNode,\n        writesCache,\n        serverCache,\n        accumulator\n      );\n    }\n  });\n\n  changedChildren.foreach((relativePath, childNode) => {\n    const writePath = pathChild(path, relativePath);\n    if (!viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\n      curViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        curViewCache,\n        writePath,\n        childNode,\n        writesCache,\n        serverCache,\n        accumulator\n      );\n    }\n  });\n\n  return curViewCache;\n}\n\nfunction viewProcessorApplyMerge(\n  viewProcessor: ViewProcessor,\n  node: Node,\n  merge: ImmutableTree<Node>\n): Node {\n  merge.foreach((relativePath, childNode) => {\n    node = node.updateChild(relativePath, childNode);\n  });\n  return node;\n}\n\nfunction viewProcessorApplyServerMerge(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  changedChildren: ImmutableTree<Node>,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  filterServerNode: boolean,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\n  // wait for the complete data update coming soon.\n  if (\n    viewCache.serverCache.getNode().isEmpty() &&\n    !viewCache.serverCache.isFullyInitialized()\n  ) {\n    return viewCache;\n  }\n\n  // HACK: In the case of a limit query, there may be some changes that bump things out of the\n  // window leaving room for new items.  It's important we process these changes first, so we\n  // iterate the changes twice, first processing any that affect items currently in view.\n  // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n  // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n  // not the other.\n  let curViewCache = viewCache;\n  let viewMergeTree: ImmutableTree<Node>;\n  if (pathIsEmpty(path)) {\n    viewMergeTree = changedChildren;\n  } else {\n    viewMergeTree = new ImmutableTree<Node>(null).setTree(\n      path,\n      changedChildren\n    );\n  }\n  const serverNode = viewCache.serverCache.getNode();\n  viewMergeTree.children.inorderTraversal((childKey, childTree) => {\n    if (serverNode.hasChild(childKey)) {\n      const serverChild = viewCache.serverCache\n        .getNode()\n        .getImmediateChild(childKey);\n      const newChild = viewProcessorApplyMerge(\n        viewProcessor,\n        serverChild,\n        childTree\n      );\n      curViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        curViewCache,\n        new Path(childKey),\n        newChild,\n        writesCache,\n        serverCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  });\n  viewMergeTree.children.inorderTraversal((childKey, childMergeTree) => {\n    const isUnknownDeepMerge =\n      !viewCache.serverCache.isCompleteForChild(childKey) &&\n      childMergeTree.value === null;\n    if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\n      const serverChild = viewCache.serverCache\n        .getNode()\n        .getImmediateChild(childKey);\n      const newChild = viewProcessorApplyMerge(\n        viewProcessor,\n        serverChild,\n        childMergeTree\n      );\n      curViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        curViewCache,\n        new Path(childKey),\n        newChild,\n        writesCache,\n        serverCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  });\n\n  return curViewCache;\n}\n\nfunction viewProcessorAckUserWrite(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  ackPath: Path,\n  affectedTree: ImmutableTree<boolean>,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  if (writeTreeRefShadowingWrite(writesCache, ackPath) != null) {\n    return viewCache;\n  }\n\n  // Only filter server node if it is currently filtered\n  const filterServerNode = viewCache.serverCache.isFiltered();\n\n  // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\n  // now that it won't be shadowed.\n  const serverCache = viewCache.serverCache;\n  if (affectedTree.value != null) {\n    // This is an overwrite.\n    if (\n      (pathIsEmpty(ackPath) && serverCache.isFullyInitialized()) ||\n      serverCache.isCompleteForPath(ackPath)\n    ) {\n      return viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        viewCache,\n        ackPath,\n        serverCache.getNode().getChild(ackPath),\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    } else if (pathIsEmpty(ackPath)) {\n      // This is a goofy edge case where we are acking data at this location but don't have full data.  We\n      // should just re-apply whatever we have in our cache as a merge.\n      let changedChildren = new ImmutableTree<Node>(null);\n      serverCache.getNode().forEachChild(KEY_INDEX, (name, node) => {\n        changedChildren = changedChildren.set(new Path(name), node);\n      });\n      return viewProcessorApplyServerMerge(\n        viewProcessor,\n        viewCache,\n        ackPath,\n        changedChildren,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    } else {\n      return viewCache;\n    }\n  } else {\n    // This is a merge.\n    let changedChildren = new ImmutableTree<Node>(null);\n    affectedTree.foreach((mergePath, value) => {\n      const serverCachePath = pathChild(ackPath, mergePath);\n      if (serverCache.isCompleteForPath(serverCachePath)) {\n        changedChildren = changedChildren.set(\n          mergePath,\n          serverCache.getNode().getChild(serverCachePath)\n        );\n      }\n    });\n    return viewProcessorApplyServerMerge(\n      viewProcessor,\n      viewCache,\n      ackPath,\n      changedChildren,\n      writesCache,\n      completeCache,\n      filterServerNode,\n      accumulator\n    );\n  }\n}\n\nfunction viewProcessorListenComplete(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  writesCache: WriteTreeRef,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldServerNode = viewCache.serverCache;\n  const newViewCache = viewCacheUpdateServerSnap(\n    viewCache,\n    oldServerNode.getNode(),\n    oldServerNode.isFullyInitialized() || pathIsEmpty(path),\n    oldServerNode.isFiltered()\n  );\n  return viewProcessorGenerateEventCacheAfterServerEvent(\n    viewProcessor,\n    newViewCache,\n    path,\n    writesCache,\n    NO_COMPLETE_CHILD_SOURCE,\n    accumulator\n  );\n}\n\nfunction viewProcessorRevertUserWrite(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  writesCache: WriteTreeRef,\n  completeServerCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  let complete;\n  if (writeTreeRefShadowingWrite(writesCache, path) != null) {\n    return viewCache;\n  } else {\n    const source = new WriteTreeCompleteChildSource(\n      writesCache,\n      viewCache,\n      completeServerCache\n    );\n    const oldEventCache = viewCache.eventCache.getNode();\n    let newEventCache;\n    if (pathIsEmpty(path) || pathGetFront(path) === '.priority') {\n      let newNode;\n      if (viewCache.serverCache.isFullyInitialized()) {\n        newNode = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n      } else {\n        const serverChildren = viewCache.serverCache.getNode();\n        assert(\n          serverChildren instanceof ChildrenNode,\n          'serverChildren would be complete if leaf node'\n        );\n        newNode = writeTreeRefCalcCompleteEventChildren(\n          writesCache,\n          serverChildren as ChildrenNode\n        );\n      }\n      newNode = newNode as Node;\n      newEventCache = viewProcessor.filter.updateFullNode(\n        oldEventCache,\n        newNode,\n        accumulator\n      );\n    } else {\n      const childKey = pathGetFront(path);\n      let newChild = writeTreeRefCalcCompleteChild(\n        writesCache,\n        childKey,\n        viewCache.serverCache\n      );\n      if (\n        newChild == null &&\n        viewCache.serverCache.isCompleteForChild(childKey)\n      ) {\n        newChild = oldEventCache.getImmediateChild(childKey);\n      }\n      if (newChild != null) {\n        newEventCache = viewProcessor.filter.updateChild(\n          oldEventCache,\n          childKey,\n          newChild,\n          pathPopFront(path),\n          source,\n          accumulator\n        );\n      } else if (viewCache.eventCache.getNode().hasChild(childKey)) {\n        // No complete child available, delete the existing one, if any\n        newEventCache = viewProcessor.filter.updateChild(\n          oldEventCache,\n          childKey,\n          ChildrenNode.EMPTY_NODE,\n          pathPopFront(path),\n          source,\n          accumulator\n        );\n      } else {\n        newEventCache = oldEventCache;\n      }\n      if (\n        newEventCache.isEmpty() &&\n        viewCache.serverCache.isFullyInitialized()\n      ) {\n        // We might have reverted all child writes. Maybe the old event was a leaf node\n        complete = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n        if (complete.isLeafNode()) {\n          newEventCache = viewProcessor.filter.updateFullNode(\n            newEventCache,\n            complete,\n            accumulator\n          );\n        }\n      }\n    }\n    complete =\n      viewCache.serverCache.isFullyInitialized() ||\n      writeTreeRefShadowingWrite(writesCache, newEmptyPath()) != null;\n    return viewCacheUpdateEventSnap(\n      viewCache,\n      newEventCache,\n      complete,\n      viewProcessor.filter.filtersNodes()\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Operation, OperationType } from '../operation/Operation';\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { PRIORITY_INDEX } from '../snap/indexes/PriorityIndex';\nimport { Node } from '../snap/Node';\nimport { Path, pathGetFront, pathIsEmpty } from '../util/Path';\nimport { WriteTreeRef } from '../WriteTree';\n\nimport { CacheNode } from './CacheNode';\nimport { Change, changeChildAdded, changeValue } from './Change';\nimport { CancelEvent, Event } from './Event';\nimport {\n  EventGenerator,\n  eventGeneratorGenerateEventsForChanges\n} from './EventGenerator';\nimport { EventRegistration, QueryContext } from './EventRegistration';\nimport { IndexedFilter } from './filter/IndexedFilter';\nimport { queryParamsGetNodeFilter } from './QueryParams';\nimport {\n  newViewCache,\n  ViewCache,\n  viewCacheGetCompleteEventSnap,\n  viewCacheGetCompleteServerSnap\n} from './ViewCache';\nimport {\n  newViewProcessor,\n  ViewProcessor,\n  viewProcessorApplyOperation,\n  viewProcessorAssertIndexed\n} from './ViewProcessor';\n\n/**\n * A view represents a specific location and query that has 1 or more event registrations.\n *\n * It does several things:\n *  - Maintains the list of event registrations for this location/query.\n *  - Maintains a cache of the data visible for this location/query.\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\n *    registrations returns the set of events to be raised.\n */\nexport class View {\n  processor_: ViewProcessor;\n  viewCache_: ViewCache;\n  eventRegistrations_: EventRegistration[] = [];\n  eventGenerator_: EventGenerator;\n\n  constructor(private query_: QueryContext, initialViewCache: ViewCache) {\n    const params = this.query_._queryParams;\n\n    const indexFilter = new IndexedFilter(params.getIndex());\n    const filter = queryParamsGetNodeFilter(params);\n\n    this.processor_ = newViewProcessor(filter);\n\n    const initialServerCache = initialViewCache.serverCache;\n    const initialEventCache = initialViewCache.eventCache;\n\n    // Don't filter server node with other filter than index, wait for tagged listen\n    const serverSnap = indexFilter.updateFullNode(\n      ChildrenNode.EMPTY_NODE,\n      initialServerCache.getNode(),\n      null\n    );\n    const eventSnap = filter.updateFullNode(\n      ChildrenNode.EMPTY_NODE,\n      initialEventCache.getNode(),\n      null\n    );\n    const newServerCache = new CacheNode(\n      serverSnap,\n      initialServerCache.isFullyInitialized(),\n      indexFilter.filtersNodes()\n    );\n    const newEventCache = new CacheNode(\n      eventSnap,\n      initialEventCache.isFullyInitialized(),\n      filter.filtersNodes()\n    );\n\n    this.viewCache_ = newViewCache(newEventCache, newServerCache);\n    this.eventGenerator_ = new EventGenerator(this.query_);\n  }\n\n  get query(): QueryContext {\n    return this.query_;\n  }\n}\n\nexport function viewGetServerCache(view: View): Node | null {\n  return view.viewCache_.serverCache.getNode();\n}\n\nexport function viewGetCompleteNode(view: View): Node | null {\n  return viewCacheGetCompleteEventSnap(view.viewCache_);\n}\n\nexport function viewGetCompleteServerCache(\n  view: View,\n  path: Path\n): Node | null {\n  const cache = viewCacheGetCompleteServerSnap(view.viewCache_);\n  if (cache) {\n    // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\n    // we need to see if it contains the child we're interested in.\n    if (\n      view.query._queryParams.loadsAllData() ||\n      (!pathIsEmpty(path) &&\n        !cache.getImmediateChild(pathGetFront(path)).isEmpty())\n    ) {\n      return cache.getChild(path);\n    }\n  }\n  return null;\n}\n\nexport function viewIsEmpty(view: View): boolean {\n  return view.eventRegistrations_.length === 0;\n}\n\nexport function viewAddEventRegistration(\n  view: View,\n  eventRegistration: EventRegistration\n) {\n  view.eventRegistrations_.push(eventRegistration);\n}\n\n/**\n * @param eventRegistration - If null, remove all callbacks.\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\n * @returns Cancel events, if cancelError was provided.\n */\nexport function viewRemoveEventRegistration(\n  view: View,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error\n): Event[] {\n  const cancelEvents: CancelEvent[] = [];\n  if (cancelError) {\n    assert(\n      eventRegistration == null,\n      'A cancel should cancel all event registrations.'\n    );\n    const path = view.query._path;\n    view.eventRegistrations_.forEach(registration => {\n      const maybeEvent = registration.createCancelEvent(cancelError, path);\n      if (maybeEvent) {\n        cancelEvents.push(maybeEvent);\n      }\n    });\n  }\n\n  if (eventRegistration) {\n    let remaining = [];\n    for (let i = 0; i < view.eventRegistrations_.length; ++i) {\n      const existing = view.eventRegistrations_[i];\n      if (!existing.matches(eventRegistration)) {\n        remaining.push(existing);\n      } else if (eventRegistration.hasAnyCallback()) {\n        // We're removing just this one\n        remaining = remaining.concat(view.eventRegistrations_.slice(i + 1));\n        break;\n      }\n    }\n    view.eventRegistrations_ = remaining;\n  } else {\n    view.eventRegistrations_ = [];\n  }\n  return cancelEvents;\n}\n\n/**\n * Applies the given Operation, updates our cache, and returns the appropriate events.\n */\nexport function viewApplyOperation(\n  view: View,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  completeServerCache: Node | null\n): Event[] {\n  if (\n    operation.type === OperationType.MERGE &&\n    operation.source.queryId !== null\n  ) {\n    assert(\n      viewCacheGetCompleteServerSnap(view.viewCache_),\n      'We should always have a full cache before handling merges'\n    );\n    assert(\n      viewCacheGetCompleteEventSnap(view.viewCache_),\n      'Missing event cache, even though we have a server cache'\n    );\n  }\n\n  const oldViewCache = view.viewCache_;\n  const result = viewProcessorApplyOperation(\n    view.processor_,\n    oldViewCache,\n    operation,\n    writesCache,\n    completeServerCache\n  );\n  viewProcessorAssertIndexed(view.processor_, result.viewCache);\n\n  assert(\n    result.viewCache.serverCache.isFullyInitialized() ||\n      !oldViewCache.serverCache.isFullyInitialized(),\n    'Once a server snap is complete, it should never go back'\n  );\n\n  view.viewCache_ = result.viewCache;\n\n  return viewGenerateEventsForChanges_(\n    view,\n    result.changes,\n    result.viewCache.eventCache.getNode(),\n    null\n  );\n}\n\nexport function viewGetInitialEvents(\n  view: View,\n  registration: EventRegistration\n): Event[] {\n  const eventSnap = view.viewCache_.eventCache;\n  const initialChanges: Change[] = [];\n  if (!eventSnap.getNode().isLeafNode()) {\n    const eventNode = eventSnap.getNode() as ChildrenNode;\n    eventNode.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n      initialChanges.push(changeChildAdded(key, childNode));\n    });\n  }\n  if (eventSnap.isFullyInitialized()) {\n    initialChanges.push(changeValue(eventSnap.getNode()));\n  }\n  return viewGenerateEventsForChanges_(\n    view,\n    initialChanges,\n    eventSnap.getNode(),\n    registration\n  );\n}\n\nfunction viewGenerateEventsForChanges_(\n  view: View,\n  changes: Change[],\n  eventCache: Node,\n  eventRegistration?: EventRegistration\n): Event[] {\n  const registrations = eventRegistration\n    ? [eventRegistration]\n    : view.eventRegistrations_;\n  return eventGeneratorGenerateEventsForChanges(\n    view.eventGenerator_,\n    changes,\n    eventCache,\n    registrations\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ReferenceConstructor } from '../api/Reference';\n\nimport { Operation } from './operation/Operation';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { Path } from './util/Path';\nimport { CacheNode } from './view/CacheNode';\nimport { Event } from './view/Event';\nimport { EventRegistration, QueryContext } from './view/EventRegistration';\nimport {\n  View,\n  viewAddEventRegistration,\n  viewApplyOperation,\n  viewGetCompleteServerCache,\n  viewGetInitialEvents,\n  viewIsEmpty,\n  viewRemoveEventRegistration\n} from './view/View';\nimport { newViewCache } from './view/ViewCache';\nimport {\n  WriteTreeRef,\n  writeTreeRefCalcCompleteEventCache,\n  writeTreeRefCalcCompleteEventChildren\n} from './WriteTree';\n\nlet referenceConstructor: ReferenceConstructor;\n\n/**\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\n * and user writes (set, transaction, update).\n *\n * It's responsible for:\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\n *    applyUserOverwrite, etc.)\n */\nexport class SyncPoint {\n  /**\n   * The Views being tracked at this location in the tree, stored as a map where the key is a\n   * queryId and the value is the View for that query.\n   *\n   * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\n   */\n  readonly views: Map<string, View> = new Map();\n}\n\nexport function syncPointSetReferenceConstructor(\n  val: ReferenceConstructor\n): void {\n  assert(\n    !referenceConstructor,\n    '__referenceConstructor has already been defined'\n  );\n  referenceConstructor = val;\n}\n\nfunction syncPointGetReferenceConstructor(): ReferenceConstructor {\n  assert(referenceConstructor, 'Reference.ts has not been loaded');\n  return referenceConstructor;\n}\n\nexport function syncPointIsEmpty(syncPoint: SyncPoint): boolean {\n  return syncPoint.views.size === 0;\n}\n\nexport function syncPointApplyOperation(\n  syncPoint: SyncPoint,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  optCompleteServerCache: Node | null\n): Event[] {\n  const queryId = operation.source.queryId;\n  if (queryId !== null) {\n    const view = syncPoint.views.get(queryId);\n    assert(view != null, 'SyncTree gave us an op for an invalid query.');\n    return viewApplyOperation(\n      view,\n      operation,\n      writesCache,\n      optCompleteServerCache\n    );\n  } else {\n    let events: Event[] = [];\n\n    for (const view of syncPoint.views.values()) {\n      events = events.concat(\n        viewApplyOperation(view, operation, writesCache, optCompleteServerCache)\n      );\n    }\n\n    return events;\n  }\n}\n\n/**\n * Get a view for the specified query.\n *\n * @param query - The query to return a view for\n * @param writesCache\n * @param serverCache\n * @param serverCacheComplete\n * @returns Events to raise.\n */\nexport function syncPointGetView(\n  syncPoint: SyncPoint,\n  query: QueryContext,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  serverCacheComplete: boolean\n): View {\n  const queryId = query._queryIdentifier;\n  const view = syncPoint.views.get(queryId);\n  if (!view) {\n    // TODO: make writesCache take flag for complete server node\n    let eventCache = writeTreeRefCalcCompleteEventCache(\n      writesCache,\n      serverCacheComplete ? serverCache : null\n    );\n    let eventCacheComplete = false;\n    if (eventCache) {\n      eventCacheComplete = true;\n    } else if (serverCache instanceof ChildrenNode) {\n      eventCache = writeTreeRefCalcCompleteEventChildren(\n        writesCache,\n        serverCache\n      );\n      eventCacheComplete = false;\n    } else {\n      eventCache = ChildrenNode.EMPTY_NODE;\n      eventCacheComplete = false;\n    }\n    const viewCache = newViewCache(\n      new CacheNode(eventCache, eventCacheComplete, false),\n      new CacheNode(serverCache, serverCacheComplete, false)\n    );\n    return new View(query, viewCache);\n  }\n  return view;\n}\n\n/**\n * Add an event callback for the specified query.\n *\n * @param query\n * @param eventRegistration\n * @param writesCache\n * @param serverCache - Complete server cache, if we have it.\n * @param serverCacheComplete\n * @returns Events to raise.\n */\nexport function syncPointAddEventRegistration(\n  syncPoint: SyncPoint,\n  query: QueryContext,\n  eventRegistration: EventRegistration,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  serverCacheComplete: boolean\n): Event[] {\n  const view = syncPointGetView(\n    syncPoint,\n    query,\n    writesCache,\n    serverCache,\n    serverCacheComplete\n  );\n  if (!syncPoint.views.has(query._queryIdentifier)) {\n    syncPoint.views.set(query._queryIdentifier, view);\n  }\n  // This is guaranteed to exist now, we just created anything that was missing\n  viewAddEventRegistration(view, eventRegistration);\n  return viewGetInitialEvents(view, eventRegistration);\n}\n\n/**\n * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\n *\n * If query is the default query, we'll check all views for the specified eventRegistration.\n * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\n *\n * @param eventRegistration - If null, remove all callbacks.\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\n * @returns removed queries and any cancel events\n */\nexport function syncPointRemoveEventRegistration(\n  syncPoint: SyncPoint,\n  query: QueryContext,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error\n): { removed: QueryContext[]; events: Event[] } {\n  const queryId = query._queryIdentifier;\n  const removed: QueryContext[] = [];\n  let cancelEvents: Event[] = [];\n  const hadCompleteView = syncPointHasCompleteView(syncPoint);\n  if (queryId === 'default') {\n    // When you do ref.off(...), we search all views for the registration to remove.\n    for (const [viewQueryId, view] of syncPoint.views.entries()) {\n      cancelEvents = cancelEvents.concat(\n        viewRemoveEventRegistration(view, eventRegistration, cancelError)\n      );\n      if (viewIsEmpty(view)) {\n        syncPoint.views.delete(viewQueryId);\n\n        // We'll deal with complete views later.\n        if (!view.query._queryParams.loadsAllData()) {\n          removed.push(view.query);\n        }\n      }\n    }\n  } else {\n    // remove the callback from the specific view.\n    const view = syncPoint.views.get(queryId);\n    if (view) {\n      cancelEvents = cancelEvents.concat(\n        viewRemoveEventRegistration(view, eventRegistration, cancelError)\n      );\n      if (viewIsEmpty(view)) {\n        syncPoint.views.delete(queryId);\n\n        // We'll deal with complete views later.\n        if (!view.query._queryParams.loadsAllData()) {\n          removed.push(view.query);\n        }\n      }\n    }\n  }\n\n  if (hadCompleteView && !syncPointHasCompleteView(syncPoint)) {\n    // We removed our last complete view.\n    removed.push(\n      new (syncPointGetReferenceConstructor())(query._repo, query._path)\n    );\n  }\n\n  return { removed, events: cancelEvents };\n}\n\nexport function syncPointGetQueryViews(syncPoint: SyncPoint): View[] {\n  const result = [];\n  for (const view of syncPoint.views.values()) {\n    if (!view.query._queryParams.loadsAllData()) {\n      result.push(view);\n    }\n  }\n  return result;\n}\n\n/**\n * @param path - The path to the desired complete snapshot\n * @returns A complete cache, if it exists\n */\nexport function syncPointGetCompleteServerCache(\n  syncPoint: SyncPoint,\n  path: Path\n): Node | null {\n  let serverCache: Node | null = null;\n  for (const view of syncPoint.views.values()) {\n    serverCache = serverCache || viewGetCompleteServerCache(view, path);\n  }\n  return serverCache;\n}\n\nexport function syncPointViewForQuery(\n  syncPoint: SyncPoint,\n  query: QueryContext\n): View | null {\n  const params = query._queryParams;\n  if (params.loadsAllData()) {\n    return syncPointGetCompleteView(syncPoint);\n  } else {\n    const queryId = query._queryIdentifier;\n    return syncPoint.views.get(queryId);\n  }\n}\n\nexport function syncPointViewExistsForQuery(\n  syncPoint: SyncPoint,\n  query: QueryContext\n): boolean {\n  return syncPointViewForQuery(syncPoint, query) != null;\n}\n\nexport function syncPointHasCompleteView(syncPoint: SyncPoint): boolean {\n  return syncPointGetCompleteView(syncPoint) != null;\n}\n\nexport function syncPointGetCompleteView(syncPoint: SyncPoint): View | null {\n  for (const view of syncPoint.views.values()) {\n    if (view.query._queryParams.loadsAllData()) {\n      return view;\n    }\n  }\n  return null;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ReferenceConstructor } from '../api/Reference';\n\nimport { AckUserWrite } from './operation/AckUserWrite';\nimport { ListenComplete } from './operation/ListenComplete';\nimport { Merge } from './operation/Merge';\nimport {\n  newOperationSourceServer,\n  newOperationSourceServerTaggedQuery,\n  newOperationSourceUser,\n  Operation\n} from './operation/Operation';\nimport { Overwrite } from './operation/Overwrite';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport {\n  SyncPoint,\n  syncPointAddEventRegistration,\n  syncPointApplyOperation,\n  syncPointGetCompleteServerCache,\n  syncPointGetCompleteView,\n  syncPointGetQueryViews,\n  syncPointGetView,\n  syncPointHasCompleteView,\n  syncPointIsEmpty,\n  syncPointRemoveEventRegistration,\n  syncPointViewExistsForQuery,\n  syncPointViewForQuery\n} from './SyncPoint';\nimport { ImmutableTree } from './util/ImmutableTree';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathGetFront,\n  pathIsEmpty\n} from './util/Path';\nimport { each, errorForServerCode } from './util/util';\nimport { CacheNode } from './view/CacheNode';\nimport { Event } from './view/Event';\nimport { EventRegistration, QueryContext } from './view/EventRegistration';\nimport { View, viewGetCompleteNode, viewGetServerCache } from './view/View';\nimport {\n  newWriteTree,\n  WriteTree,\n  writeTreeAddMerge,\n  writeTreeAddOverwrite,\n  writeTreeCalcCompleteEventCache,\n  writeTreeChildWrites,\n  writeTreeGetWrite,\n  WriteTreeRef,\n  writeTreeRefChild,\n  writeTreeRemoveWrite\n} from './WriteTree';\n\nlet referenceConstructor: ReferenceConstructor;\n\nexport function syncTreeSetReferenceConstructor(\n  val: ReferenceConstructor\n): void {\n  assert(\n    !referenceConstructor,\n    '__referenceConstructor has already been defined'\n  );\n  referenceConstructor = val;\n}\n\nfunction syncTreeGetReferenceConstructor(): ReferenceConstructor {\n  assert(referenceConstructor, 'Reference.ts has not been loaded');\n  return referenceConstructor;\n}\n\nexport interface ListenProvider {\n  startListening(\n    query: QueryContext,\n    tag: number | null,\n    hashFn: () => string,\n    onComplete: (a: string, b?: unknown) => Event[]\n  ): Event[];\n\n  stopListening(a: QueryContext, b: number | null): void;\n}\n\n/**\n * Static tracker for next query tag.\n */\nlet syncTreeNextQueryTag_ = 1;\n\nexport function resetSyncTreeTag() {\n  syncTreeNextQueryTag_ = 1;\n}\n\n/**\n * SyncTree is the central class for managing event callback registration, data caching, views\n * (query processing), and event generation.  There are typically two SyncTree instances for\n * each Repo, one for the normal Firebase data, and one for the .info data.\n *\n * It has a number of responsibilities, including:\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\n *    (applyUserOverwrite(), applyUserMerge()).\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\n *    applyServerMerge()).\n *  - Generating user-facing events for server and user changes (all of the apply* methods\n *    return the set of events that need to be raised as a result).\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\n *    to the correct set of paths and queries to satisfy the current set of user event\n *    callbacks (listens are started/stopped using the provided listenProvider).\n *\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\n * events are returned to the caller rather than raised synchronously.\n *\n */\nexport class SyncTree {\n  /**\n   * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\n   */\n  syncPointTree_: ImmutableTree<SyncPoint> = new ImmutableTree<SyncPoint>(null);\n\n  /**\n   * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\n   */\n  pendingWriteTree_: WriteTree = newWriteTree();\n\n  readonly tagToQueryMap: Map<number, string> = new Map();\n  readonly queryToTagMap: Map<string, number> = new Map();\n\n  /**\n   * @param listenProvider_ - Used by SyncTree to start / stop listening\n   *   to server data.\n   */\n  constructor(public listenProvider_: ListenProvider) {}\n}\n\n/**\n * Apply the data changes for a user-generated set() or transaction() call.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyUserOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  newData: Node,\n  writeId: number,\n  visible?: boolean\n): Event[] {\n  // Record pending write.\n  writeTreeAddOverwrite(\n    syncTree.pendingWriteTree_,\n    path,\n    newData,\n    writeId,\n    visible\n  );\n\n  if (!visible) {\n    return [];\n  } else {\n    return syncTreeApplyOperationToSyncPoints_(\n      syncTree,\n      new Overwrite(newOperationSourceUser(), path, newData)\n    );\n  }\n}\n\n/**\n * Apply the data from a user-generated update() call\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyUserMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  writeId: number\n): Event[] {\n  // Record pending merge.\n  writeTreeAddMerge(syncTree.pendingWriteTree_, path, changedChildren, writeId);\n\n  const changeTree = ImmutableTree.fromObject(changedChildren);\n\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Merge(newOperationSourceUser(), path, changeTree)\n  );\n}\n\n/**\n * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\n *\n * @param revert - True if the given write failed and needs to be reverted\n * @returns Events to raise.\n */\nexport function syncTreeAckUserWrite(\n  syncTree: SyncTree,\n  writeId: number,\n  revert: boolean = false\n) {\n  const write = writeTreeGetWrite(syncTree.pendingWriteTree_, writeId);\n  const needToReevaluate = writeTreeRemoveWrite(\n    syncTree.pendingWriteTree_,\n    writeId\n  );\n  if (!needToReevaluate) {\n    return [];\n  } else {\n    let affectedTree = new ImmutableTree<boolean>(null);\n    if (write.snap != null) {\n      // overwrite\n      affectedTree = affectedTree.set(newEmptyPath(), true);\n    } else {\n      each(write.children, (pathString: string) => {\n        affectedTree = affectedTree.set(new Path(pathString), true);\n      });\n    }\n    return syncTreeApplyOperationToSyncPoints_(\n      syncTree,\n      new AckUserWrite(write.path, affectedTree, revert)\n    );\n  }\n}\n\n/**\n * Apply new server data for the specified path..\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyServerOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  newData: Node\n): Event[] {\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Overwrite(newOperationSourceServer(), path, newData)\n  );\n}\n\n/**\n * Apply new server data to be merged in at the specified path.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyServerMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node }\n): Event[] {\n  const changeTree = ImmutableTree.fromObject(changedChildren);\n\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Merge(newOperationSourceServer(), path, changeTree)\n  );\n}\n\n/**\n * Apply a listen complete for a query\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyListenComplete(\n  syncTree: SyncTree,\n  path: Path\n): Event[] {\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new ListenComplete(newOperationSourceServer(), path)\n  );\n}\n\n/**\n * Apply a listen complete for a tagged query\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyTaggedListenComplete(\n  syncTree: SyncTree,\n  path: Path,\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const op = new ListenComplete(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // We've already removed the query. No big deal, ignore the update\n    return [];\n  }\n}\n\n/**\n * Remove event callback(s).\n *\n * If query is the default query, we'll check all queries for the specified eventRegistration.\n * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\n *\n * @param eventRegistration - If null, all callbacks are removed.\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\n * @param skipListenerDedup - When performing a `get()`, we don't add any new listeners, so no\n *  deduping needs to take place. This flag allows toggling of that behavior\n * @returns Cancel events, if cancelError was provided.\n */\nexport function syncTreeRemoveEventRegistration(\n  syncTree: SyncTree,\n  query: QueryContext,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error,\n  skipListenerDedup = false\n): Event[] {\n  // Find the syncPoint first. Then deal with whether or not it has matching listeners\n  const path = query._path;\n  const maybeSyncPoint = syncTree.syncPointTree_.get(path);\n  let cancelEvents: Event[] = [];\n  // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\n  // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\n  // not loadsAllData().\n  if (\n    maybeSyncPoint &&\n    (query._queryIdentifier === 'default' ||\n      syncPointViewExistsForQuery(maybeSyncPoint, query))\n  ) {\n    const removedAndEvents = syncPointRemoveEventRegistration(\n      maybeSyncPoint,\n      query,\n      eventRegistration,\n      cancelError\n    );\n    if (syncPointIsEmpty(maybeSyncPoint)) {\n      syncTree.syncPointTree_ = syncTree.syncPointTree_.remove(path);\n    }\n\n    const removed = removedAndEvents.removed;\n    cancelEvents = removedAndEvents.events;\n\n    if (!skipListenerDedup) {\n      /**\n       * We may have just removed one of many listeners and can short-circuit this whole process\n       * We may also not have removed a default listener, in which case all of the descendant listeners should already be\n       * properly set up.\n       */\n\n      // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\n      // queryId === 'default'\n      const removingDefault =\n        -1 !==\n        removed.findIndex(query => {\n          return query._queryParams.loadsAllData();\n        });\n      const covered = syncTree.syncPointTree_.findOnPath(\n        path,\n        (relativePath, parentSyncPoint) =>\n          syncPointHasCompleteView(parentSyncPoint)\n      );\n\n      if (removingDefault && !covered) {\n        const subtree = syncTree.syncPointTree_.subtree(path);\n        // There are potentially child listeners. Determine what if any listens we need to send before executing the\n        // removal\n        if (!subtree.isEmpty()) {\n          // We need to fold over our subtree and collect the listeners to send\n          const newViews = syncTreeCollectDistinctViewsForSubTree_(subtree);\n\n          // Ok, we've collected all the listens we need. Set them up.\n          for (let i = 0; i < newViews.length; ++i) {\n            const view = newViews[i],\n              newQuery = view.query;\n            const listener = syncTreeCreateListenerForView_(syncTree, view);\n            syncTree.listenProvider_.startListening(\n              syncTreeQueryForListening_(newQuery),\n              syncTreeTagForQuery(syncTree, newQuery),\n              listener.hashFn,\n              listener.onComplete\n            );\n          }\n        }\n        // Otherwise there's nothing below us, so nothing we need to start listening on\n      }\n      // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\n      // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\n      // Also, note that if we have a cancelError, it's already been removed at the provider level.\n      if (!covered && removed.length > 0 && !cancelError) {\n        // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\n        // default. Otherwise, we need to iterate through and cancel each individual query\n        if (removingDefault) {\n          // We don't tag default listeners\n          const defaultTag: number | null = null;\n          syncTree.listenProvider_.stopListening(\n            syncTreeQueryForListening_(query),\n            defaultTag\n          );\n        } else {\n          removed.forEach((queryToRemove: QueryContext) => {\n            const tagToRemove = syncTree.queryToTagMap.get(\n              syncTreeMakeQueryKey_(queryToRemove)\n            );\n            syncTree.listenProvider_.stopListening(\n              syncTreeQueryForListening_(queryToRemove),\n              tagToRemove\n            );\n          });\n        }\n      }\n    }\n    // Now, clear all of the tags we're tracking for the removed listens\n    syncTreeRemoveTags_(syncTree, removed);\n  } else {\n    // No-op, this listener must've been already removed\n  }\n  return cancelEvents;\n}\n\n/**\n * Apply new server data for the specified tagged query.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyTaggedQueryOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  snap: Node,\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey != null) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const op = new Overwrite(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath,\n      snap\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // Query must have been removed already\n    return [];\n  }\n}\n\n/**\n * Apply server data to be merged in for the specified tagged query.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyTaggedQueryMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const changeTree = ImmutableTree.fromObject(changedChildren);\n    const op = new Merge(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath,\n      changeTree\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // We've already removed the query. No big deal, ignore the update\n    return [];\n  }\n}\n\n/**\n * Add an event callback for the specified query.\n *\n * @returns Events to raise.\n */\nexport function syncTreeAddEventRegistration(\n  syncTree: SyncTree,\n  query: QueryContext,\n  eventRegistration: EventRegistration,\n  skipSetupListener = false\n): Event[] {\n  const path = query._path;\n\n  let serverCache: Node | null = null;\n  let foundAncestorDefaultView = false;\n  // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n  // Consider optimizing this once there's a better understanding of what actual behavior will be.\n  syncTree.syncPointTree_.foreachOnPath(path, (pathToSyncPoint, sp) => {\n    const relativePath = newRelativePath(pathToSyncPoint, path);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(sp, relativePath);\n    foundAncestorDefaultView =\n      foundAncestorDefaultView || syncPointHasCompleteView(sp);\n  });\n  let syncPoint = syncTree.syncPointTree_.get(path);\n  if (!syncPoint) {\n    syncPoint = new SyncPoint();\n    syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\n  } else {\n    foundAncestorDefaultView =\n      foundAncestorDefaultView || syncPointHasCompleteView(syncPoint);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n\n  let serverCacheComplete;\n  if (serverCache != null) {\n    serverCacheComplete = true;\n  } else {\n    serverCacheComplete = false;\n    serverCache = ChildrenNode.EMPTY_NODE;\n    const subtree = syncTree.syncPointTree_.subtree(path);\n    subtree.foreachChild((childName, childSyncPoint) => {\n      const completeCache = syncPointGetCompleteServerCache(\n        childSyncPoint,\n        newEmptyPath()\n      );\n      if (completeCache) {\n        serverCache = serverCache.updateImmediateChild(\n          childName,\n          completeCache\n        );\n      }\n    });\n  }\n\n  const viewAlreadyExists = syncPointViewExistsForQuery(syncPoint, query);\n  if (!viewAlreadyExists && !query._queryParams.loadsAllData()) {\n    // We need to track a tag for this query\n    const queryKey = syncTreeMakeQueryKey_(query);\n    assert(\n      !syncTree.queryToTagMap.has(queryKey),\n      'View does not exist, but we have a tag'\n    );\n    const tag = syncTreeGetNextQueryTag_();\n    syncTree.queryToTagMap.set(queryKey, tag);\n    syncTree.tagToQueryMap.set(tag, queryKey);\n  }\n  const writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, path);\n  let events = syncPointAddEventRegistration(\n    syncPoint,\n    query,\n    eventRegistration,\n    writesCache,\n    serverCache,\n    serverCacheComplete\n  );\n  if (!viewAlreadyExists && !foundAncestorDefaultView && !skipSetupListener) {\n    const view = syncPointViewForQuery(syncPoint, query);\n    events = events.concat(syncTreeSetupListener_(syncTree, query, view));\n  }\n  return events;\n}\n\n/**\n * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\n * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\n * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\n *     <incremented total> as the write is applied locally and then acknowledged at the server.\n *\n * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\n *\n * @param path - The path to the data we want\n * @param writeIdsToExclude - A specific set to be excluded\n */\nexport function syncTreeCalcCompleteEventCache(\n  syncTree: SyncTree,\n  path: Path,\n  writeIdsToExclude?: number[]\n): Node {\n  const includeHiddenSets = true;\n  const writeTree = syncTree.pendingWriteTree_;\n  const serverCache = syncTree.syncPointTree_.findOnPath(\n    path,\n    (pathSoFar, syncPoint) => {\n      const relativePath = newRelativePath(pathSoFar, path);\n      const serverCache = syncPointGetCompleteServerCache(\n        syncPoint,\n        relativePath\n      );\n      if (serverCache) {\n        return serverCache;\n      }\n    }\n  );\n  return writeTreeCalcCompleteEventCache(\n    writeTree,\n    path,\n    serverCache,\n    writeIdsToExclude,\n    includeHiddenSets\n  );\n}\n\nexport function syncTreeGetServerValue(\n  syncTree: SyncTree,\n  query: QueryContext\n): Node | null {\n  const path = query._path;\n  let serverCache: Node | null = null;\n  // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n  // Consider optimizing this once there's a better understanding of what actual behavior will be.\n  syncTree.syncPointTree_.foreachOnPath(path, (pathToSyncPoint, sp) => {\n    const relativePath = newRelativePath(pathToSyncPoint, path);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(sp, relativePath);\n  });\n  let syncPoint = syncTree.syncPointTree_.get(path);\n  if (!syncPoint) {\n    syncPoint = new SyncPoint();\n    syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\n  } else {\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n  const serverCacheComplete = serverCache != null;\n  const serverCacheNode: CacheNode | null = serverCacheComplete\n    ? new CacheNode(serverCache, true, false)\n    : null;\n  const writesCache: WriteTreeRef | null = writeTreeChildWrites(\n    syncTree.pendingWriteTree_,\n    query._path\n  );\n  const view: View = syncPointGetView(\n    syncPoint,\n    query,\n    writesCache,\n    serverCacheComplete ? serverCacheNode.getNode() : ChildrenNode.EMPTY_NODE,\n    serverCacheComplete\n  );\n  return viewGetCompleteNode(view);\n}\n\n/**\n * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\n *\n * NOTES:\n * - Descendant SyncPoints will be visited first (since we raise events depth-first).\n *\n * - We call applyOperation() on each SyncPoint passing three things:\n *   1. A version of the Operation that has been made relative to the SyncPoint location.\n *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\n *   3. A snapshot Node with cached server data, if we have it.\n *\n * - We concatenate all of the events returned by each SyncPoint and return the result.\n */\nfunction syncTreeApplyOperationToSyncPoints_(\n  syncTree: SyncTree,\n  operation: Operation\n): Event[] {\n  return syncTreeApplyOperationHelper_(\n    operation,\n    syncTree.syncPointTree_,\n    /*serverCache=*/ null,\n    writeTreeChildWrites(syncTree.pendingWriteTree_, newEmptyPath())\n  );\n}\n\n/**\n * Recursive helper for applyOperationToSyncPoints_\n */\nfunction syncTreeApplyOperationHelper_(\n  operation: Operation,\n  syncPointTree: ImmutableTree<SyncPoint>,\n  serverCache: Node | null,\n  writesCache: WriteTreeRef\n): Event[] {\n  if (pathIsEmpty(operation.path)) {\n    return syncTreeApplyOperationDescendantsHelper_(\n      operation,\n      syncPointTree,\n      serverCache,\n      writesCache\n    );\n  } else {\n    const syncPoint = syncPointTree.get(newEmptyPath());\n\n    // If we don't have cached server data, see if we can get it from this SyncPoint.\n    if (serverCache == null && syncPoint != null) {\n      serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n    }\n\n    let events: Event[] = [];\n    const childName = pathGetFront(operation.path);\n    const childOperation = operation.operationForChild(childName);\n    const childTree = syncPointTree.children.get(childName);\n    if (childTree && childOperation) {\n      const childServerCache = serverCache\n        ? serverCache.getImmediateChild(childName)\n        : null;\n      const childWritesCache = writeTreeRefChild(writesCache, childName);\n      events = events.concat(\n        syncTreeApplyOperationHelper_(\n          childOperation,\n          childTree,\n          childServerCache,\n          childWritesCache\n        )\n      );\n    }\n\n    if (syncPoint) {\n      events = events.concat(\n        syncPointApplyOperation(syncPoint, operation, writesCache, serverCache)\n      );\n    }\n\n    return events;\n  }\n}\n\n/**\n * Recursive helper for applyOperationToSyncPoints_\n */\nfunction syncTreeApplyOperationDescendantsHelper_(\n  operation: Operation,\n  syncPointTree: ImmutableTree<SyncPoint>,\n  serverCache: Node | null,\n  writesCache: WriteTreeRef\n): Event[] {\n  const syncPoint = syncPointTree.get(newEmptyPath());\n\n  // If we don't have cached server data, see if we can get it from this SyncPoint.\n  if (serverCache == null && syncPoint != null) {\n    serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n\n  let events: Event[] = [];\n  syncPointTree.children.inorderTraversal((childName, childTree) => {\n    const childServerCache = serverCache\n      ? serverCache.getImmediateChild(childName)\n      : null;\n    const childWritesCache = writeTreeRefChild(writesCache, childName);\n    const childOperation = operation.operationForChild(childName);\n    if (childOperation) {\n      events = events.concat(\n        syncTreeApplyOperationDescendantsHelper_(\n          childOperation,\n          childTree,\n          childServerCache,\n          childWritesCache\n        )\n      );\n    }\n  });\n\n  if (syncPoint) {\n    events = events.concat(\n      syncPointApplyOperation(syncPoint, operation, writesCache, serverCache)\n    );\n  }\n\n  return events;\n}\n\nfunction syncTreeCreateListenerForView_(\n  syncTree: SyncTree,\n  view: View\n): { hashFn(): string; onComplete(a: string, b?: unknown): Event[] } {\n  const query = view.query;\n  const tag = syncTreeTagForQuery(syncTree, query);\n\n  return {\n    hashFn: () => {\n      const cache = viewGetServerCache(view) || ChildrenNode.EMPTY_NODE;\n      return cache.hash();\n    },\n    onComplete: (status: string): Event[] => {\n      if (status === 'ok') {\n        if (tag) {\n          return syncTreeApplyTaggedListenComplete(syncTree, query._path, tag);\n        } else {\n          return syncTreeApplyListenComplete(syncTree, query._path);\n        }\n      } else {\n        // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\n        // Note that this may need to be scoped to just this listener if we change permissions on filtered children\n        const error = errorForServerCode(status, query);\n        return syncTreeRemoveEventRegistration(\n          syncTree,\n          query,\n          /*eventRegistration*/ null,\n          error\n        );\n      }\n    }\n  };\n}\n\n/**\n * Return the tag associated with the given query.\n */\nexport function syncTreeTagForQuery(\n  syncTree: SyncTree,\n  query: QueryContext\n): number | null {\n  const queryKey = syncTreeMakeQueryKey_(query);\n  return syncTree.queryToTagMap.get(queryKey);\n}\n\n/**\n * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\n */\nfunction syncTreeMakeQueryKey_(query: QueryContext): string {\n  return query._path.toString() + '$' + query._queryIdentifier;\n}\n\n/**\n * Return the query associated with the given tag, if we have one\n */\nfunction syncTreeQueryKeyForTag_(\n  syncTree: SyncTree,\n  tag: number\n): string | null {\n  return syncTree.tagToQueryMap.get(tag);\n}\n\n/**\n * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\n */\nfunction syncTreeParseQueryKey_(queryKey: string): {\n  queryId: string;\n  path: Path;\n} {\n  const splitIndex = queryKey.indexOf('$');\n  assert(\n    splitIndex !== -1 && splitIndex < queryKey.length - 1,\n    'Bad queryKey.'\n  );\n  return {\n    queryId: queryKey.substr(splitIndex + 1),\n    path: new Path(queryKey.substr(0, splitIndex))\n  };\n}\n\n/**\n * A helper method to apply tagged operations\n */\nfunction syncTreeApplyTaggedOperation_(\n  syncTree: SyncTree,\n  queryPath: Path,\n  operation: Operation\n): Event[] {\n  const syncPoint = syncTree.syncPointTree_.get(queryPath);\n  assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\n  const writesCache = writeTreeChildWrites(\n    syncTree.pendingWriteTree_,\n    queryPath\n  );\n  return syncPointApplyOperation(syncPoint, operation, writesCache, null);\n}\n\n/**\n * This collapses multiple unfiltered views into a single view, since we only need a single\n * listener for them.\n */\nfunction syncTreeCollectDistinctViewsForSubTree_(\n  subtree: ImmutableTree<SyncPoint>\n): View[] {\n  return subtree.fold<View[]>((relativePath, maybeChildSyncPoint, childMap) => {\n    if (maybeChildSyncPoint && syncPointHasCompleteView(maybeChildSyncPoint)) {\n      const completeView = syncPointGetCompleteView(maybeChildSyncPoint);\n      return [completeView];\n    } else {\n      // No complete view here, flatten any deeper listens into an array\n      let views: View[] = [];\n      if (maybeChildSyncPoint) {\n        views = syncPointGetQueryViews(maybeChildSyncPoint);\n      }\n      each(childMap, (_key: string, childViews: View[]) => {\n        views = views.concat(childViews);\n      });\n      return views;\n    }\n  });\n}\n\n/**\n * Normalizes a query to a query we send the server for listening\n *\n * @returns The normalized query\n */\nfunction syncTreeQueryForListening_(query: QueryContext): QueryContext {\n  if (query._queryParams.loadsAllData() && !query._queryParams.isDefault()) {\n    // We treat queries that load all data as default queries\n    // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\n    // from Query\n    return new (syncTreeGetReferenceConstructor())(query._repo, query._path);\n  } else {\n    return query;\n  }\n}\n\nfunction syncTreeRemoveTags_(syncTree: SyncTree, queries: QueryContext[]) {\n  for (let j = 0; j < queries.length; ++j) {\n    const removedQuery = queries[j];\n    if (!removedQuery._queryParams.loadsAllData()) {\n      // We should have a tag for this\n      const removedQueryKey = syncTreeMakeQueryKey_(removedQuery);\n      const removedQueryTag = syncTree.queryToTagMap.get(removedQueryKey);\n      syncTree.queryToTagMap.delete(removedQueryKey);\n      syncTree.tagToQueryMap.delete(removedQueryTag);\n    }\n  }\n}\n\n/**\n * Static accessor for query tags.\n */\nfunction syncTreeGetNextQueryTag_(): number {\n  return syncTreeNextQueryTag_++;\n}\n\n/**\n * For a given new listen, manage the de-duplication of outstanding subscriptions.\n *\n * @returns This method can return events to support synchronous data sources\n */\nfunction syncTreeSetupListener_(\n  syncTree: SyncTree,\n  query: QueryContext,\n  view: View\n): Event[] {\n  const path = query._path;\n  const tag = syncTreeTagForQuery(syncTree, query);\n  const listener = syncTreeCreateListenerForView_(syncTree, view);\n\n  const events = syncTree.listenProvider_.startListening(\n    syncTreeQueryForListening_(query),\n    tag,\n    listener.hashFn,\n    listener.onComplete\n  );\n\n  const subtree = syncTree.syncPointTree_.subtree(path);\n  // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\n  // may need to shadow other listens as well.\n  if (tag) {\n    assert(\n      !syncPointHasCompleteView(subtree.value),\n      \"If we're adding a query, it shouldn't be shadowed\"\n    );\n  } else {\n    // Shadow everything at or below this location, this is a default listener.\n    const queriesToStop = subtree.fold<QueryContext[]>(\n      (relativePath, maybeChildSyncPoint, childMap) => {\n        if (\n          !pathIsEmpty(relativePath) &&\n          maybeChildSyncPoint &&\n          syncPointHasCompleteView(maybeChildSyncPoint)\n        ) {\n          return [syncPointGetCompleteView(maybeChildSyncPoint).query];\n        } else {\n          // No default listener here, flatten any deeper queries into an array\n          let queries: QueryContext[] = [];\n          if (maybeChildSyncPoint) {\n            queries = queries.concat(\n              syncPointGetQueryViews(maybeChildSyncPoint).map(\n                view => view.query\n              )\n            );\n          }\n          each(childMap, (_key: string, childQueries: QueryContext[]) => {\n            queries = queries.concat(childQueries);\n          });\n          return queries;\n        }\n      }\n    );\n    for (let i = 0; i < queriesToStop.length; ++i) {\n      const queryToStop = queriesToStop[i];\n      syncTree.listenProvider_.stopListening(\n        syncTreeQueryForListening_(queryToStop),\n        syncTreeTagForQuery(syncTree, queryToStop)\n      );\n    }\n  }\n  return events;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { PRIORITY_INDEX } from '../snap/indexes/PriorityIndex';\nimport { LeafNode } from '../snap/LeafNode';\nimport { Node } from '../snap/Node';\nimport { nodeFromJSON } from '../snap/nodeFromJSON';\nimport { SyncTree, syncTreeCalcCompleteEventCache } from '../SyncTree';\n\nimport { Indexable } from './misc';\nimport { Path, pathChild } from './Path';\n\n/* It's critical for performance that we do not calculate actual values from a SyncTree\n * unless and until the value is needed. Because we expose both a SyncTree and Node\n * version of deferred value resolution, we ned a wrapper class that will let us share\n * code.\n *\n * @see https://github.com/firebase/firebase-js-sdk/issues/2487\n */\ninterface ValueProvider {\n  getImmediateChild(childName: string): ValueProvider;\n  node(): Node;\n}\n\nclass ExistingValueProvider implements ValueProvider {\n  constructor(readonly node_: Node) {}\n\n  getImmediateChild(childName: string): ValueProvider {\n    const child = this.node_.getImmediateChild(childName);\n    return new ExistingValueProvider(child);\n  }\n\n  node(): Node {\n    return this.node_;\n  }\n}\n\nclass DeferredValueProvider implements ValueProvider {\n  private syncTree_: SyncTree;\n  private path_: Path;\n\n  constructor(syncTree: SyncTree, path: Path) {\n    this.syncTree_ = syncTree;\n    this.path_ = path;\n  }\n\n  getImmediateChild(childName: string): ValueProvider {\n    const childPath = pathChild(this.path_, childName);\n    return new DeferredValueProvider(this.syncTree_, childPath);\n  }\n\n  node(): Node {\n    return syncTreeCalcCompleteEventCache(this.syncTree_, this.path_);\n  }\n}\n\n/**\n * Generate placeholders for deferred values.\n */\nexport const generateWithValues = function (\n  values: {\n    [k: string]: unknown;\n  } | null\n): { [k: string]: unknown } {\n  values = values || {};\n  values['timestamp'] = values['timestamp'] || new Date().getTime();\n  return values;\n};\n\n/**\n * Value to use when firing local events. When writing server values, fire\n * local events with an approximate value, otherwise return value as-is.\n */\nexport const resolveDeferredLeafValue = function (\n  value: { [k: string]: unknown } | string | number | boolean,\n  existingVal: ValueProvider,\n  serverValues: { [k: string]: unknown }\n): string | number | boolean {\n  if (!value || typeof value !== 'object') {\n    return value as string | number | boolean;\n  }\n  assert('.sv' in value, 'Unexpected leaf node or priority contents');\n\n  if (typeof value['.sv'] === 'string') {\n    return resolveScalarDeferredValue(value['.sv'], existingVal, serverValues);\n  } else if (typeof value['.sv'] === 'object') {\n    return resolveComplexDeferredValue(value['.sv'], existingVal, serverValues);\n  } else {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(value, null, 2));\n  }\n};\n\nconst resolveScalarDeferredValue = function (\n  op: string,\n  existing: ValueProvider,\n  serverValues: { [k: string]: unknown }\n): string | number | boolean {\n  switch (op) {\n    case 'timestamp':\n      return serverValues['timestamp'] as string | number | boolean;\n    default:\n      assert(false, 'Unexpected server value: ' + op);\n  }\n};\n\nconst resolveComplexDeferredValue = function (\n  op: object,\n  existing: ValueProvider,\n  unused: { [k: string]: unknown }\n): string | number | boolean {\n  if (!op.hasOwnProperty('increment')) {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(op, null, 2));\n  }\n  const delta = op['increment'];\n  if (typeof delta !== 'number') {\n    assert(false, 'Unexpected increment value: ' + delta);\n  }\n\n  const existingNode = existing.node();\n  assert(\n    existingNode !== null && typeof existingNode !== 'undefined',\n    'Expected ChildrenNode.EMPTY_NODE for nulls'\n  );\n\n  // Incrementing a non-number sets the value to the incremented amount\n  if (!existingNode.isLeafNode()) {\n    return delta;\n  }\n\n  const leaf = existingNode as LeafNode;\n  const existingVal = leaf.getValue();\n  if (typeof existingVal !== 'number') {\n    return delta;\n  }\n\n  // No need to do over/underflow arithmetic here because JS only handles floats under the covers\n  return existingVal + delta;\n};\n\n/**\n * Recursively replace all deferred values and priorities in the tree with the\n * specified generated replacement values.\n * @param path - path to which write is relative\n * @param node - new data written at path\n * @param syncTree - current data\n */\nexport const resolveDeferredValueTree = function (\n  path: Path,\n  node: Node,\n  syncTree: SyncTree,\n  serverValues: Indexable\n): Node {\n  return resolveDeferredValue(\n    node,\n    new DeferredValueProvider(syncTree, path),\n    serverValues\n  );\n};\n\n/**\n * Recursively replace all deferred values and priorities in the node with the\n * specified generated replacement values.  If there are no server values in the node,\n * it'll be returned as-is.\n */\nexport const resolveDeferredValueSnapshot = function (\n  node: Node,\n  existing: Node,\n  serverValues: Indexable\n): Node {\n  return resolveDeferredValue(\n    node,\n    new ExistingValueProvider(existing),\n    serverValues\n  );\n};\n\nfunction resolveDeferredValue(\n  node: Node,\n  existingVal: ValueProvider,\n  serverValues: Indexable\n): Node {\n  const rawPri = node.getPriority().val() as\n    | Indexable\n    | boolean\n    | null\n    | number\n    | string;\n  const priority = resolveDeferredLeafValue(\n    rawPri,\n    existingVal.getImmediateChild('.priority'),\n    serverValues\n  );\n  let newNode: Node;\n\n  if (node.isLeafNode()) {\n    const leafNode = node as LeafNode;\n    const value = resolveDeferredLeafValue(\n      leafNode.getValue(),\n      existingVal,\n      serverValues\n    );\n    if (\n      value !== leafNode.getValue() ||\n      priority !== leafNode.getPriority().val()\n    ) {\n      return new LeafNode(value, nodeFromJSON(priority));\n    } else {\n      return node;\n    }\n  } else {\n    const childrenNode = node as ChildrenNode;\n    newNode = childrenNode;\n    if (priority !== childrenNode.getPriority().val()) {\n      newNode = newNode.updatePriority(new LeafNode(priority));\n    }\n    childrenNode.forEachChild(PRIORITY_INDEX, (childName, childNode) => {\n      const newChildNode = resolveDeferredValue(\n        childNode,\n        existingVal.getImmediateChild(childName),\n        serverValues\n      );\n      if (newChildNode !== childNode) {\n        newNode = newNode.updateImmediateChild(childName, newChildNode);\n      }\n    });\n    return newNode;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains, safeGet } from '@firebase/util';\n\nimport { Path, pathGetFront, pathPopFront } from './Path';\nimport { each } from './util';\n\n/**\n * Node in a Tree.\n */\nexport interface TreeNode<T> {\n  // TODO: Consider making accessors that create children and value lazily or\n  // separate Internal / Leaf 'types'.\n  children: Record<string, TreeNode<T>>;\n  childCount: number;\n  value?: T;\n}\n\n/**\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\n * children.\n */\nexport class Tree<T> {\n  /**\n   * @param name - Optional name of the node.\n   * @param parent - Optional parent node.\n   * @param node - Optional node to wrap.\n   */\n  constructor(\n    readonly name: string = '',\n    readonly parent: Tree<T> | null = null,\n    public node: TreeNode<T> = { children: {}, childCount: 0 }\n  ) {}\n}\n\n/**\n * Returns a sub-Tree for the given path.\n *\n * @param pathObj - Path to look up.\n * @returns Tree for path.\n */\nexport function treeSubTree<T>(tree: Tree<T>, pathObj: string | Path): Tree<T> {\n  // TODO: Require pathObj to be Path?\n  let path = pathObj instanceof Path ? pathObj : new Path(pathObj);\n  let child = tree,\n    next = pathGetFront(path);\n  while (next !== null) {\n    const childNode = safeGet(child.node.children, next) || {\n      children: {},\n      childCount: 0\n    };\n    child = new Tree<T>(next, child, childNode);\n    path = pathPopFront(path);\n    next = pathGetFront(path);\n  }\n\n  return child;\n}\n\n/**\n * Returns the data associated with this tree node.\n *\n * @returns The data or null if no data exists.\n */\nexport function treeGetValue<T>(tree: Tree<T>): T | undefined {\n  return tree.node.value;\n}\n\n/**\n * Sets data to this tree node.\n *\n * @param value - Value to set.\n */\nexport function treeSetValue<T>(tree: Tree<T>, value: T | undefined): void {\n  tree.node.value = value;\n  treeUpdateParents(tree);\n}\n\n/**\n * @returns Whether the tree has any children.\n */\nexport function treeHasChildren<T>(tree: Tree<T>): boolean {\n  return tree.node.childCount > 0;\n}\n\n/**\n * @returns Whethe rthe tree is empty (no value or children).\n */\nexport function treeIsEmpty<T>(tree: Tree<T>): boolean {\n  return treeGetValue(tree) === undefined && !treeHasChildren(tree);\n}\n\n/**\n * Calls action for each child of this tree node.\n *\n * @param action - Action to be called for each child.\n */\nexport function treeForEachChild<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void\n): void {\n  each(tree.node.children, (child: string, childTree: TreeNode<T>) => {\n    action(new Tree<T>(child, tree, childTree));\n  });\n}\n\n/**\n * Does a depth-first traversal of this node's descendants, calling action for each one.\n *\n * @param action - Action to be called for each child.\n * @param includeSelf - Whether to call action on this node as well. Defaults to\n *   false.\n * @param childrenFirst - Whether to call action on children before calling it on\n *   parent.\n */\nexport function treeForEachDescendant<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void,\n  includeSelf?: boolean,\n  childrenFirst?: boolean\n): void {\n  if (includeSelf && !childrenFirst) {\n    action(tree);\n  }\n\n  treeForEachChild(tree, child => {\n    treeForEachDescendant(child, action, true, childrenFirst);\n  });\n\n  if (includeSelf && childrenFirst) {\n    action(tree);\n  }\n}\n\n/**\n * Calls action on each ancestor node.\n *\n * @param action - Action to be called on each parent; return\n *   true to abort.\n * @param includeSelf - Whether to call action on this node as well.\n * @returns true if the action callback returned true.\n */\nexport function treeForEachAncestor<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => unknown,\n  includeSelf?: boolean\n): boolean {\n  let node = includeSelf ? tree : tree.parent;\n  while (node !== null) {\n    if (action(node)) {\n      return true;\n    }\n    node = node.parent;\n  }\n  return false;\n}\n\n/**\n * Does a depth-first traversal of this node's descendants.  When a descendant with a value\n * is found, action is called on it and traversal does not continue inside the node.\n * Action is *not* called on this node.\n *\n * @param action - Action to be called for each child.\n */\nexport function treeForEachImmediateDescendantWithValue<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void\n): void {\n  treeForEachChild(tree, child => {\n    if (treeGetValue(child) !== undefined) {\n      action(child);\n    } else {\n      treeForEachImmediateDescendantWithValue(child, action);\n    }\n  });\n}\n\n/**\n * @returns The path of this tree node, as a Path.\n */\nexport function treeGetPath<T>(tree: Tree<T>) {\n  return new Path(\n    tree.parent === null\n      ? tree.name\n      : treeGetPath(tree.parent) + '/' + tree.name\n  );\n}\n\n/**\n * Adds or removes this child from its parent based on whether it's empty or not.\n */\nfunction treeUpdateParents<T>(tree: Tree<T>) {\n  if (tree.parent !== null) {\n    treeUpdateChild(tree.parent, tree.name, tree);\n  }\n}\n\n/**\n * Adds or removes the passed child to this tree node, depending on whether it's empty.\n *\n * @param childName - The name of the child to update.\n * @param child - The child to update.\n */\nfunction treeUpdateChild<T>(tree: Tree<T>, childName: string, child: Tree<T>) {\n  const childEmpty = treeIsEmpty(child);\n  const childExists = contains(tree.node.children, childName);\n  if (childEmpty && childExists) {\n    delete tree.node.children[childName];\n    tree.node.childCount--;\n    treeUpdateParents(tree);\n  } else if (!childEmpty && !childExists) {\n    tree.node.children[childName] = child.node;\n    tree.node.childCount++;\n    treeUpdateParents(tree);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  contains,\n  errorPrefix as errorPrefixFxn,\n  safeGet,\n  stringLength\n} from '@firebase/util';\n\nimport { RepoInfo } from '../RepoInfo';\n\nimport {\n  Path,\n  pathChild,\n  pathCompare,\n  pathContains,\n  pathGetBack,\n  pathGetFront,\n  pathSlice,\n  ValidationPath,\n  validationPathPop,\n  validationPathPush,\n  validationPathToErrorString\n} from './Path';\nimport { each, isInvalidJSONNumber } from './util';\n\n/**\n * True for invalid Firebase keys\n */\nexport const INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\n\n/**\n * True for invalid Firebase paths.\n * Allows '/' in paths.\n */\nexport const INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\n\n/**\n * Maximum number of characters to allow in leaf value\n */\nexport const MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\n\nexport const isValidKey = function (key: unknown): boolean {\n  return (\n    typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key)\n  );\n};\n\nexport const isValidPathString = function (pathString: string): boolean {\n  return (\n    typeof pathString === 'string' &&\n    pathString.length !== 0 &&\n    !INVALID_PATH_REGEX_.test(pathString)\n  );\n};\n\nexport const isValidRootPathString = function (pathString: string): boolean {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  return isValidPathString(pathString);\n};\n\nexport const isValidPriority = function (priority: unknown): boolean {\n  return (\n    priority === null ||\n    typeof priority === 'string' ||\n    (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\n    (priority &&\n      typeof priority === 'object' &&\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      contains(priority as any, '.sv'))\n  );\n};\n\n/**\n * Pre-validate a datum passed as an argument to Firebase function.\n */\nexport const validateFirebaseDataArg = function (\n  fnName: string,\n  value: unknown,\n  path: Path,\n  optional: boolean\n) {\n  if (optional && value === undefined) {\n    return;\n  }\n\n  validateFirebaseData(errorPrefixFxn(fnName, 'value'), value, path);\n};\n\n/**\n * Validate a data object client-side before sending to server.\n */\nexport const validateFirebaseData = function (\n  errorPrefix: string,\n  data: unknown,\n  path_: Path | ValidationPath\n) {\n  const path =\n    path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\n\n  if (data === undefined) {\n    throw new Error(\n      errorPrefix + 'contains undefined ' + validationPathToErrorString(path)\n    );\n  }\n  if (typeof data === 'function') {\n    throw new Error(\n      errorPrefix +\n        'contains a function ' +\n        validationPathToErrorString(path) +\n        ' with contents = ' +\n        data.toString()\n    );\n  }\n  if (isInvalidJSONNumber(data)) {\n    throw new Error(\n      errorPrefix +\n        'contains ' +\n        data.toString() +\n        ' ' +\n        validationPathToErrorString(path)\n    );\n  }\n\n  // Check max leaf size, but try to avoid the utf8 conversion if we can.\n  if (\n    typeof data === 'string' &&\n    data.length > MAX_LEAF_SIZE_ / 3 &&\n    stringLength(data) > MAX_LEAF_SIZE_\n  ) {\n    throw new Error(\n      errorPrefix +\n        'contains a string greater than ' +\n        MAX_LEAF_SIZE_ +\n        ' utf8 bytes ' +\n        validationPathToErrorString(path) +\n        \" ('\" +\n        data.substring(0, 50) +\n        \"...')\"\n    );\n  }\n\n  // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\n  // to save extra walking of large objects.\n  if (data && typeof data === 'object') {\n    let hasDotValue = false;\n    let hasActualChild = false;\n    each(data, (key: string, value: unknown) => {\n      if (key === '.value') {\n        hasDotValue = true;\n      } else if (key !== '.priority' && key !== '.sv') {\n        hasActualChild = true;\n        if (!isValidKey(key)) {\n          throw new Error(\n            errorPrefix +\n              ' contains an invalid key (' +\n              key +\n              ') ' +\n              validationPathToErrorString(path) +\n              '.  Keys must be non-empty strings ' +\n              'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"'\n          );\n        }\n      }\n\n      validationPathPush(path, key);\n      validateFirebaseData(errorPrefix, value, path);\n      validationPathPop(path);\n    });\n\n    if (hasDotValue && hasActualChild) {\n      throw new Error(\n        errorPrefix +\n          ' contains \".value\" child ' +\n          validationPathToErrorString(path) +\n          ' in addition to actual children.'\n      );\n    }\n  }\n};\n\n/**\n * Pre-validate paths passed in the firebase function.\n */\nexport const validateFirebaseMergePaths = function (\n  errorPrefix: string,\n  mergePaths: Path[]\n) {\n  let i, curPath: Path;\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    const keys = pathSlice(curPath);\n    for (let j = 0; j < keys.length; j++) {\n      if (keys[j] === '.priority' && j === keys.length - 1) {\n        // .priority is OK\n      } else if (!isValidKey(keys[j])) {\n        throw new Error(\n          errorPrefix +\n            'contains an invalid key (' +\n            keys[j] +\n            ') in path ' +\n            curPath.toString() +\n            '. Keys must be non-empty strings ' +\n            'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"'\n        );\n      }\n    }\n  }\n\n  // Check that update keys are not descendants of each other.\n  // We rely on the property that sorting guarantees that ancestors come\n  // right before descendants.\n  mergePaths.sort(pathCompare);\n  let prevPath: Path | null = null;\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    if (prevPath !== null && pathContains(prevPath, curPath)) {\n      throw new Error(\n        errorPrefix +\n          'contains a path ' +\n          prevPath.toString() +\n          ' that is ancestor of another path ' +\n          curPath.toString()\n      );\n    }\n    prevPath = curPath;\n  }\n};\n\n/**\n * pre-validate an object passed as an argument to firebase function (\n * must be an object - e.g. for firebase.update()).\n */\nexport const validateFirebaseMergeDataArg = function (\n  fnName: string,\n  data: unknown,\n  path: Path,\n  optional: boolean\n) {\n  if (optional && data === undefined) {\n    return;\n  }\n\n  const errorPrefix = errorPrefixFxn(fnName, 'values');\n\n  if (!(data && typeof data === 'object') || Array.isArray(data)) {\n    throw new Error(\n      errorPrefix + ' must be an object containing the children to replace.'\n    );\n  }\n\n  const mergePaths: Path[] = [];\n  each(data, (key: string, value: unknown) => {\n    const curPath = new Path(key);\n    validateFirebaseData(errorPrefix, value, pathChild(path, curPath));\n    if (pathGetBack(curPath) === '.priority') {\n      if (!isValidPriority(value)) {\n        throw new Error(\n          errorPrefix +\n            \"contains an invalid value for '\" +\n            curPath.toString() +\n            \"', which must be a valid \" +\n            'Firebase priority (a string, finite number, server value, or null).'\n        );\n      }\n    }\n    mergePaths.push(curPath);\n  });\n  validateFirebaseMergePaths(errorPrefix, mergePaths);\n};\n\nexport const validatePriority = function (\n  fnName: string,\n  priority: unknown,\n  optional: boolean\n) {\n  if (optional && priority === undefined) {\n    return;\n  }\n  if (isInvalidJSONNumber(priority)) {\n    throw new Error(\n      errorPrefixFxn(fnName, 'priority') +\n        'is ' +\n        priority.toString() +\n        ', but must be a valid Firebase priority (a string, finite number, ' +\n        'server value, or null).'\n    );\n  }\n  // Special case to allow importing data with a .sv.\n  if (!isValidPriority(priority)) {\n    throw new Error(\n      errorPrefixFxn(fnName, 'priority') +\n        'must be a valid Firebase priority ' +\n        '(a string, finite number, server value, or null).'\n    );\n  }\n};\n\nexport const validateKey = function (\n  fnName: string,\n  argumentName: string,\n  key: string,\n  optional: boolean\n) {\n  if (optional && key === undefined) {\n    return;\n  }\n  if (!isValidKey(key)) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) +\n        'was an invalid key = \"' +\n        key +\n        '\".  Firebase keys must be non-empty strings and ' +\n        'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").'\n    );\n  }\n};\n\n/**\n * @internal\n */\nexport const validatePathString = function (\n  fnName: string,\n  argumentName: string,\n  pathString: string,\n  optional: boolean\n) {\n  if (optional && pathString === undefined) {\n    return;\n  }\n\n  if (!isValidPathString(pathString)) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) +\n        'was an invalid path = \"' +\n        pathString +\n        '\". Paths must be non-empty strings and ' +\n        'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"'\n    );\n  }\n};\n\nexport const validateRootPathString = function (\n  fnName: string,\n  argumentName: string,\n  pathString: string,\n  optional: boolean\n) {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  validatePathString(fnName, argumentName, pathString, optional);\n};\n\n/**\n * @internal\n */\nexport const validateWritablePath = function (fnName: string, path: Path) {\n  if (pathGetFront(path) === '.info') {\n    throw new Error(fnName + \" failed = Can't modify data under /.info/\");\n  }\n};\n\nexport const validateUrl = function (\n  fnName: string,\n  parsedUrl: { repoInfo: RepoInfo; path: Path }\n) {\n  // TODO = Validate server better.\n  const pathString = parsedUrl.path.toString();\n  if (\n    !(typeof parsedUrl.repoInfo.host === 'string') ||\n    parsedUrl.repoInfo.host.length === 0 ||\n    (!isValidKey(parsedUrl.repoInfo.namespace) &&\n      parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\n    (pathString.length !== 0 && !isValidRootPathString(pathString))\n  ) {\n    throw new Error(\n      errorPrefixFxn(fnName, 'url') +\n        'must be a valid firebase URL and ' +\n        'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".'\n    );\n  }\n};\n\nexport const validateString = function (\n  fnName: string,\n  argumentName: string,\n  string: unknown,\n  optional: boolean\n) {\n  if (optional && string === undefined) {\n    return;\n  }\n  if (!(typeof string === 'string')) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) + 'must be a valid string.'\n    );\n  }\n};\n\nexport const validateObject = function (\n  fnName: string,\n  argumentName: string,\n  obj: unknown,\n  optional: boolean\n) {\n  if (optional && obj === undefined) {\n    return;\n  }\n  if (!(obj && typeof obj === 'object') || obj === null) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) + 'must be a valid object.'\n    );\n  }\n};\n\nexport const validateObjectContainsKey = function (\n  fnName: string,\n  argumentName: string,\n  obj: unknown,\n  key: string,\n  optional: boolean,\n  optType?: string\n) {\n  const objectContainsKey =\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    obj && typeof obj === 'object' && contains(obj as any, key);\n\n  if (!objectContainsKey) {\n    if (optional) {\n      return;\n    } else {\n      throw new Error(\n        errorPrefixFxn(fnName, argumentName) +\n          'must contain the key \"' +\n          key +\n          '\"'\n      );\n    }\n  }\n\n  if (optType) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const val = safeGet(obj as any, key);\n    if (\n      (optType === 'number' && !(typeof val === 'number')) ||\n      (optType === 'string' && !(typeof val === 'string')) ||\n      (optType === 'boolean' && !(typeof val === 'boolean')) ||\n      (optType === 'function' && !(typeof val === 'function')) ||\n      (optType === 'object' && !(typeof val === 'object') && val)\n    ) {\n      if (optional) {\n        throw new Error(\n          errorPrefixFxn(fnName, argumentName) +\n            'contains invalid value for key \"' +\n            key +\n            '\" (must be of type \"' +\n            optType +\n            '\")'\n        );\n      } else {\n        throw new Error(\n          errorPrefixFxn(fnName, argumentName) +\n            'must contain the key \"' +\n            key +\n            '\" with type \"' +\n            optType +\n            '\"'\n        );\n      }\n    }\n  }\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path, pathContains, pathEquals } from '../util/Path';\nimport { exceptionGuard, log, logger } from '../util/util';\n\nimport { Event } from './Event';\n\n/**\n * The event queue serves a few purposes:\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\n *    events being queued.\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\n *    left off, ensuring that the events are still raised synchronously and in order.\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\n *    events are raised synchronously.\n *\n * NOTE: This can all go away if/when we move to async events.\n *\n */\nexport class EventQueue {\n  eventLists_: EventList[] = [];\n\n  /**\n   * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\n   */\n  recursionDepth_ = 0;\n}\n\n/**\n * @param eventDataList - The new events to queue.\n */\nexport function eventQueueQueueEvents(\n  eventQueue: EventQueue,\n  eventDataList: Event[]\n) {\n  // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\n  let currList: EventList | null = null;\n  for (let i = 0; i < eventDataList.length; i++) {\n    const data = eventDataList[i];\n    const path = data.getPath();\n    if (currList !== null && !pathEquals(path, currList.path)) {\n      eventQueue.eventLists_.push(currList);\n      currList = null;\n    }\n\n    if (currList === null) {\n      currList = { events: [], path };\n    }\n\n    currList.events.push(data);\n  }\n  if (currList) {\n    eventQueue.eventLists_.push(currList);\n  }\n}\n\n/**\n * Queues the specified events and synchronously raises all events (including previously queued ones)\n * for the specified path.\n *\n * It is assumed that the new events are all for the specified path.\n *\n * @param path - The path to raise events for.\n * @param eventDataList - The new events to raise.\n */\nexport function eventQueueRaiseEventsAtPath(\n  eventQueue: EventQueue,\n  path: Path,\n  eventDataList: Event[]\n) {\n  eventQueueQueueEvents(eventQueue, eventDataList);\n  eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, eventPath =>\n    pathEquals(eventPath, path)\n  );\n}\n\n/**\n * Queues the specified events and synchronously raises all events (including previously queued ones) for\n * locations related to the specified change path (i.e. all ancestors and descendants).\n *\n * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\n *\n * @param changedPath - The path to raise events for.\n * @param eventDataList - The events to raise\n */\nexport function eventQueueRaiseEventsForChangedPath(\n  eventQueue: EventQueue,\n  changedPath: Path,\n  eventDataList: Event[]\n) {\n  eventQueueQueueEvents(eventQueue, eventDataList);\n  eventQueueRaiseQueuedEventsMatchingPredicate(\n    eventQueue,\n    eventPath =>\n      pathContains(eventPath, changedPath) ||\n      pathContains(changedPath, eventPath)\n  );\n}\n\nfunction eventQueueRaiseQueuedEventsMatchingPredicate(\n  eventQueue: EventQueue,\n  predicate: (path: Path) => boolean\n) {\n  eventQueue.recursionDepth_++;\n\n  let sentAll = true;\n  for (let i = 0; i < eventQueue.eventLists_.length; i++) {\n    const eventList = eventQueue.eventLists_[i];\n    if (eventList) {\n      const eventPath = eventList.path;\n      if (predicate(eventPath)) {\n        eventListRaise(eventQueue.eventLists_[i]);\n        eventQueue.eventLists_[i] = null;\n      } else {\n        sentAll = false;\n      }\n    }\n  }\n\n  if (sentAll) {\n    eventQueue.eventLists_ = [];\n  }\n\n  eventQueue.recursionDepth_--;\n}\n\ninterface EventList {\n  events: Event[];\n  path: Path;\n}\n\n/**\n * Iterates through the list and raises each event\n */\nfunction eventListRaise(eventList: EventList) {\n  for (let i = 0; i < eventList.events.length; i++) {\n    const eventData = eventList.events[i];\n    if (eventData !== null) {\n      eventList.events[i] = null;\n      const eventFn = eventData.getEventRunner();\n      if (logger) {\n        log('event: ' + eventData.toString());\n      }\n      exceptionGuard(eventFn);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  contains,\n  isEmpty,\n  map,\n  safeGet,\n  stringify\n} from '@firebase/util';\n\nimport { ValueEventRegistration } from '../api/Reference_impl';\n\nimport { AppCheckTokenProvider } from './AppCheckTokenProvider';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { PersistentConnection } from './PersistentConnection';\nimport { ReadonlyRestClient } from './ReadonlyRestClient';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { nodeFromJSON } from './snap/nodeFromJSON';\nimport { SnapshotHolder } from './SnapshotHolder';\nimport {\n  newSparseSnapshotTree,\n  SparseSnapshotTree,\n  sparseSnapshotTreeForEachTree,\n  sparseSnapshotTreeForget,\n  sparseSnapshotTreeRemember\n} from './SparseSnapshotTree';\nimport { StatsCollection } from './stats/StatsCollection';\nimport { StatsListener } from './stats/StatsListener';\nimport {\n  statsManagerGetCollection,\n  statsManagerGetOrCreateReporter\n} from './stats/StatsManager';\nimport { StatsReporter, statsReporterIncludeStat } from './stats/StatsReporter';\nimport {\n  SyncTree,\n  syncTreeAckUserWrite,\n  syncTreeAddEventRegistration,\n  syncTreeApplyServerMerge,\n  syncTreeApplyServerOverwrite,\n  syncTreeApplyTaggedQueryMerge,\n  syncTreeApplyTaggedQueryOverwrite,\n  syncTreeApplyUserMerge,\n  syncTreeApplyUserOverwrite,\n  syncTreeCalcCompleteEventCache,\n  syncTreeGetServerValue,\n  syncTreeRemoveEventRegistration,\n  syncTreeTagForQuery\n} from './SyncTree';\nimport { Indexable } from './util/misc';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathGetFront,\n  pathPopFront\n} from './util/Path';\nimport {\n  generateWithValues,\n  resolveDeferredValueSnapshot,\n  resolveDeferredValueTree\n} from './util/ServerValues';\nimport {\n  Tree,\n  treeForEachAncestor,\n  treeForEachChild,\n  treeForEachDescendant,\n  treeGetPath,\n  treeGetValue,\n  treeHasChildren,\n  treeSetValue,\n  treeSubTree\n} from './util/Tree';\nimport {\n  beingCrawled,\n  each,\n  exceptionGuard,\n  log,\n  LUIDGenerator,\n  warn\n} from './util/util';\nimport { isValidPriority, validateFirebaseData } from './util/validation';\nimport { Event } from './view/Event';\nimport {\n  EventQueue,\n  eventQueueQueueEvents,\n  eventQueueRaiseEventsAtPath,\n  eventQueueRaiseEventsForChangedPath\n} from './view/EventQueue';\nimport { EventRegistration, QueryContext } from './view/EventRegistration';\n\nconst INTERRUPT_REASON = 'repo_interrupt';\n\n/**\n * If a transaction does not succeed after 25 retries, we abort it. Among other\n * things this ensure that if there's ever a bug causing a mismatch between\n * client / server hashes for some data, we won't retry indefinitely.\n */\nconst MAX_TRANSACTION_RETRIES = 25;\n\nconst enum TransactionStatus {\n  // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\n  // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\n  // mismatched hash.\n  RUN,\n\n  // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\n  // or rejected yet).\n  SENT,\n\n  // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\n  // removed when we get a chance to prune completed ones.\n  COMPLETED,\n\n  // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\n  // If it comes back as unsuccessful, we'll abort it.\n  SENT_NEEDS_ABORT,\n\n  // Temporary state used to mark transactions that need to be aborted.\n  NEEDS_ABORT\n}\n\ninterface Transaction {\n  path: Path;\n  update: (a: unknown) => unknown;\n  onComplete: (\n    error: Error | null,\n    committed: boolean,\n    node: Node | null\n  ) => void;\n  status: TransactionStatus;\n  order: number;\n  applyLocally: boolean;\n  retryCount: number;\n  unwatcher: () => void;\n  abortReason: string | null;\n  currentWriteId: number;\n  currentInputSnapshot: Node | null;\n  currentOutputSnapshotRaw: Node | null;\n  currentOutputSnapshotResolved: Node | null;\n}\n\n/**\n * A connection to a single data repository.\n */\nexport class Repo {\n  /** Key for uniquely identifying this repo, used in RepoManager */\n  readonly key: string;\n\n  dataUpdateCount = 0;\n  infoSyncTree_: SyncTree;\n  serverSyncTree_: SyncTree;\n\n  stats_: StatsCollection;\n  statsListener_: StatsListener | null = null;\n  eventQueue_ = new EventQueue();\n  nextWriteId_ = 1;\n  server_: ServerActions;\n  statsReporter_: StatsReporter;\n  infoData_: SnapshotHolder;\n  interceptServerDataCallback_: ((a: string, b: unknown) => void) | null = null;\n\n  /** A list of data pieces and paths to be set when this client disconnects. */\n  onDisconnect_: SparseSnapshotTree = newSparseSnapshotTree();\n\n  /** Stores queues of outstanding transactions for Firebase locations. */\n  transactionQueueTree_ = new Tree<Transaction[]>();\n\n  // TODO: This should be @private but it's used by test_access.js and internal.js\n  persistentConnection_: PersistentConnection | null = null;\n\n  constructor(\n    public repoInfo_: RepoInfo,\n    public forceRestClient_: boolean,\n    public authTokenProvider_: AuthTokenProvider,\n    public appCheckProvider_: AppCheckTokenProvider\n  ) {\n    // This key is intentionally not updated if RepoInfo is later changed or replaced\n    this.key = this.repoInfo_.toURLString();\n  }\n\n  /**\n   * @returns The URL corresponding to the root of this Firebase.\n   */\n  toString(): string {\n    return (\n      (this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host\n    );\n  }\n}\n\nexport function repoStart(\n  repo: Repo,\n  appId: string,\n  authOverride?: object\n): void {\n  repo.stats_ = statsManagerGetCollection(repo.repoInfo_);\n\n  if (repo.forceRestClient_ || beingCrawled()) {\n    repo.server_ = new ReadonlyRestClient(\n      repo.repoInfo_,\n      (\n        pathString: string,\n        data: unknown,\n        isMerge: boolean,\n        tag: number | null\n      ) => {\n        repoOnDataUpdate(repo, pathString, data, isMerge, tag);\n      },\n      repo.authTokenProvider_,\n      repo.appCheckProvider_\n    );\n\n    // Minor hack: Fire onConnect immediately, since there's no actual connection.\n    setTimeout(() => repoOnConnectStatus(repo, /* connectStatus= */ true), 0);\n  } else {\n    // Validate authOverride\n    if (typeof authOverride !== 'undefined' && authOverride !== null) {\n      if (typeof authOverride !== 'object') {\n        throw new Error(\n          'Only objects are supported for option databaseAuthVariableOverride'\n        );\n      }\n      try {\n        stringify(authOverride);\n      } catch (e) {\n        throw new Error('Invalid authOverride provided: ' + e);\n      }\n    }\n\n    repo.persistentConnection_ = new PersistentConnection(\n      repo.repoInfo_,\n      appId,\n      (\n        pathString: string,\n        data: unknown,\n        isMerge: boolean,\n        tag: number | null\n      ) => {\n        repoOnDataUpdate(repo, pathString, data, isMerge, tag);\n      },\n      (connectStatus: boolean) => {\n        repoOnConnectStatus(repo, connectStatus);\n      },\n      (updates: object) => {\n        repoOnServerInfoUpdate(repo, updates);\n      },\n      repo.authTokenProvider_,\n      repo.appCheckProvider_,\n      authOverride\n    );\n\n    repo.server_ = repo.persistentConnection_;\n  }\n\n  repo.authTokenProvider_.addTokenChangeListener(token => {\n    repo.server_.refreshAuthToken(token);\n  });\n\n  repo.appCheckProvider_.addTokenChangeListener(result => {\n    repo.server_.refreshAppCheckToken(result.token);\n  });\n\n  // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\n  // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\n  repo.statsReporter_ = statsManagerGetOrCreateReporter(\n    repo.repoInfo_,\n    () => new StatsReporter(repo.stats_, repo.server_)\n  );\n\n  // Used for .info.\n  repo.infoData_ = new SnapshotHolder();\n  repo.infoSyncTree_ = new SyncTree({\n    startListening: (query, tag, currentHashFn, onComplete) => {\n      let infoEvents: Event[] = [];\n      const node = repo.infoData_.getNode(query._path);\n      // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\n      // on initial data...\n      if (!node.isEmpty()) {\n        infoEvents = syncTreeApplyServerOverwrite(\n          repo.infoSyncTree_,\n          query._path,\n          node\n        );\n        setTimeout(() => {\n          onComplete('ok');\n        }, 0);\n      }\n      return infoEvents;\n    },\n    stopListening: () => {}\n  });\n  repoUpdateInfo(repo, 'connected', false);\n\n  repo.serverSyncTree_ = new SyncTree({\n    startListening: (query, tag, currentHashFn, onComplete) => {\n      repo.server_.listen(query, currentHashFn, tag, (status, data) => {\n        const events = onComplete(status, data);\n        eventQueueRaiseEventsForChangedPath(\n          repo.eventQueue_,\n          query._path,\n          events\n        );\n      });\n      // No synchronous events for network-backed sync trees\n      return [];\n    },\n    stopListening: (query, tag) => {\n      repo.server_.unlisten(query, tag);\n    }\n  });\n}\n\n/**\n * @returns The time in milliseconds, taking the server offset into account if we have one.\n */\nexport function repoServerTime(repo: Repo): number {\n  const offsetNode = repo.infoData_.getNode(new Path('.info/serverTimeOffset'));\n  const offset = (offsetNode.val() as number) || 0;\n  return new Date().getTime() + offset;\n}\n\n/**\n * Generate ServerValues using some variables from the repo object.\n */\nexport function repoGenerateServerValues(repo: Repo): Indexable {\n  return generateWithValues({\n    timestamp: repoServerTime(repo)\n  });\n}\n\n/**\n * Called by realtime when we get new messages from the server.\n */\nfunction repoOnDataUpdate(\n  repo: Repo,\n  pathString: string,\n  data: unknown,\n  isMerge: boolean,\n  tag: number | null\n): void {\n  // For testing.\n  repo.dataUpdateCount++;\n  const path = new Path(pathString);\n  data = repo.interceptServerDataCallback_\n    ? repo.interceptServerDataCallback_(pathString, data)\n    : data;\n  let events = [];\n  if (tag) {\n    if (isMerge) {\n      const taggedChildren = map(\n        data as { [k: string]: unknown },\n        (raw: unknown) => nodeFromJSON(raw)\n      );\n      events = syncTreeApplyTaggedQueryMerge(\n        repo.serverSyncTree_,\n        path,\n        taggedChildren,\n        tag\n      );\n    } else {\n      const taggedSnap = nodeFromJSON(data);\n      events = syncTreeApplyTaggedQueryOverwrite(\n        repo.serverSyncTree_,\n        path,\n        taggedSnap,\n        tag\n      );\n    }\n  } else if (isMerge) {\n    const changedChildren = map(\n      data as { [k: string]: unknown },\n      (raw: unknown) => nodeFromJSON(raw)\n    );\n    events = syncTreeApplyServerMerge(\n      repo.serverSyncTree_,\n      path,\n      changedChildren\n    );\n  } else {\n    const snap = nodeFromJSON(data);\n    events = syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap);\n  }\n  let affectedPath = path;\n  if (events.length > 0) {\n    // Since we have a listener outstanding for each transaction, receiving any events\n    // is a proxy for some change having occurred.\n    affectedPath = repoRerunTransactions(repo, path);\n  }\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, events);\n}\n\n// TODO: This should be @private but it's used by test_access.js and internal.js\nexport function repoInterceptServerData(\n  repo: Repo,\n  callback: ((a: string, b: unknown) => unknown) | null\n): void {\n  repo.interceptServerDataCallback_ = callback;\n}\n\nfunction repoOnConnectStatus(repo: Repo, connectStatus: boolean): void {\n  repoUpdateInfo(repo, 'connected', connectStatus);\n  if (connectStatus === false) {\n    repoRunOnDisconnectEvents(repo);\n  }\n}\n\nfunction repoOnServerInfoUpdate(repo: Repo, updates: object): void {\n  each(updates, (key: string, value: unknown) => {\n    repoUpdateInfo(repo, key, value);\n  });\n}\n\nfunction repoUpdateInfo(repo: Repo, pathString: string, value: unknown): void {\n  const path = new Path('/.info/' + pathString);\n  const newNode = nodeFromJSON(value);\n  repo.infoData_.updateSnapshot(path, newNode);\n  const events = syncTreeApplyServerOverwrite(\n    repo.infoSyncTree_,\n    path,\n    newNode\n  );\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n}\n\nfunction repoGetNextWriteId(repo: Repo): number {\n  return repo.nextWriteId_++;\n}\n\n/**\n * The purpose of `getValue` is to return the latest known value\n * satisfying `query`.\n *\n * This method will first check for in-memory cached values\n * belonging to active listeners. If they are found, such values\n * are considered to be the most up-to-date.\n *\n * If the client is not connected, this method will wait until the\n *  repo has established a connection and then request the value for `query`.\n * If the client is not able to retrieve the query result for another reason,\n * it reports an error.\n *\n * @param query - The query to surface a value for.\n */\nexport function repoGetValue(\n  repo: Repo,\n  query: QueryContext,\n  eventRegistration: ValueEventRegistration\n): Promise<Node> {\n  // Only active queries are cached. There is no persisted cache.\n  const cached = syncTreeGetServerValue(repo.serverSyncTree_, query);\n  if (cached != null) {\n    return Promise.resolve(cached);\n  }\n  return repo.server_.get(query).then(\n    payload => {\n      const node = nodeFromJSON(payload).withIndex(\n        query._queryParams.getIndex()\n      );\n      /**\n       * Below we simulate the actions of an `onlyOnce` `onValue()` event where:\n       * Add an event registration,\n       * Update data at the path,\n       * Raise any events,\n       * Cleanup the SyncTree\n       */\n      syncTreeAddEventRegistration(\n        repo.serverSyncTree_,\n        query,\n        eventRegistration,\n        true\n      );\n      let events: Event[];\n      if (query._queryParams.loadsAllData()) {\n        events = syncTreeApplyServerOverwrite(\n          repo.serverSyncTree_,\n          query._path,\n          node\n        );\n      } else {\n        const tag = syncTreeTagForQuery(repo.serverSyncTree_, query);\n        events = syncTreeApplyTaggedQueryOverwrite(\n          repo.serverSyncTree_,\n          query._path,\n          node,\n          tag\n        );\n      }\n      /*\n       * We need to raise events in the scenario where `get()` is called at a parent path, and\n       * while the `get()` is pending, `onValue` is called at a child location. While get() is waiting\n       * for the data, `onValue` will register a new event. Then, get() will come back, and update the syncTree\n       * and its corresponding serverCache, including the child location where `onValue` is called. Then,\n       * `onValue` will receive the event from the server, but look at the syncTree and see that the data received\n       * from the server is already at the SyncPoint, and so the `onValue` callback will never get fired.\n       * Calling `eventQueueRaiseEventsForChangedPath()` is the correct way to propagate the events and\n       * ensure the corresponding child events will get fired.\n       */\n      eventQueueRaiseEventsForChangedPath(\n        repo.eventQueue_,\n        query._path,\n        events\n      );\n      syncTreeRemoveEventRegistration(\n        repo.serverSyncTree_,\n        query,\n        eventRegistration,\n        null,\n        true\n      );\n      return node;\n    },\n    err => {\n      repoLog(repo, 'get for query ' + stringify(query) + ' failed: ' + err);\n      return Promise.reject(new Error(err as string));\n    }\n  );\n}\n\nexport function repoSetWithPriority(\n  repo: Repo,\n  path: Path,\n  newVal: unknown,\n  newPriority: number | string | null,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repoLog(repo, 'set', {\n    path: path.toString(),\n    value: newVal,\n    priority: newPriority\n  });\n\n  // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\n  // (b) store unresolved paths on JSON parse\n  const serverValues = repoGenerateServerValues(repo);\n  const newNodeUnresolved = nodeFromJSON(newVal, newPriority);\n  const existing = syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path);\n  const newNode = resolveDeferredValueSnapshot(\n    newNodeUnresolved,\n    existing,\n    serverValues\n  );\n\n  const writeId = repoGetNextWriteId(repo);\n  const events = syncTreeApplyUserOverwrite(\n    repo.serverSyncTree_,\n    path,\n    newNode,\n    writeId,\n    true\n  );\n  eventQueueQueueEvents(repo.eventQueue_, events);\n  repo.server_.put(\n    path.toString(),\n    newNodeUnresolved.val(/*export=*/ true),\n    (status, errorReason) => {\n      const success = status === 'ok';\n      if (!success) {\n        warn('set at ' + path + ' failed: ' + status);\n      }\n\n      const clearEvents = syncTreeAckUserWrite(\n        repo.serverSyncTree_,\n        writeId,\n        !success\n      );\n      eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, clearEvents);\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n  const affectedPath = repoAbortTransactions(repo, path);\n  repoRerunTransactions(repo, affectedPath);\n  // We queued the events above, so just flush the queue here\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, []);\n}\n\nexport function repoUpdate(\n  repo: Repo,\n  path: Path,\n  childrenToMerge: { [k: string]: unknown },\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repoLog(repo, 'update', { path: path.toString(), value: childrenToMerge });\n\n  // Start with our existing data and merge each child into it.\n  let empty = true;\n  const serverValues = repoGenerateServerValues(repo);\n  const changedChildren: { [k: string]: Node } = {};\n  each(childrenToMerge, (changedKey: string, changedValue: unknown) => {\n    empty = false;\n    changedChildren[changedKey] = resolveDeferredValueTree(\n      pathChild(path, changedKey),\n      nodeFromJSON(changedValue),\n      repo.serverSyncTree_,\n      serverValues\n    );\n  });\n\n  if (!empty) {\n    const writeId = repoGetNextWriteId(repo);\n    const events = syncTreeApplyUserMerge(\n      repo.serverSyncTree_,\n      path,\n      changedChildren,\n      writeId\n    );\n    eventQueueQueueEvents(repo.eventQueue_, events);\n    repo.server_.merge(\n      path.toString(),\n      childrenToMerge,\n      (status, errorReason) => {\n        const success = status === 'ok';\n        if (!success) {\n          warn('update at ' + path + ' failed: ' + status);\n        }\n\n        const clearEvents = syncTreeAckUserWrite(\n          repo.serverSyncTree_,\n          writeId,\n          !success\n        );\n        const affectedPath =\n          clearEvents.length > 0 ? repoRerunTransactions(repo, path) : path;\n        eventQueueRaiseEventsForChangedPath(\n          repo.eventQueue_,\n          affectedPath,\n          clearEvents\n        );\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n      }\n    );\n\n    each(childrenToMerge, (changedPath: string) => {\n      const affectedPath = repoAbortTransactions(\n        repo,\n        pathChild(path, changedPath)\n      );\n      repoRerunTransactions(repo, affectedPath);\n    });\n\n    // We queued the events above, so just flush the queue here\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, []);\n  } else {\n    log(\"update() called with empty data.  Don't do anything.\");\n    repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\n  }\n}\n\n/**\n * Applies all of the changes stored up in the onDisconnect_ tree.\n */\nfunction repoRunOnDisconnectEvents(repo: Repo): void {\n  repoLog(repo, 'onDisconnectEvents');\n\n  const serverValues = repoGenerateServerValues(repo);\n  const resolvedOnDisconnectTree = newSparseSnapshotTree();\n  sparseSnapshotTreeForEachTree(\n    repo.onDisconnect_,\n    newEmptyPath(),\n    (path, node) => {\n      const resolved = resolveDeferredValueTree(\n        path,\n        node,\n        repo.serverSyncTree_,\n        serverValues\n      );\n      sparseSnapshotTreeRemember(resolvedOnDisconnectTree, path, resolved);\n    }\n  );\n  let events: Event[] = [];\n\n  sparseSnapshotTreeForEachTree(\n    resolvedOnDisconnectTree,\n    newEmptyPath(),\n    (path, snap) => {\n      events = events.concat(\n        syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap)\n      );\n      const affectedPath = repoAbortTransactions(repo, path);\n      repoRerunTransactions(repo, affectedPath);\n    }\n  );\n\n  repo.onDisconnect_ = newSparseSnapshotTree();\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, newEmptyPath(), events);\n}\n\nexport function repoOnDisconnectCancel(\n  repo: Repo,\n  path: Path,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repo.server_.onDisconnectCancel(path.toString(), (status, errorReason) => {\n    if (status === 'ok') {\n      sparseSnapshotTreeForget(repo.onDisconnect_, path);\n    }\n    repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n  });\n}\n\nexport function repoOnDisconnectSet(\n  repo: Repo,\n  path: Path,\n  value: unknown,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  const newNode = nodeFromJSON(value);\n  repo.server_.onDisconnectPut(\n    path.toString(),\n    newNode.val(/*export=*/ true),\n    (status, errorReason) => {\n      if (status === 'ok') {\n        sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoOnDisconnectSetWithPriority(\n  repo: Repo,\n  path: Path,\n  value: unknown,\n  priority: unknown,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  const newNode = nodeFromJSON(value, priority);\n  repo.server_.onDisconnectPut(\n    path.toString(),\n    newNode.val(/*export=*/ true),\n    (status, errorReason) => {\n      if (status === 'ok') {\n        sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoOnDisconnectUpdate(\n  repo: Repo,\n  path: Path,\n  childrenToMerge: { [k: string]: unknown },\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  if (isEmpty(childrenToMerge)) {\n    log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\n    repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\n    return;\n  }\n\n  repo.server_.onDisconnectMerge(\n    path.toString(),\n    childrenToMerge,\n    (status, errorReason) => {\n      if (status === 'ok') {\n        each(childrenToMerge, (childName: string, childNode: unknown) => {\n          const newChildNode = nodeFromJSON(childNode);\n          sparseSnapshotTreeRemember(\n            repo.onDisconnect_,\n            pathChild(path, childName),\n            newChildNode\n          );\n        });\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoAddEventCallbackForQuery(\n  repo: Repo,\n  query: QueryContext,\n  eventRegistration: EventRegistration\n): void {\n  let events;\n  if (pathGetFront(query._path) === '.info') {\n    events = syncTreeAddEventRegistration(\n      repo.infoSyncTree_,\n      query,\n      eventRegistration\n    );\n  } else {\n    events = syncTreeAddEventRegistration(\n      repo.serverSyncTree_,\n      query,\n      eventRegistration\n    );\n  }\n  eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\n}\n\nexport function repoRemoveEventCallbackForQuery(\n  repo: Repo,\n  query: QueryContext,\n  eventRegistration: EventRegistration\n): void {\n  // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\n  // a little bit by handling the return values anyways.\n  let events;\n  if (pathGetFront(query._path) === '.info') {\n    events = syncTreeRemoveEventRegistration(\n      repo.infoSyncTree_,\n      query,\n      eventRegistration\n    );\n  } else {\n    events = syncTreeRemoveEventRegistration(\n      repo.serverSyncTree_,\n      query,\n      eventRegistration\n    );\n  }\n  eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\n}\n\nexport function repoInterrupt(repo: Repo): void {\n  if (repo.persistentConnection_) {\n    repo.persistentConnection_.interrupt(INTERRUPT_REASON);\n  }\n}\n\nexport function repoResume(repo: Repo): void {\n  if (repo.persistentConnection_) {\n    repo.persistentConnection_.resume(INTERRUPT_REASON);\n  }\n}\n\nexport function repoStats(repo: Repo, showDelta: boolean = false): void {\n  if (typeof console === 'undefined') {\n    return;\n  }\n\n  let stats: { [k: string]: unknown };\n  if (showDelta) {\n    if (!repo.statsListener_) {\n      repo.statsListener_ = new StatsListener(repo.stats_);\n    }\n    stats = repo.statsListener_.get();\n  } else {\n    stats = repo.stats_.get();\n  }\n\n  const longestName = Object.keys(stats).reduce(\n    (previousValue, currentValue) =>\n      Math.max(currentValue.length, previousValue),\n    0\n  );\n\n  each(stats, (stat: string, value: unknown) => {\n    let paddedStat = stat;\n    // pad stat names to be the same length (plus 2 extra spaces).\n    for (let i = stat.length; i < longestName + 2; i++) {\n      paddedStat += ' ';\n    }\n    console.log(paddedStat + value);\n  });\n}\n\nexport function repoStatsIncrementCounter(repo: Repo, metric: string): void {\n  repo.stats_.incrementCounter(metric);\n  statsReporterIncludeStat(repo.statsReporter_, metric);\n}\n\nfunction repoLog(repo: Repo, ...varArgs: unknown[]): void {\n  let prefix = '';\n  if (repo.persistentConnection_) {\n    prefix = repo.persistentConnection_.id + ':';\n  }\n  log(prefix, ...varArgs);\n}\n\nexport function repoCallOnCompleteCallback(\n  repo: Repo,\n  callback: ((status: Error | null, errorReason?: string) => void) | null,\n  status: string,\n  errorReason?: string | null\n): void {\n  if (callback) {\n    exceptionGuard(() => {\n      if (status === 'ok') {\n        callback(null);\n      } else {\n        const code = (status || 'error').toUpperCase();\n        let message = code;\n        if (errorReason) {\n          message += ': ' + errorReason;\n        }\n\n        const error = new Error(message);\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (error as any).code = code;\n        callback(error);\n      }\n    });\n  }\n}\n\n/**\n * Creates a new transaction, adds it to the transactions we're tracking, and\n * sends it to the server if possible.\n *\n * @param path - Path at which to do transaction.\n * @param transactionUpdate - Update callback.\n * @param onComplete - Completion callback.\n * @param unwatcher - Function that will be called when the transaction no longer\n * need data updates for `path`.\n * @param applyLocally - Whether or not to make intermediate results visible\n */\nexport function repoStartTransaction(\n  repo: Repo,\n  path: Path,\n  transactionUpdate: (a: unknown) => unknown,\n  onComplete: ((error: Error, committed: boolean, node: Node) => void) | null,\n  unwatcher: () => void,\n  applyLocally: boolean\n): void {\n  repoLog(repo, 'transaction on ' + path);\n\n  // Initialize transaction.\n  const transaction: Transaction = {\n    path,\n    update: transactionUpdate,\n    onComplete,\n    // One of TransactionStatus enums.\n    status: null,\n    // Used when combining transactions at different locations to figure out\n    // which one goes first.\n    order: LUIDGenerator(),\n    // Whether to raise local events for this transaction.\n    applyLocally,\n    // Count of how many times we've retried the transaction.\n    retryCount: 0,\n    // Function to call to clean up our .on() listener.\n    unwatcher,\n    // Stores why a transaction was aborted.\n    abortReason: null,\n    currentWriteId: null,\n    currentInputSnapshot: null,\n    currentOutputSnapshotRaw: null,\n    currentOutputSnapshotResolved: null\n  };\n\n  // Run transaction initially.\n  const currentState = repoGetLatestState(repo, path, undefined);\n  transaction.currentInputSnapshot = currentState;\n  const newVal = transaction.update(currentState.val());\n  if (newVal === undefined) {\n    // Abort transaction.\n    transaction.unwatcher();\n    transaction.currentOutputSnapshotRaw = null;\n    transaction.currentOutputSnapshotResolved = null;\n    if (transaction.onComplete) {\n      transaction.onComplete(null, false, transaction.currentInputSnapshot);\n    }\n  } else {\n    validateFirebaseData(\n      'transaction failed: Data returned ',\n      newVal,\n      transaction.path\n    );\n\n    // Mark as run and add to our queue.\n    transaction.status = TransactionStatus.RUN;\n    const queueNode = treeSubTree(repo.transactionQueueTree_, path);\n    const nodeQueue = treeGetValue(queueNode) || [];\n    nodeQueue.push(transaction);\n\n    treeSetValue(queueNode, nodeQueue);\n\n    // Update visibleData and raise events\n    // Note: We intentionally raise events after updating all of our\n    // transaction state, since the user could start new transactions from the\n    // event callbacks.\n    let priorityForNode;\n    if (\n      typeof newVal === 'object' &&\n      newVal !== null &&\n      contains(newVal, '.priority')\n    ) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      priorityForNode = safeGet(newVal as any, '.priority');\n      assert(\n        isValidPriority(priorityForNode),\n        'Invalid priority returned by transaction. ' +\n          'Priority must be a valid string, finite number, server value, or null.'\n      );\n    } else {\n      const currentNode =\n        syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path) ||\n        ChildrenNode.EMPTY_NODE;\n      priorityForNode = currentNode.getPriority().val();\n    }\n\n    const serverValues = repoGenerateServerValues(repo);\n    const newNodeUnresolved = nodeFromJSON(newVal, priorityForNode);\n    const newNode = resolveDeferredValueSnapshot(\n      newNodeUnresolved,\n      currentState,\n      serverValues\n    );\n    transaction.currentOutputSnapshotRaw = newNodeUnresolved;\n    transaction.currentOutputSnapshotResolved = newNode;\n    transaction.currentWriteId = repoGetNextWriteId(repo);\n\n    const events = syncTreeApplyUserOverwrite(\n      repo.serverSyncTree_,\n      path,\n      newNode,\n      transaction.currentWriteId,\n      transaction.applyLocally\n    );\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n\n    repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n  }\n}\n\n/**\n * @param excludeSets - A specific set to exclude\n */\nfunction repoGetLatestState(\n  repo: Repo,\n  path: Path,\n  excludeSets?: number[]\n): Node {\n  return (\n    syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path, excludeSets) ||\n    ChildrenNode.EMPTY_NODE\n  );\n}\n\n/**\n * Sends any already-run transactions that aren't waiting for outstanding\n * transactions to complete.\n *\n * Externally it's called with no arguments, but it calls itself recursively\n * with a particular transactionQueueTree node to recurse through the tree.\n *\n * @param node - transactionQueueTree node to start at.\n */\nfunction repoSendReadyTransactions(\n  repo: Repo,\n  node: Tree<Transaction[]> = repo.transactionQueueTree_\n): void {\n  // Before recursing, make sure any completed transactions are removed.\n  if (!node) {\n    repoPruneCompletedTransactionsBelowNode(repo, node);\n  }\n\n  if (treeGetValue(node)) {\n    const queue = repoBuildTransactionQueue(repo, node);\n    assert(queue.length > 0, 'Sending zero length transaction queue');\n\n    const allRun = queue.every(\n      (transaction: Transaction) => transaction.status === TransactionStatus.RUN\n    );\n\n    // If they're all run (and not sent), we can send them.  Else, we must wait.\n    if (allRun) {\n      repoSendTransactionQueue(repo, treeGetPath(node), queue);\n    }\n  } else if (treeHasChildren(node)) {\n    treeForEachChild(node, childNode => {\n      repoSendReadyTransactions(repo, childNode);\n    });\n  }\n}\n\n/**\n * Given a list of run transactions, send them to the server and then handle\n * the result (success or failure).\n *\n * @param path - The location of the queue.\n * @param queue - Queue of transactions under the specified location.\n */\nfunction repoSendTransactionQueue(\n  repo: Repo,\n  path: Path,\n  queue: Transaction[]\n): void {\n  // Mark transactions as sent and increment retry count!\n  const setsToIgnore = queue.map(txn => {\n    return txn.currentWriteId;\n  });\n  const latestState = repoGetLatestState(repo, path, setsToIgnore);\n  let snapToSend = latestState;\n  const latestHash = latestState.hash();\n  for (let i = 0; i < queue.length; i++) {\n    const txn = queue[i];\n    assert(\n      txn.status === TransactionStatus.RUN,\n      'tryToSendTransactionQueue_: items in queue should all be run.'\n    );\n    txn.status = TransactionStatus.SENT;\n    txn.retryCount++;\n    const relativePath = newRelativePath(path, txn.path);\n    // If we've gotten to this point, the output snapshot must be defined.\n    snapToSend = snapToSend.updateChild(\n      relativePath /** @type {!Node} */,\n      txn.currentOutputSnapshotRaw\n    );\n  }\n\n  const dataToSend = snapToSend.val(true);\n  const pathToSend = path;\n\n  // Send the put.\n  repo.server_.put(\n    pathToSend.toString(),\n    dataToSend,\n    (status: string) => {\n      repoLog(repo, 'transaction put response', {\n        path: pathToSend.toString(),\n        status\n      });\n\n      let events: Event[] = [];\n      if (status === 'ok') {\n        // Queue up the callbacks and fire them after cleaning up all of our\n        // transaction state, since the callback could trigger more\n        // transactions or sets.\n        const callbacks = [];\n        for (let i = 0; i < queue.length; i++) {\n          queue[i].status = TransactionStatus.COMPLETED;\n          events = events.concat(\n            syncTreeAckUserWrite(repo.serverSyncTree_, queue[i].currentWriteId)\n          );\n          if (queue[i].onComplete) {\n            // We never unset the output snapshot, and given that this\n            // transaction is complete, it should be set\n            callbacks.push(() =>\n              queue[i].onComplete(\n                null,\n                true,\n                queue[i].currentOutputSnapshotResolved\n              )\n            );\n          }\n          queue[i].unwatcher();\n        }\n\n        // Now remove the completed transactions.\n        repoPruneCompletedTransactionsBelowNode(\n          repo,\n          treeSubTree(repo.transactionQueueTree_, path)\n        );\n        // There may be pending transactions that we can now send.\n        repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n\n        // Finally, trigger onComplete callbacks.\n        for (let i = 0; i < callbacks.length; i++) {\n          exceptionGuard(callbacks[i]);\n        }\n      } else {\n        // transactions are no longer sent.  Update their status appropriately.\n        if (status === 'datastale') {\n          for (let i = 0; i < queue.length; i++) {\n            if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\n              queue[i].status = TransactionStatus.NEEDS_ABORT;\n            } else {\n              queue[i].status = TransactionStatus.RUN;\n            }\n          }\n        } else {\n          warn(\n            'transaction at ' + pathToSend.toString() + ' failed: ' + status\n          );\n          for (let i = 0; i < queue.length; i++) {\n            queue[i].status = TransactionStatus.NEEDS_ABORT;\n            queue[i].abortReason = status;\n          }\n        }\n\n        repoRerunTransactions(repo, path);\n      }\n    },\n    latestHash\n  );\n}\n\n/**\n * Finds all transactions dependent on the data at changedPath and reruns them.\n *\n * Should be called any time cached data changes.\n *\n * Return the highest path that was affected by rerunning transactions. This\n * is the path at which events need to be raised for.\n *\n * @param changedPath - The path in mergedData that changed.\n * @returns The rootmost path that was affected by rerunning transactions.\n */\nfunction repoRerunTransactions(repo: Repo, changedPath: Path): Path {\n  const rootMostTransactionNode = repoGetAncestorTransactionNode(\n    repo,\n    changedPath\n  );\n  const path = treeGetPath(rootMostTransactionNode);\n\n  const queue = repoBuildTransactionQueue(repo, rootMostTransactionNode);\n  repoRerunTransactionQueue(repo, queue, path);\n\n  return path;\n}\n\n/**\n * Does all the work of rerunning transactions (as well as cleans up aborted\n * transactions and whatnot).\n *\n * @param queue - The queue of transactions to run.\n * @param path - The path the queue is for.\n */\nfunction repoRerunTransactionQueue(\n  repo: Repo,\n  queue: Transaction[],\n  path: Path\n): void {\n  if (queue.length === 0) {\n    return; // Nothing to do!\n  }\n\n  // Queue up the callbacks and fire them after cleaning up all of our\n  // transaction state, since the callback could trigger more transactions or\n  // sets.\n  const callbacks = [];\n  let events: Event[] = [];\n  // Ignore all of the sets we're going to re-run.\n  const txnsToRerun = queue.filter(q => {\n    return q.status === TransactionStatus.RUN;\n  });\n  const setsToIgnore = txnsToRerun.map(q => {\n    return q.currentWriteId;\n  });\n  for (let i = 0; i < queue.length; i++) {\n    const transaction = queue[i];\n    const relativePath = newRelativePath(path, transaction.path);\n    let abortTransaction = false,\n      abortReason;\n    assert(\n      relativePath !== null,\n      'rerunTransactionsUnderNode_: relativePath should not be null.'\n    );\n\n    if (transaction.status === TransactionStatus.NEEDS_ABORT) {\n      abortTransaction = true;\n      abortReason = transaction.abortReason;\n      events = events.concat(\n        syncTreeAckUserWrite(\n          repo.serverSyncTree_,\n          transaction.currentWriteId,\n          true\n        )\n      );\n    } else if (transaction.status === TransactionStatus.RUN) {\n      if (transaction.retryCount >= MAX_TRANSACTION_RETRIES) {\n        abortTransaction = true;\n        abortReason = 'maxretry';\n        events = events.concat(\n          syncTreeAckUserWrite(\n            repo.serverSyncTree_,\n            transaction.currentWriteId,\n            true\n          )\n        );\n      } else {\n        // This code reruns a transaction\n        const currentNode = repoGetLatestState(\n          repo,\n          transaction.path,\n          setsToIgnore\n        );\n        transaction.currentInputSnapshot = currentNode;\n        const newData = queue[i].update(currentNode.val());\n        if (newData !== undefined) {\n          validateFirebaseData(\n            'transaction failed: Data returned ',\n            newData,\n            transaction.path\n          );\n          let newDataNode = nodeFromJSON(newData);\n          const hasExplicitPriority =\n            typeof newData === 'object' &&\n            newData != null &&\n            contains(newData, '.priority');\n          if (!hasExplicitPriority) {\n            // Keep the old priority if there wasn't a priority explicitly specified.\n            newDataNode = newDataNode.updatePriority(currentNode.getPriority());\n          }\n\n          const oldWriteId = transaction.currentWriteId;\n          const serverValues = repoGenerateServerValues(repo);\n          const newNodeResolved = resolveDeferredValueSnapshot(\n            newDataNode,\n            currentNode,\n            serverValues\n          );\n\n          transaction.currentOutputSnapshotRaw = newDataNode;\n          transaction.currentOutputSnapshotResolved = newNodeResolved;\n          transaction.currentWriteId = repoGetNextWriteId(repo);\n          // Mutates setsToIgnore in place\n          setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\n          events = events.concat(\n            syncTreeApplyUserOverwrite(\n              repo.serverSyncTree_,\n              transaction.path,\n              newNodeResolved,\n              transaction.currentWriteId,\n              transaction.applyLocally\n            )\n          );\n          events = events.concat(\n            syncTreeAckUserWrite(repo.serverSyncTree_, oldWriteId, true)\n          );\n        } else {\n          abortTransaction = true;\n          abortReason = 'nodata';\n          events = events.concat(\n            syncTreeAckUserWrite(\n              repo.serverSyncTree_,\n              transaction.currentWriteId,\n              true\n            )\n          );\n        }\n      }\n    }\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n    events = [];\n    if (abortTransaction) {\n      // Abort.\n      queue[i].status = TransactionStatus.COMPLETED;\n\n      // Removing a listener can trigger pruning which can muck with\n      // mergedData/visibleData (as it prunes data). So defer the unwatcher\n      // until we're done.\n      (function (unwatcher) {\n        setTimeout(unwatcher, Math.floor(0));\n      })(queue[i].unwatcher);\n\n      if (queue[i].onComplete) {\n        if (abortReason === 'nodata') {\n          callbacks.push(() =>\n            queue[i].onComplete(null, false, queue[i].currentInputSnapshot)\n          );\n        } else {\n          callbacks.push(() =>\n            queue[i].onComplete(new Error(abortReason), false, null)\n          );\n        }\n      }\n    }\n  }\n\n  // Clean up completed transactions.\n  repoPruneCompletedTransactionsBelowNode(repo, repo.transactionQueueTree_);\n\n  // Now fire callbacks, now that we're in a good, known state.\n  for (let i = 0; i < callbacks.length; i++) {\n    exceptionGuard(callbacks[i]);\n  }\n\n  // Try to send the transaction result to the server.\n  repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n}\n\n/**\n * Returns the rootmost ancestor node of the specified path that has a pending\n * transaction on it, or just returns the node for the given path if there are\n * no pending transactions on any ancestor.\n *\n * @param path - The location to start at.\n * @returns The rootmost node with a transaction.\n */\nfunction repoGetAncestorTransactionNode(\n  repo: Repo,\n  path: Path\n): Tree<Transaction[]> {\n  let front;\n\n  // Start at the root and walk deeper into the tree towards path until we\n  // find a node with pending transactions.\n  let transactionNode = repo.transactionQueueTree_;\n  front = pathGetFront(path);\n  while (front !== null && treeGetValue(transactionNode) === undefined) {\n    transactionNode = treeSubTree(transactionNode, front);\n    path = pathPopFront(path);\n    front = pathGetFront(path);\n  }\n\n  return transactionNode;\n}\n\n/**\n * Builds the queue of all transactions at or below the specified\n * transactionNode.\n *\n * @param transactionNode\n * @returns The generated queue.\n */\nfunction repoBuildTransactionQueue(\n  repo: Repo,\n  transactionNode: Tree<Transaction[]>\n): Transaction[] {\n  // Walk any child transaction queues and aggregate them into a single queue.\n  const transactionQueue: Transaction[] = [];\n  repoAggregateTransactionQueuesForNode(\n    repo,\n    transactionNode,\n    transactionQueue\n  );\n\n  // Sort them by the order the transactions were created.\n  transactionQueue.sort((a, b) => a.order - b.order);\n\n  return transactionQueue;\n}\n\nfunction repoAggregateTransactionQueuesForNode(\n  repo: Repo,\n  node: Tree<Transaction[]>,\n  queue: Transaction[]\n): void {\n  const nodeQueue = treeGetValue(node);\n  if (nodeQueue) {\n    for (let i = 0; i < nodeQueue.length; i++) {\n      queue.push(nodeQueue[i]);\n    }\n  }\n\n  treeForEachChild(node, child => {\n    repoAggregateTransactionQueuesForNode(repo, child, queue);\n  });\n}\n\n/**\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\n */\nfunction repoPruneCompletedTransactionsBelowNode(\n  repo: Repo,\n  node: Tree<Transaction[]>\n): void {\n  const queue = treeGetValue(node);\n  if (queue) {\n    let to = 0;\n    for (let from = 0; from < queue.length; from++) {\n      if (queue[from].status !== TransactionStatus.COMPLETED) {\n        queue[to] = queue[from];\n        to++;\n      }\n    }\n    queue.length = to;\n    treeSetValue(node, queue.length > 0 ? queue : undefined);\n  }\n\n  treeForEachChild(node, childNode => {\n    repoPruneCompletedTransactionsBelowNode(repo, childNode);\n  });\n}\n\n/**\n * Aborts all transactions on ancestors or descendants of the specified path.\n * Called when doing a set() or update() since we consider them incompatible\n * with transactions.\n *\n * @param path - Path for which we want to abort related transactions.\n */\nfunction repoAbortTransactions(repo: Repo, path: Path): Path {\n  const affectedPath = treeGetPath(repoGetAncestorTransactionNode(repo, path));\n\n  const transactionNode = treeSubTree(repo.transactionQueueTree_, path);\n\n  treeForEachAncestor(transactionNode, (node: Tree<Transaction[]>) => {\n    repoAbortTransactionsOnNode(repo, node);\n  });\n\n  repoAbortTransactionsOnNode(repo, transactionNode);\n\n  treeForEachDescendant(transactionNode, (node: Tree<Transaction[]>) => {\n    repoAbortTransactionsOnNode(repo, node);\n  });\n\n  return affectedPath;\n}\n\n/**\n * Abort transactions stored in this transaction queue node.\n *\n * @param node - Node to abort transactions for.\n */\nfunction repoAbortTransactionsOnNode(\n  repo: Repo,\n  node: Tree<Transaction[]>\n): void {\n  const queue = treeGetValue(node);\n  if (queue) {\n    // Queue up the callbacks and fire them after cleaning up all of our\n    // transaction state, since the callback could trigger more transactions\n    // or sets.\n    const callbacks = [];\n\n    // Go through queue.  Any already-sent transactions must be marked for\n    // abort, while the unsent ones can be immediately aborted and removed.\n    let events: Event[] = [];\n    let lastSent = -1;\n    for (let i = 0; i < queue.length; i++) {\n      if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\n        // Already marked.  No action needed.\n      } else if (queue[i].status === TransactionStatus.SENT) {\n        assert(\n          lastSent === i - 1,\n          'All SENT items should be at beginning of queue.'\n        );\n        lastSent = i;\n        // Mark transaction for abort when it comes back.\n        queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;\n        queue[i].abortReason = 'set';\n      } else {\n        assert(\n          queue[i].status === TransactionStatus.RUN,\n          'Unexpected transaction status in abort'\n        );\n        // We can abort it immediately.\n        queue[i].unwatcher();\n        events = events.concat(\n          syncTreeAckUserWrite(\n            repo.serverSyncTree_,\n            queue[i].currentWriteId,\n            true\n          )\n        );\n        if (queue[i].onComplete) {\n          callbacks.push(\n            queue[i].onComplete.bind(null, new Error('set'), false, null)\n          );\n        }\n      }\n    }\n    if (lastSent === -1) {\n      // We're not waiting for any sent transactions.  We can clear the queue.\n      treeSetValue(node, undefined);\n    } else {\n      // Remove the transactions we aborted.\n      queue.length = lastSent + 1;\n    }\n\n    // Now fire the callbacks.\n    eventQueueRaiseEventsForChangedPath(\n      repo.eventQueue_,\n      treeGetPath(node),\n      events\n    );\n    for (let i = 0; i < callbacks.length; i++) {\n      exceptionGuard(callbacks[i]);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../../RepoInfo';\nimport { Path } from '../Path';\nimport { warnIfPageIsSecure, warn, fatal } from '../util';\n\nfunction decodePath(pathString: string): string {\n  let pathStringDecoded = '';\n  const pieces = pathString.split('/');\n  for (let i = 0; i < pieces.length; i++) {\n    if (pieces[i].length > 0) {\n      let piece = pieces[i];\n      try {\n        piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\n      } catch (e) {}\n      pathStringDecoded += '/' + piece;\n    }\n  }\n  return pathStringDecoded;\n}\n\n/**\n * @returns key value hash\n */\nfunction decodeQuery(queryString: string): { [key: string]: string } {\n  const results = {};\n  if (queryString.charAt(0) === '?') {\n    queryString = queryString.substring(1);\n  }\n  for (const segment of queryString.split('&')) {\n    if (segment.length === 0) {\n      continue;\n    }\n    const kv = segment.split('=');\n    if (kv.length === 2) {\n      results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\n    } else {\n      warn(`Invalid query segment '${segment}' in query '${queryString}'`);\n    }\n  }\n  return results;\n}\n\nexport const parseRepoInfo = function (\n  dataURL: string,\n  nodeAdmin: boolean\n): { repoInfo: RepoInfo; path: Path } {\n  const parsedUrl = parseDatabaseURL(dataURL),\n    namespace = parsedUrl.namespace;\n\n  if (parsedUrl.domain === 'firebase.com') {\n    fatal(\n      parsedUrl.host +\n        ' is no longer supported. ' +\n        'Please use <YOUR FIREBASE>.firebaseio.com instead'\n    );\n  }\n\n  // Catch common error of uninitialized namespace value.\n  if (\n    (!namespace || namespace === 'undefined') &&\n    parsedUrl.domain !== 'localhost'\n  ) {\n    fatal(\n      'Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com'\n    );\n  }\n\n  if (!parsedUrl.secure) {\n    warnIfPageIsSecure();\n  }\n\n  const webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\n\n  return {\n    repoInfo: new RepoInfo(\n      parsedUrl.host,\n      parsedUrl.secure,\n      namespace,\n      webSocketOnly,\n      nodeAdmin,\n      /*persistenceKey=*/ '',\n      /*includeNamespaceInQueryParams=*/ namespace !== parsedUrl.subdomain\n    ),\n    path: new Path(parsedUrl.pathString)\n  };\n};\n\nexport const parseDatabaseURL = function (dataURL: string): {\n  host: string;\n  port: number;\n  domain: string;\n  subdomain: string;\n  secure: boolean;\n  scheme: string;\n  pathString: string;\n  namespace: string;\n} {\n  // Default to empty strings in the event of a malformed string.\n  let host = '',\n    domain = '',\n    subdomain = '',\n    pathString = '',\n    namespace = '';\n\n  // Always default to SSL, unless otherwise specified.\n  let secure = true,\n    scheme = 'https',\n    port = 443;\n\n  // Don't do any validation here. The caller is responsible for validating the result of parsing.\n  if (typeof dataURL === 'string') {\n    // Parse scheme.\n    let colonInd = dataURL.indexOf('//');\n    if (colonInd >= 0) {\n      scheme = dataURL.substring(0, colonInd - 1);\n      dataURL = dataURL.substring(colonInd + 2);\n    }\n\n    // Parse host, path, and query string.\n    let slashInd = dataURL.indexOf('/');\n    if (slashInd === -1) {\n      slashInd = dataURL.length;\n    }\n    let questionMarkInd = dataURL.indexOf('?');\n    if (questionMarkInd === -1) {\n      questionMarkInd = dataURL.length;\n    }\n    host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\n    if (slashInd < questionMarkInd) {\n      // For pathString, questionMarkInd will always come after slashInd\n      pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\n    }\n    const queryParams = decodeQuery(\n      dataURL.substring(Math.min(dataURL.length, questionMarkInd))\n    );\n\n    // If we have a port, use scheme for determining if it's secure.\n    colonInd = host.indexOf(':');\n    if (colonInd >= 0) {\n      secure = scheme === 'https' || scheme === 'wss';\n      port = parseInt(host.substring(colonInd + 1), 10);\n    } else {\n      colonInd = host.length;\n    }\n\n    const hostWithoutPort = host.slice(0, colonInd);\n    if (hostWithoutPort.toLowerCase() === 'localhost') {\n      domain = 'localhost';\n    } else if (hostWithoutPort.split('.').length <= 2) {\n      domain = hostWithoutPort;\n    } else {\n      // Interpret the subdomain of a 3 or more component URL as the namespace name.\n      const dotInd = host.indexOf('.');\n      subdomain = host.substring(0, dotInd).toLowerCase();\n      domain = host.substring(dotInd + 1);\n      // Normalize namespaces to lowercase to share storage / connection.\n      namespace = subdomain;\n    }\n    // Always treat the value of the `ns` as the namespace name if it is present.\n    if ('ns' in queryParams) {\n      namespace = queryParams['ns'];\n    }\n  }\n\n  return {\n    host,\n    port,\n    domain,\n    subdomain,\n    secure,\n    scheme,\n    pathString,\n    namespace\n  };\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringify } from '@firebase/util';\n\nimport { DataSnapshot as ExpDataSnapshot } from '../../api/Reference_impl';\nimport { Path } from '../util/Path';\n\nimport { EventRegistration } from './EventRegistration';\n\n/**\n * Encapsulates the data needed to raise an event\n * @interface\n */\nexport interface Event {\n  getPath(): Path;\n\n  getEventType(): string;\n\n  getEventRunner(): () => void;\n\n  toString(): string;\n}\n\n/**\n * One of the following strings: \"value\", \"child_added\", \"child_changed\",\n * \"child_removed\", or \"child_moved.\"\n */\nexport type EventType =\n  | 'value'\n  | 'child_added'\n  | 'child_changed'\n  | 'child_moved'\n  | 'child_removed';\n\n/**\n * Encapsulates the data needed to raise an event\n */\nexport class DataEvent implements Event {\n  /**\n   * @param eventType - One of: value, child_added, child_changed, child_moved, child_removed\n   * @param eventRegistration - The function to call to with the event data. User provided\n   * @param snapshot - The data backing the event\n   * @param prevName - Optional, the name of the previous child for child_* events.\n   */\n  constructor(\n    public eventType: EventType,\n    public eventRegistration: EventRegistration,\n    public snapshot: ExpDataSnapshot,\n    public prevName?: string | null\n  ) {}\n  getPath(): Path {\n    const ref = this.snapshot.ref;\n    if (this.eventType === 'value') {\n      return ref._path;\n    } else {\n      return ref.parent._path;\n    }\n  }\n  getEventType(): string {\n    return this.eventType;\n  }\n  getEventRunner(): () => void {\n    return this.eventRegistration.getEventRunner(this);\n  }\n  toString(): string {\n    return (\n      this.getPath().toString() +\n      ':' +\n      this.eventType +\n      ':' +\n      stringify(this.snapshot.exportVal())\n    );\n  }\n}\n\nexport class CancelEvent implements Event {\n  constructor(\n    public eventRegistration: EventRegistration,\n    public error: Error,\n    public path: Path\n  ) {}\n  getPath(): Path {\n    return this.path;\n  }\n  getEventType(): string {\n    return 'cancel';\n  }\n  getEventRunner(): () => void {\n    return this.eventRegistration.getEventRunner(this);\n  }\n  toString(): string {\n    return this.path.toString() + ':cancel';\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { DataSnapshot } from '../../api/Reference_impl';\nimport { Repo } from '../Repo';\nimport { Path } from '../util/Path';\n\nimport { Change } from './Change';\nimport { CancelEvent, Event } from './Event';\nimport { QueryParams } from './QueryParams';\n\n/**\n * A user callback. Callbacks issues from the Legacy SDK maintain references\n * to the original user-issued callbacks, which allows equality\n * comparison by reference even though this callbacks are wrapped before\n * they can be passed to the firebase@exp SDK.\n *\n * @internal\n */\nexport interface UserCallback {\n  (dataSnapshot: DataSnapshot, previousChildName?: string | null): unknown;\n  userCallback?: unknown;\n  context?: object | null;\n}\n\n/**\n * A wrapper class that converts events from the database@exp SDK to the legacy\n * Database SDK. Events are not converted directly as event registration relies\n * on reference comparison of the original user callback (see `matches()`) and\n * relies on equality of the legacy SDK's `context` object.\n */\nexport class CallbackContext {\n  constructor(\n    private readonly snapshotCallback: UserCallback,\n    private readonly cancelCallback?: (error: Error) => unknown\n  ) {}\n\n  onValue(\n    expDataSnapshot: DataSnapshot,\n    previousChildName?: string | null\n  ): void {\n    this.snapshotCallback.call(null, expDataSnapshot, previousChildName);\n  }\n\n  onCancel(error: Error): void {\n    assert(\n      this.hasCancelCallback,\n      'Raising a cancel event on a listener with no cancel callback'\n    );\n    return this.cancelCallback.call(null, error);\n  }\n\n  get hasCancelCallback(): boolean {\n    return !!this.cancelCallback;\n  }\n\n  matches(other: CallbackContext): boolean {\n    return (\n      this.snapshotCallback === other.snapshotCallback ||\n      (this.snapshotCallback.userCallback !== undefined &&\n        this.snapshotCallback.userCallback ===\n          other.snapshotCallback.userCallback &&\n        this.snapshotCallback.context === other.snapshotCallback.context)\n    );\n  }\n}\n\nexport interface QueryContext {\n  readonly _queryIdentifier: string;\n  readonly _queryObject: object;\n  readonly _repo: Repo;\n  readonly _path: Path;\n  readonly _queryParams: QueryParams;\n}\n\n/**\n * An EventRegistration is basically an event type ('value', 'child_added', etc.) and a callback\n * to be notified of that type of event.\n *\n * That said, it can also contain a cancel callback to be notified if the event is canceled.  And\n * currently, this code is organized around the idea that you would register multiple child_ callbacks\n * together, as a single EventRegistration.  Though currently we don't do that.\n */\nexport interface EventRegistration {\n  /**\n   * True if this container has a callback to trigger for this event type\n   */\n  respondsTo(eventType: string): boolean;\n\n  createEvent(change: Change, query: QueryContext): Event;\n\n  /**\n   * Given event data, return a function to trigger the user's callback\n   */\n  getEventRunner(eventData: Event): () => void;\n\n  createCancelEvent(error: Error, path: Path): CancelEvent | null;\n\n  matches(other: EventRegistration): boolean;\n\n  /**\n   * False basically means this is a \"dummy\" callback container being used as a sentinel\n   * to remove all callback containers of a particular type.  (e.g. if the user does\n   * ref.off('value') without specifying a specific callback).\n   *\n   * (TODO: Rework this, since it's hacky)\n   *\n   */\n  hasAnyCallback(): boolean;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, getModularInstance, Deferred } from '@firebase/util';\n\nimport {\n  Repo,\n  repoAddEventCallbackForQuery,\n  repoGetValue,\n  repoRemoveEventCallbackForQuery,\n  repoServerTime,\n  repoSetWithPriority,\n  repoUpdate\n} from '../core/Repo';\nimport { ChildrenNode } from '../core/snap/ChildrenNode';\nimport { Index } from '../core/snap/indexes/Index';\nimport { KEY_INDEX } from '../core/snap/indexes/KeyIndex';\nimport { PathIndex } from '../core/snap/indexes/PathIndex';\nimport { PRIORITY_INDEX } from '../core/snap/indexes/PriorityIndex';\nimport { VALUE_INDEX } from '../core/snap/indexes/ValueIndex';\nimport { Node } from '../core/snap/Node';\nimport { syncPointSetReferenceConstructor } from '../core/SyncPoint';\nimport { syncTreeSetReferenceConstructor } from '../core/SyncTree';\nimport { parseRepoInfo } from '../core/util/libs/parser';\nimport { nextPushId } from '../core/util/NextPushId';\nimport {\n  Path,\n  pathEquals,\n  pathGetBack,\n  pathGetFront,\n  pathChild,\n  pathParent,\n  pathToUrlEncodedString,\n  pathIsEmpty\n} from '../core/util/Path';\nimport {\n  fatal,\n  MAX_NAME,\n  MIN_NAME,\n  ObjectToUniqueKey\n} from '../core/util/util';\nimport {\n  isValidPriority,\n  validateFirebaseDataArg,\n  validateFirebaseMergeDataArg,\n  validateKey,\n  validatePathString,\n  validatePriority,\n  validateRootPathString,\n  validateUrl,\n  validateWritablePath\n} from '../core/util/validation';\nimport { Change } from '../core/view/Change';\nimport { CancelEvent, DataEvent, EventType } from '../core/view/Event';\nimport {\n  CallbackContext,\n  EventRegistration,\n  QueryContext,\n  UserCallback\n} from '../core/view/EventRegistration';\nimport {\n  QueryParams,\n  queryParamsEndAt,\n  queryParamsEndBefore,\n  queryParamsGetQueryObject,\n  queryParamsLimitToFirst,\n  queryParamsLimitToLast,\n  queryParamsOrderBy,\n  queryParamsStartAfter,\n  queryParamsStartAt\n} from '../core/view/QueryParams';\n\nimport { Database } from './Database';\nimport { OnDisconnect } from './OnDisconnect';\nimport {\n  ListenOptions,\n  Query as Query,\n  DatabaseReference,\n  Unsubscribe,\n  ThenableReference\n} from './Reference';\n\n/**\n * @internal\n */\nexport class QueryImpl implements Query, QueryContext {\n  /**\n   * @hideconstructor\n   */\n  constructor(\n    readonly _repo: Repo,\n    readonly _path: Path,\n    readonly _queryParams: QueryParams,\n    readonly _orderByCalled: boolean\n  ) {}\n\n  get key(): string | null {\n    if (pathIsEmpty(this._path)) {\n      return null;\n    } else {\n      return pathGetBack(this._path);\n    }\n  }\n\n  get ref(): DatabaseReference {\n    return new ReferenceImpl(this._repo, this._path);\n  }\n\n  get _queryIdentifier(): string {\n    const obj = queryParamsGetQueryObject(this._queryParams);\n    const id = ObjectToUniqueKey(obj);\n    return id === '{}' ? 'default' : id;\n  }\n\n  /**\n   * An object representation of the query parameters used by this Query.\n   */\n  get _queryObject(): object {\n    return queryParamsGetQueryObject(this._queryParams);\n  }\n\n  isEqual(other: QueryImpl | null): boolean {\n    other = getModularInstance(other);\n    if (!(other instanceof QueryImpl)) {\n      return false;\n    }\n\n    const sameRepo = this._repo === other._repo;\n    const samePath = pathEquals(this._path, other._path);\n    const sameQueryIdentifier =\n      this._queryIdentifier === other._queryIdentifier;\n\n    return sameRepo && samePath && sameQueryIdentifier;\n  }\n\n  toJSON(): string {\n    return this.toString();\n  }\n\n  toString(): string {\n    return this._repo.toString() + pathToUrlEncodedString(this._path);\n  }\n}\n\n/**\n * Validates that no other order by call has been made\n */\nfunction validateNoPreviousOrderByCall(query: QueryImpl, fnName: string) {\n  if (query._orderByCalled === true) {\n    throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\n  }\n}\n\n/**\n * Validates start/end values for queries.\n */\nfunction validateQueryEndpoints(params: QueryParams) {\n  let startNode = null;\n  let endNode = null;\n  if (params.hasStart()) {\n    startNode = params.getIndexStartValue();\n  }\n  if (params.hasEnd()) {\n    endNode = params.getIndexEndValue();\n  }\n\n  if (params.getIndex() === KEY_INDEX) {\n    const tooManyArgsError =\n      'Query: When ordering by key, you may only pass one argument to ' +\n      'startAt(), endAt(), or equalTo().';\n    const wrongArgTypeError =\n      'Query: When ordering by key, the argument passed to startAt(), startAfter(), ' +\n      'endAt(), endBefore(), or equalTo() must be a string.';\n    if (params.hasStart()) {\n      const startName = params.getIndexStartName();\n      if (startName !== MIN_NAME) {\n        throw new Error(tooManyArgsError);\n      } else if (typeof startNode !== 'string') {\n        throw new Error(wrongArgTypeError);\n      }\n    }\n    if (params.hasEnd()) {\n      const endName = params.getIndexEndName();\n      if (endName !== MAX_NAME) {\n        throw new Error(tooManyArgsError);\n      } else if (typeof endNode !== 'string') {\n        throw new Error(wrongArgTypeError);\n      }\n    }\n  } else if (params.getIndex() === PRIORITY_INDEX) {\n    if (\n      (startNode != null && !isValidPriority(startNode)) ||\n      (endNode != null && !isValidPriority(endNode))\n    ) {\n      throw new Error(\n        'Query: When ordering by priority, the first argument passed to startAt(), ' +\n          'startAfter() endAt(), endBefore(), or equalTo() must be a valid priority value ' +\n          '(null, a number, or a string).'\n      );\n    }\n  } else {\n    assert(\n      params.getIndex() instanceof PathIndex ||\n        params.getIndex() === VALUE_INDEX,\n      'unknown index type.'\n    );\n    if (\n      (startNode != null && typeof startNode === 'object') ||\n      (endNode != null && typeof endNode === 'object')\n    ) {\n      throw new Error(\n        'Query: First argument passed to startAt(), startAfter(), endAt(), endBefore(), or ' +\n          'equalTo() cannot be an object.'\n      );\n    }\n  }\n}\n\n/**\n * Validates that limit* has been called with the correct combination of parameters\n */\nfunction validateLimit(params: QueryParams) {\n  if (\n    params.hasStart() &&\n    params.hasEnd() &&\n    params.hasLimit() &&\n    !params.hasAnchoredLimit()\n  ) {\n    throw new Error(\n      \"Query: Can't combine startAt(), startAfter(), endAt(), endBefore(), and limit(). Use \" +\n        'limitToFirst() or limitToLast() instead.'\n    );\n  }\n}\n/**\n * @internal\n */\nexport class ReferenceImpl extends QueryImpl implements DatabaseReference {\n  /** @hideconstructor */\n  constructor(repo: Repo, path: Path) {\n    super(repo, path, new QueryParams(), false);\n  }\n\n  get parent(): ReferenceImpl | null {\n    const parentPath = pathParent(this._path);\n    return parentPath === null\n      ? null\n      : new ReferenceImpl(this._repo, parentPath);\n  }\n\n  get root(): ReferenceImpl {\n    let ref: ReferenceImpl = this;\n    while (ref.parent !== null) {\n      ref = ref.parent;\n    }\n    return ref;\n  }\n}\n\n/**\n * A `DataSnapshot` contains data from a Database location.\n *\n * Any time you read data from the Database, you receive the data as a\n * `DataSnapshot`. A `DataSnapshot` is passed to the event callbacks you attach\n * with `on()` or `once()`. You can extract the contents of the snapshot as a\n * JavaScript object by calling the `val()` method. Alternatively, you can\n * traverse into the snapshot by calling `child()` to return child snapshots\n * (which you could then call `val()` on).\n *\n * A `DataSnapshot` is an efficiently generated, immutable copy of the data at\n * a Database location. It cannot be modified and will never change (to modify\n * data, you always call the `set()` method on a `Reference` directly).\n */\nexport class DataSnapshot {\n  /**\n   * @param _node - A SnapshotNode to wrap.\n   * @param ref - The location this snapshot came from.\n   * @param _index - The iteration order for this snapshot\n   * @hideconstructor\n   */\n  constructor(\n    readonly _node: Node,\n    /**\n     * The location of this DataSnapshot.\n     */\n    readonly ref: DatabaseReference,\n    readonly _index: Index\n  ) {}\n\n  /**\n   * Gets the priority value of the data in this `DataSnapshot`.\n   *\n   * Applications need not use priority but can order collections by\n   * ordinary properties (see\n   * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data |Sorting and filtering data}\n   * ).\n   */\n  get priority(): string | number | null {\n    // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\n    return this._node.getPriority().val() as string | number | null;\n  }\n\n  /**\n   * The key (last part of the path) of the location of this `DataSnapshot`.\n   *\n   * The last token in a Database location is considered its key. For example,\n   * \"ada\" is the key for the /users/ada/ node. Accessing the key on any\n   * `DataSnapshot` will return the key for the location that generated it.\n   * However, accessing the key on the root URL of a Database will return\n   * `null`.\n   */\n  get key(): string | null {\n    return this.ref.key;\n  }\n\n  /** Returns the number of child properties of this `DataSnapshot`. */\n  get size(): number {\n    return this._node.numChildren();\n  }\n\n  /**\n   * Gets another `DataSnapshot` for the location at the specified relative path.\n   *\n   * Passing a relative path to the `child()` method of a DataSnapshot returns\n   * another `DataSnapshot` for the location at the specified relative path. The\n   * relative path can either be a simple child name (for example, \"ada\") or a\n   * deeper, slash-separated path (for example, \"ada/name/first\"). If the child\n   * location has no data, an empty `DataSnapshot` (that is, a `DataSnapshot`\n   * whose value is `null`) is returned.\n   *\n   * @param path - A relative path to the location of child data.\n   */\n  child(path: string): DataSnapshot {\n    const childPath = new Path(path);\n    const childRef = child(this.ref, path);\n    return new DataSnapshot(\n      this._node.getChild(childPath),\n      childRef,\n      PRIORITY_INDEX\n    );\n  }\n  /**\n   * Returns true if this `DataSnapshot` contains any data. It is slightly more\n   * efficient than using `snapshot.val() !== null`.\n   */\n  exists(): boolean {\n    return !this._node.isEmpty();\n  }\n\n  /**\n   * Exports the entire contents of the DataSnapshot as a JavaScript object.\n   *\n   * The `exportVal()` method is similar to `val()`, except priority information\n   * is included (if available), making it suitable for backing up your data.\n   *\n   * @returns The DataSnapshot's contents as a JavaScript value (Object,\n   *   Array, string, number, boolean, or `null`).\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  exportVal(): any {\n    return this._node.val(true);\n  }\n\n  /**\n   * Enumerates the top-level children in the `DataSnapshot`.\n   *\n   * Because of the way JavaScript objects work, the ordering of data in the\n   * JavaScript object returned by `val()` is not guaranteed to match the\n   * ordering on the server nor the ordering of `onChildAdded()` events. That is\n   * where `forEach()` comes in handy. It guarantees the children of a\n   * `DataSnapshot` will be iterated in their query order.\n   *\n   * If no explicit `orderBy*()` method is used, results are returned\n   * ordered by key (unless priorities are used, in which case, results are\n   * returned by priority).\n   *\n   * @param action - A function that will be called for each child DataSnapshot.\n   * The callback can return true to cancel further enumeration.\n   * @returns true if enumeration was canceled due to your callback returning\n   * true.\n   */\n  forEach(action: (child: DataSnapshot) => boolean | void): boolean {\n    if (this._node.isLeafNode()) {\n      return false;\n    }\n\n    const childrenNode = this._node as ChildrenNode;\n    // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\n    return !!childrenNode.forEachChild(this._index, (key, node) => {\n      return action(\n        new DataSnapshot(node, child(this.ref, key), PRIORITY_INDEX)\n      );\n    });\n  }\n\n  /**\n   * Returns true if the specified child path has (non-null) data.\n   *\n   * @param path - A relative path to the location of a potential child.\n   * @returns `true` if data exists at the specified child path; else\n   *  `false`.\n   */\n  hasChild(path: string): boolean {\n    const childPath = new Path(path);\n    return !this._node.getChild(childPath).isEmpty();\n  }\n\n  /**\n   * Returns whether or not the `DataSnapshot` has any non-`null` child\n   * properties.\n   *\n   * You can use `hasChildren()` to determine if a `DataSnapshot` has any\n   * children. If it does, you can enumerate them using `forEach()`. If it\n   * doesn't, then either this snapshot contains a primitive value (which can be\n   * retrieved with `val()`) or it is empty (in which case, `val()` will return\n   * `null`).\n   *\n   * @returns true if this snapshot has any children; else false.\n   */\n  hasChildren(): boolean {\n    if (this._node.isLeafNode()) {\n      return false;\n    } else {\n      return !this._node.isEmpty();\n    }\n  }\n\n  /**\n   * Returns a JSON-serializable representation of this object.\n   */\n  toJSON(): object | null {\n    return this.exportVal();\n  }\n\n  /**\n   * Extracts a JavaScript value from a `DataSnapshot`.\n   *\n   * Depending on the data in a `DataSnapshot`, the `val()` method may return a\n   * scalar type (string, number, or boolean), an array, or an object. It may\n   * also return null, indicating that the `DataSnapshot` is empty (contains no\n   * data).\n   *\n   * @returns The DataSnapshot's contents as a JavaScript value (Object,\n   *   Array, string, number, boolean, or `null`).\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  val(): any {\n    return this._node.val();\n  }\n}\n\n/**\n *\n * Returns a `Reference` representing the location in the Database\n * corresponding to the provided path. If no path is provided, the `Reference`\n * will point to the root of the Database.\n *\n * @param db - The database instance to obtain a reference for.\n * @param path - Optional path representing the location the returned\n *   `Reference` will point. If not provided, the returned `Reference` will\n *   point to the root of the Database.\n * @returns If a path is provided, a `Reference`\n *   pointing to the provided path. Otherwise, a `Reference` pointing to the\n *   root of the Database.\n */\nexport function ref(db: Database, path?: string): DatabaseReference {\n  db = getModularInstance(db);\n  db._checkNotDeleted('ref');\n  return path !== undefined ? child(db._root, path) : db._root;\n}\n\n/**\n * Returns a `Reference` representing the location in the Database\n * corresponding to the provided Firebase URL.\n *\n * An exception is thrown if the URL is not a valid Firebase Database URL or it\n * has a different domain than the current `Database` instance.\n *\n * Note that all query parameters (`orderBy`, `limitToLast`, etc.) are ignored\n * and are not applied to the returned `Reference`.\n *\n * @param db - The database instance to obtain a reference for.\n * @param url - The Firebase URL at which the returned `Reference` will\n *   point.\n * @returns A `Reference` pointing to the provided\n *   Firebase URL.\n */\nexport function refFromURL(db: Database, url: string): DatabaseReference {\n  db = getModularInstance(db);\n  db._checkNotDeleted('refFromURL');\n  const parsedURL = parseRepoInfo(url, db._repo.repoInfo_.nodeAdmin);\n  validateUrl('refFromURL', parsedURL);\n\n  const repoInfo = parsedURL.repoInfo;\n  if (\n    !db._repo.repoInfo_.isCustomHost() &&\n    repoInfo.host !== db._repo.repoInfo_.host\n  ) {\n    fatal(\n      'refFromURL' +\n        ': Host name does not match the current database: ' +\n        '(found ' +\n        repoInfo.host +\n        ' but expected ' +\n        db._repo.repoInfo_.host +\n        ')'\n    );\n  }\n\n  return ref(db, parsedURL.path.toString());\n}\n/**\n * Gets a `Reference` for the location at the specified relative path.\n *\n * The relative path can either be a simple child name (for example, \"ada\") or\n * a deeper slash-separated path (for example, \"ada/name/first\").\n *\n * @param parent - The parent location.\n * @param path - A relative path from this location to the desired child\n *   location.\n * @returns The specified child location.\n */\nexport function child(\n  parent: DatabaseReference,\n  path: string\n): DatabaseReference {\n  parent = getModularInstance(parent);\n  if (pathGetFront(parent._path) === null) {\n    validateRootPathString('child', 'path', path, false);\n  } else {\n    validatePathString('child', 'path', path, false);\n  }\n  return new ReferenceImpl(parent._repo, pathChild(parent._path, path));\n}\n\n/**\n * Returns an `OnDisconnect` object - see\n * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\n * for more information on how to use it.\n *\n * @param ref - The reference to add OnDisconnect triggers for.\n */\nexport function onDisconnect(ref: DatabaseReference): OnDisconnect {\n  ref = getModularInstance(ref) as ReferenceImpl;\n  return new OnDisconnect(ref._repo, ref._path);\n}\n\nexport interface ThenableReferenceImpl\n  extends ReferenceImpl,\n    Pick<Promise<ReferenceImpl>, 'then' | 'catch'> {}\n\n/**\n * Generates a new child location using a unique key and returns its\n * `Reference`.\n *\n * This is the most common pattern for adding data to a collection of items.\n *\n * If you provide a value to `push()`, the value is written to the\n * generated location. If you don't pass a value, nothing is written to the\n * database and the child remains empty (but you can use the `Reference`\n * elsewhere).\n *\n * The unique keys generated by `push()` are ordered by the current time, so the\n * resulting list of items is chronologically sorted. The keys are also\n * designed to be unguessable (they contain 72 random bits of entropy).\n *\n * See {@link https://firebase.google.com/docs/database/web/lists-of-data#append_to_a_list_of_data | Append to a list of data}.\n * See {@link https://firebase.googleblog.com/2015/02/the-2120-ways-to-ensure-unique_68.html | The 2^120 Ways to Ensure Unique Identifiers}.\n *\n * @param parent - The parent location.\n * @param value - Optional value to be written at the generated location.\n * @returns Combined `Promise` and `Reference`; resolves when write is complete,\n * but can be used immediately as the `Reference` to the child location.\n */\nexport function push(\n  parent: DatabaseReference,\n  value?: unknown\n): ThenableReference {\n  parent = getModularInstance(parent);\n  validateWritablePath('push', parent._path);\n  validateFirebaseDataArg('push', value, parent._path, true);\n  const now = repoServerTime(parent._repo);\n  const name = nextPushId(now);\n\n  // push() returns a ThennableReference whose promise is fulfilled with a\n  // regular Reference. We use child() to create handles to two different\n  // references. The first is turned into a ThennableReference below by adding\n  // then() and catch() methods and is used as the return value of push(). The\n  // second remains a regular Reference and is used as the fulfilled value of\n  // the first ThennableReference.\n  const thennablePushRef: Partial<ThenableReferenceImpl> = child(\n    parent,\n    name\n  ) as ReferenceImpl;\n  const pushRef = child(parent, name) as ReferenceImpl;\n\n  let promise: Promise<ReferenceImpl>;\n  if (value != null) {\n    promise = set(pushRef, value).then(() => pushRef);\n  } else {\n    promise = Promise.resolve(pushRef);\n  }\n\n  thennablePushRef.then = promise.then.bind(promise);\n  thennablePushRef.catch = promise.then.bind(promise, undefined);\n  return thennablePushRef as ThenableReferenceImpl;\n}\n\n/**\n * Removes the data at this Database location.\n *\n * Any data at child locations will also be deleted.\n *\n * The effect of the remove will be visible immediately and the corresponding\n * event 'value' will be triggered. Synchronization of the remove to the\n * Firebase servers will also be started, and the returned Promise will resolve\n * when complete. If provided, the onComplete callback will be called\n * asynchronously after synchronization has finished.\n *\n * @param ref - The location to remove.\n * @returns Resolves when remove on server is complete.\n */\nexport function remove(ref: DatabaseReference): Promise<void> {\n  validateWritablePath('remove', ref._path);\n  return set(ref, null);\n}\n\n/**\n * Writes data to this Database location.\n *\n * This will overwrite any data at this location and all child locations.\n *\n * The effect of the write will be visible immediately, and the corresponding\n * events (\"value\", \"child_added\", etc.) will be triggered. Synchronization of\n * the data to the Firebase servers will also be started, and the returned\n * Promise will resolve when complete. If provided, the `onComplete` callback\n * will be called asynchronously after synchronization has finished.\n *\n * Passing `null` for the new value is equivalent to calling `remove()`; namely,\n * all data at this location and all child locations will be deleted.\n *\n * `set()` will remove any priority stored at this location, so if priority is\n * meant to be preserved, you need to use `setWithPriority()` instead.\n *\n * Note that modifying data with `set()` will cancel any pending transactions\n * at that location, so extreme care should be taken if mixing `set()` and\n * `transaction()` to modify the same data.\n *\n * A single `set()` will generate a single \"value\" event at the location where\n * the `set()` was performed.\n *\n * @param ref - The location to write to.\n * @param value - The value to be written (string, number, boolean, object,\n *   array, or null).\n * @returns Resolves when write to server is complete.\n */\nexport function set(ref: DatabaseReference, value: unknown): Promise<void> {\n  ref = getModularInstance(ref);\n  validateWritablePath('set', ref._path);\n  validateFirebaseDataArg('set', value, ref._path, false);\n  const deferred = new Deferred<void>();\n  repoSetWithPriority(\n    ref._repo,\n    ref._path,\n    value,\n    /*priority=*/ null,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Sets a priority for the data at this Database location.\n *\n * Applications need not use priority but can order collections by\n * ordinary properties (see\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\n * ).\n *\n * @param ref - The location to write to.\n * @param priority - The priority to be written (string, number, or null).\n * @returns Resolves when write to server is complete.\n */\nexport function setPriority(\n  ref: DatabaseReference,\n  priority: string | number | null\n): Promise<void> {\n  ref = getModularInstance(ref);\n  validateWritablePath('setPriority', ref._path);\n  validatePriority('setPriority', priority, false);\n  const deferred = new Deferred<void>();\n  repoSetWithPriority(\n    ref._repo,\n    pathChild(ref._path, '.priority'),\n    priority,\n    null,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Writes data the Database location. Like `set()` but also specifies the\n * priority for that data.\n *\n * Applications need not use priority but can order collections by\n * ordinary properties (see\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\n * ).\n *\n * @param ref - The location to write to.\n * @param value - The value to be written (string, number, boolean, object,\n *   array, or null).\n * @param priority - The priority to be written (string, number, or null).\n * @returns Resolves when write to server is complete.\n */\nexport function setWithPriority(\n  ref: DatabaseReference,\n  value: unknown,\n  priority: string | number | null\n): Promise<void> {\n  validateWritablePath('setWithPriority', ref._path);\n  validateFirebaseDataArg('setWithPriority', value, ref._path, false);\n  validatePriority('setWithPriority', priority, false);\n  if (ref.key === '.length' || ref.key === '.keys') {\n    throw 'setWithPriority failed: ' + ref.key + ' is a read-only object.';\n  }\n\n  const deferred = new Deferred<void>();\n  repoSetWithPriority(\n    ref._repo,\n    ref._path,\n    value,\n    priority,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Writes multiple values to the Database at once.\n *\n * The `values` argument contains multiple property-value pairs that will be\n * written to the Database together. Each child property can either be a simple\n * property (for example, \"name\") or a relative path (for example,\n * \"name/first\") from the current location to the data to update.\n *\n * As opposed to the `set()` method, `update()` can be use to selectively update\n * only the referenced properties at the current location (instead of replacing\n * all the child properties at the current location).\n *\n * The effect of the write will be visible immediately, and the corresponding\n * events ('value', 'child_added', etc.) will be triggered. Synchronization of\n * the data to the Firebase servers will also be started, and the returned\n * Promise will resolve when complete. If provided, the `onComplete` callback\n * will be called asynchronously after synchronization has finished.\n *\n * A single `update()` will generate a single \"value\" event at the location\n * where the `update()` was performed, regardless of how many children were\n * modified.\n *\n * Note that modifying data with `update()` will cancel any pending\n * transactions at that location, so extreme care should be taken if mixing\n * `update()` and `transaction()` to modify the same data.\n *\n * Passing `null` to `update()` will remove the data at this location.\n *\n * See\n * {@link https://firebase.googleblog.com/2015/09/introducing-multi-location-updates-and_86.html | Introducing multi-location updates and more}.\n *\n * @param ref - The location to write to.\n * @param values - Object containing multiple values.\n * @returns Resolves when update on server is complete.\n */\nexport function update(ref: DatabaseReference, values: object): Promise<void> {\n  validateFirebaseMergeDataArg('update', values, ref._path, false);\n  const deferred = new Deferred<void>();\n  repoUpdate(\n    ref._repo,\n    ref._path,\n    values as Record<string, unknown>,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Gets the most up-to-date result for this query.\n *\n * @param query - The query to run.\n * @returns A `Promise` which resolves to the resulting DataSnapshot if a value is\n * available, or rejects if the client is unable to return a value (e.g., if the\n * server is unreachable and there is nothing cached).\n */\nexport function get(query: Query): Promise<DataSnapshot> {\n  query = getModularInstance(query) as QueryImpl;\n  const callbackContext = new CallbackContext(() => {});\n  const container = new ValueEventRegistration(callbackContext);\n  return repoGetValue(query._repo, query, container).then(node => {\n    return new DataSnapshot(\n      node,\n      new ReferenceImpl(query._repo, query._path),\n      query._queryParams.getIndex()\n    );\n  });\n}\n/**\n * Represents registration for 'value' events.\n */\nexport class ValueEventRegistration implements EventRegistration {\n  constructor(private callbackContext: CallbackContext) {}\n\n  respondsTo(eventType: string): boolean {\n    return eventType === 'value';\n  }\n\n  createEvent(change: Change, query: QueryContext): DataEvent {\n    const index = query._queryParams.getIndex();\n    return new DataEvent(\n      'value',\n      this,\n      new DataSnapshot(\n        change.snapshotNode,\n        new ReferenceImpl(query._repo, query._path),\n        index\n      )\n    );\n  }\n\n  getEventRunner(eventData: CancelEvent | DataEvent): () => void {\n    if (eventData.getEventType() === 'cancel') {\n      return () =>\n        this.callbackContext.onCancel((eventData as CancelEvent).error);\n    } else {\n      return () =>\n        this.callbackContext.onValue((eventData as DataEvent).snapshot, null);\n    }\n  }\n\n  createCancelEvent(error: Error, path: Path): CancelEvent | null {\n    if (this.callbackContext.hasCancelCallback) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  }\n\n  matches(other: EventRegistration): boolean {\n    if (!(other instanceof ValueEventRegistration)) {\n      return false;\n    } else if (!other.callbackContext || !this.callbackContext) {\n      // If no callback specified, we consider it to match any callback.\n      return true;\n    } else {\n      return other.callbackContext.matches(this.callbackContext);\n    }\n  }\n\n  hasAnyCallback(): boolean {\n    return this.callbackContext !== null;\n  }\n}\n\n/**\n * Represents the registration of a child_x event.\n */\nexport class ChildEventRegistration implements EventRegistration {\n  constructor(\n    private eventType: string,\n    private callbackContext: CallbackContext | null\n  ) {}\n\n  respondsTo(eventType: string): boolean {\n    let eventToCheck =\n      eventType === 'children_added' ? 'child_added' : eventType;\n    eventToCheck =\n      eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\n    return this.eventType === eventToCheck;\n  }\n\n  createCancelEvent(error: Error, path: Path): CancelEvent | null {\n    if (this.callbackContext.hasCancelCallback) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  }\n\n  createEvent(change: Change, query: QueryContext): DataEvent {\n    assert(change.childName != null, 'Child events should have a childName.');\n    const childRef = child(\n      new ReferenceImpl(query._repo, query._path),\n      change.childName\n    );\n    const index = query._queryParams.getIndex();\n    return new DataEvent(\n      change.type as EventType,\n      this,\n      new DataSnapshot(change.snapshotNode, childRef, index),\n      change.prevName\n    );\n  }\n\n  getEventRunner(eventData: CancelEvent | DataEvent): () => void {\n    if (eventData.getEventType() === 'cancel') {\n      return () =>\n        this.callbackContext.onCancel((eventData as CancelEvent).error);\n    } else {\n      return () =>\n        this.callbackContext.onValue(\n          (eventData as DataEvent).snapshot,\n          (eventData as DataEvent).prevName\n        );\n    }\n  }\n\n  matches(other: EventRegistration): boolean {\n    if (other instanceof ChildEventRegistration) {\n      return (\n        this.eventType === other.eventType &&\n        (!this.callbackContext ||\n          !other.callbackContext ||\n          this.callbackContext.matches(other.callbackContext))\n      );\n    }\n\n    return false;\n  }\n\n  hasAnyCallback(): boolean {\n    return !!this.callbackContext;\n  }\n}\n\nfunction addEventListener(\n  query: Query,\n  eventType: EventType,\n  callback: UserCallback,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n) {\n  let cancelCallback: ((error: Error) => unknown) | undefined;\n  if (typeof cancelCallbackOrListenOptions === 'object') {\n    cancelCallback = undefined;\n    options = cancelCallbackOrListenOptions;\n  }\n  if (typeof cancelCallbackOrListenOptions === 'function') {\n    cancelCallback = cancelCallbackOrListenOptions;\n  }\n\n  if (options && options.onlyOnce) {\n    const userCallback = callback;\n    const onceCallback: UserCallback = (dataSnapshot, previousChildName) => {\n      repoRemoveEventCallbackForQuery(query._repo, query, container);\n      userCallback(dataSnapshot, previousChildName);\n    };\n    onceCallback.userCallback = callback.userCallback;\n    onceCallback.context = callback.context;\n    callback = onceCallback;\n  }\n\n  const callbackContext = new CallbackContext(\n    callback,\n    cancelCallback || undefined\n  );\n  const container =\n    eventType === 'value'\n      ? new ValueEventRegistration(callbackContext)\n      : new ChildEventRegistration(eventType, callbackContext);\n  repoAddEventCallbackForQuery(query._repo, query, container);\n  return () => repoRemoveEventCallbackForQuery(query._repo, query, container);\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onValue` event will trigger once with the initial data stored at this\n * location, and then trigger again each time the data changes. The\n * `DataSnapshot` passed to the callback will be for the location at which\n * `on()` was called. It won't trigger until the entire contents has been\n * synchronized. If the location has no data, it will be triggered with an empty\n * `DataSnapshot` (`val()` will return `null`).\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs. The\n * callback will be passed a DataSnapshot.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onValue` event will trigger once with the initial data stored at this\n * location, and then trigger again each time the data changes. The\n * `DataSnapshot` passed to the callback will be for the location at which\n * `on()` was called. It won't trigger until the entire contents has been\n * synchronized. If the location has no data, it will be triggered with an empty\n * `DataSnapshot` (`val()` will return `null`).\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs. The\n * callback will be passed a DataSnapshot.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onValue` event will trigger once with the initial data stored at this\n * location, and then trigger again each time the data changes. The\n * `DataSnapshot` passed to the callback will be for the location at which\n * `on()` was called. It won't trigger until the entire contents has been\n * synchronized. If the location has no data, it will be triggered with an empty\n * `DataSnapshot` (`val()` will return `null`).\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs. The\n * callback will be passed a DataSnapshot.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'value',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildAdded` event will be triggered once for each initial child at this\n * location, and it will be triggered again every time a new child is added. The\n * `DataSnapshot` passed into the callback will reflect the data for the\n * relevant child. For ordering purposes, it is passed a second argument which\n * is a string containing the key of the previous sibling child by sort order,\n * or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName?: string | null\n  ) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildAdded` event will be triggered once for each initial child at this\n * location, and it will be triggered again every time a new child is added. The\n * `DataSnapshot` passed into the callback will reflect the data for the\n * relevant child. For ordering purposes, it is passed a second argument which\n * is a string containing the key of the previous sibling child by sort order,\n * or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildAdded` event will be triggered once for each initial child at this\n * location, and it will be triggered again every time a new child is added. The\n * `DataSnapshot` passed into the callback will reflect the data for the\n * relevant child. For ordering purposes, it is passed a second argument which\n * is a string containing the key of the previous sibling child by sort order,\n * or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_added',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildChanged` event will be triggered when the data stored in a child\n * (or any of its descendants) changes. Note that a single `child_changed` event\n * may represent multiple changes to the child. The `DataSnapshot` passed to the\n * callback will contain the new child contents. For ordering purposes, the\n * callback is also passed a second argument which is a string containing the\n * key of the previous sibling child by sort order, or `null` if it is the first\n * child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildChanged` event will be triggered when the data stored in a child\n * (or any of its descendants) changes. Note that a single `child_changed` event\n * may represent multiple changes to the child. The `DataSnapshot` passed to the\n * callback will contain the new child contents. For ordering purposes, the\n * callback is also passed a second argument which is a string containing the\n * key of the previous sibling child by sort order, or `null` if it is the first\n * child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildChanged` event will be triggered when the data stored in a child\n * (or any of its descendants) changes. Note that a single `child_changed` event\n * may represent multiple changes to the child. The `DataSnapshot` passed to the\n * callback will contain the new child contents. For ordering purposes, the\n * callback is also passed a second argument which is a string containing the\n * key of the previous sibling child by sort order, or `null` if it is the first\n * child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_changed',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildMoved` event will be triggered when a child's sort order changes\n * such that its position relative to its siblings changes. The `DataSnapshot`\n * passed to the callback will be for the data of the child that has moved. It\n * is also passed a second argument which is a string containing the key of the\n * previous sibling child by sort order, or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildMoved` event will be triggered when a child's sort order changes\n * such that its position relative to its siblings changes. The `DataSnapshot`\n * passed to the callback will be for the data of the child that has moved. It\n * is also passed a second argument which is a string containing the key of the\n * previous sibling child by sort order, or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildMoved` event will be triggered when a child's sort order changes\n * such that its position relative to its siblings changes. The `DataSnapshot`\n * passed to the callback will be for the data of the child that has moved. It\n * is also passed a second argument which is a string containing the key of the\n * previous sibling child by sort order, or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_moved',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildRemoved` event will be triggered once every time a child is\n * removed. The `DataSnapshot` passed into the callback will be the old data for\n * the child that was removed. A child will get removed when either:\n *\n * - a client explicitly calls `remove()` on that child or one of its ancestors\n * - a client calls `set(null)` on that child or one of its ancestors\n * - that child has all of its children removed\n * - there is a query in effect which now filters out the child (because it's\n *   sort order changed or the max limit was hit)\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildRemoved` event will be triggered once every time a child is\n * removed. The `DataSnapshot` passed into the callback will be the old data for\n * the child that was removed. A child will get removed when either:\n *\n * - a client explicitly calls `remove()` on that child or one of its ancestors\n * - a client calls `set(null)` on that child or one of its ancestors\n * - that child has all of its children removed\n * - there is a query in effect which now filters out the child (because it's\n *   sort order changed or the max limit was hit)\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildRemoved` event will be triggered once every time a child is\n * removed. The `DataSnapshot` passed into the callback will be the old data for\n * the child that was removed. A child will get removed when either:\n *\n * - a client explicitly calls `remove()` on that child or one of its ancestors\n * - a client calls `set(null)` on that child or one of its ancestors\n * - that child has all of its children removed\n * - there is a query in effect which now filters out the child (because it's\n *   sort order changed or the max limit was hit)\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_removed',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\nexport { EventType };\n\n/**\n * Detaches a callback previously attached with the corresponding `on*()` (`onValue`, `onChildAdded`) listener.\n * Note: This is not the recommended way to remove a listener. Instead, please use the returned callback function from\n * the respective `on*` callbacks.\n *\n * Detach a callback previously attached with `on*()`. Calling `off()` on a parent listener\n * will not automatically remove listeners registered on child nodes, `off()`\n * must also be called on any child listeners to remove the callback.\n *\n * If a callback is not specified, all callbacks for the specified eventType\n * will be removed. Similarly, if no eventType is specified, all callbacks\n * for the `Reference` will be removed.\n *\n * Individual listeners can also be removed by invoking their unsubscribe\n * callbacks.\n *\n * @param query - The query that the listener was registered with.\n * @param eventType - One of the following strings: \"value\", \"child_added\",\n * \"child_changed\", \"child_removed\", or \"child_moved.\" If omitted, all callbacks\n * for the `Reference` will be removed.\n * @param callback - The callback function that was passed to `on()` or\n * `undefined` to remove all callbacks.\n */\nexport function off(\n  query: Query,\n  eventType?: EventType,\n  callback?: (\n    snapshot: DataSnapshot,\n    previousChildName?: string | null\n  ) => unknown\n): void {\n  let container: EventRegistration | null = null;\n  const expCallback = callback ? new CallbackContext(callback) : null;\n  if (eventType === 'value') {\n    container = new ValueEventRegistration(expCallback);\n  } else if (eventType) {\n    container = new ChildEventRegistration(eventType, expCallback);\n  }\n  repoRemoveEventCallbackForQuery(query._repo, query, container);\n}\n\n/** Describes the different query constraints available in this SDK. */\nexport type QueryConstraintType =\n  | 'endAt'\n  | 'endBefore'\n  | 'startAt'\n  | 'startAfter'\n  | 'limitToFirst'\n  | 'limitToLast'\n  | 'orderByChild'\n  | 'orderByKey'\n  | 'orderByPriority'\n  | 'orderByValue'\n  | 'equalTo';\n\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Database query. `QueryConstraint`s are created by invoking {@link endAt},\n * {@link endBefore}, {@link startAt}, {@link startAfter}, {@link\n * limitToFirst}, {@link limitToLast}, {@link orderByChild},\n * {@link orderByChild}, {@link orderByKey} , {@link orderByPriority} ,\n * {@link orderByValue}  or {@link equalTo} and\n * can then be passed to {@link query} to create a new query instance that\n * also contains this `QueryConstraint`.\n */\nexport abstract class QueryConstraint {\n  /** The type of this query constraints */\n  abstract readonly type: QueryConstraintType;\n\n  /**\n   * Takes the provided `Query` and returns a copy of the `Query` with this\n   * `QueryConstraint` applied.\n   */\n  abstract _apply<T>(query: QueryImpl): QueryImpl;\n}\n\nclass QueryEndAtConstraint extends QueryConstraint {\n  readonly type: 'endAt';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('endAt', this._value, query._path, true);\n    const newParams = queryParamsEndAt(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasEnd()) {\n      throw new Error(\n        'endAt: Starting point was already set (by another call to endAt, ' +\n          'endBefore or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified ending point.\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The ending point is inclusive, so children with exactly the specified value\n * will be included in the query. The optional key argument can be used to\n * further limit the range of the query. If it is specified, then children that\n * have exactly the specified value must also have a key name less than or equal\n * to the specified key.\n *\n * You can read more about `endAt()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param value - The value to end at. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to end at, among the children with the previously\n * specified priority. This argument is only allowed if ordering by child,\n * value, or priority.\n */\nexport function endAt(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('endAt', 'key', key, true);\n  return new QueryEndAtConstraint(value, key);\n}\n\nclass QueryEndBeforeConstraint extends QueryConstraint {\n  readonly type: 'endBefore';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('endBefore', this._value, query._path, false);\n    const newParams = queryParamsEndBefore(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasEnd()) {\n      throw new Error(\n        'endBefore: Starting point was already set (by another call to endAt, ' +\n          'endBefore or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified ending point (exclusive).\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The ending point is exclusive. If only a value is provided, children\n * with a value less than the specified value will be included in the query.\n * If a key is specified, then children must have a value less than or equal\n * to the specified value and a key name less than the specified key.\n *\n * @param value - The value to end before. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to end before, among the children with the\n * previously specified priority. This argument is only allowed if ordering by\n * child, value, or priority.\n */\nexport function endBefore(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('endBefore', 'key', key, true);\n  return new QueryEndBeforeConstraint(value, key);\n}\n\nclass QueryStartAtConstraint extends QueryConstraint {\n  readonly type: 'startAt';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('startAt', this._value, query._path, true);\n    const newParams = queryParamsStartAt(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasStart()) {\n      throw new Error(\n        'startAt: Starting point was already set (by another call to startAt, ' +\n          'startBefore or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified starting point.\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The starting point is inclusive, so children with exactly the specified value\n * will be included in the query. The optional key argument can be used to\n * further limit the range of the query. If it is specified, then children that\n * have exactly the specified value must also have a key name greater than or\n * equal to the specified key.\n *\n * You can read more about `startAt()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param value - The value to start at. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to start at. This argument is only allowed if\n * ordering by child, value, or priority.\n */\nexport function startAt(\n  value: number | string | boolean | null = null,\n  key?: string\n): QueryConstraint {\n  validateKey('startAt', 'key', key, true);\n  return new QueryStartAtConstraint(value, key);\n}\n\nclass QueryStartAfterConstraint extends QueryConstraint {\n  readonly type: 'startAfter';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('startAfter', this._value, query._path, false);\n    const newParams = queryParamsStartAfter(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasStart()) {\n      throw new Error(\n        'startAfter: Starting point was already set (by another call to startAt, ' +\n          'startAfter, or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified starting point (exclusive).\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The starting point is exclusive. If only a value is provided, children\n * with a value greater than the specified value will be included in the query.\n * If a key is specified, then children must have a value greater than or equal\n * to the specified value and a a key name greater than the specified key.\n *\n * @param value - The value to start after. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to start after. This argument is only allowed if\n * ordering by child, value, or priority.\n */\nexport function startAfter(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('startAfter', 'key', key, true);\n  return new QueryStartAfterConstraint(value, key);\n}\n\nclass QueryLimitToFirstConstraint extends QueryConstraint {\n  readonly type: 'limitToFirst';\n\n  constructor(private readonly _limit: number) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    if (query._queryParams.hasLimit()) {\n      throw new Error(\n        'limitToFirst: Limit was already set (by another call to limitToFirst ' +\n          'or limitToLast).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      queryParamsLimitToFirst(query._queryParams, this._limit),\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that if limited to the first specific number\n * of children.\n *\n * The `limitToFirst()` method is used to set a maximum number of children to be\n * synced for a given callback. If we set a limit of 100, we will initially only\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\n * stored in our Database, a `child_added` event will fire for each message.\n * However, if we have over 100 messages, we will only receive a `child_added`\n * event for the first 100 ordered messages. As items change, we will receive\n * `child_removed` events for each item that drops out of the active list so\n * that the total number stays at 100.\n *\n * You can read more about `limitToFirst()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param limit - The maximum number of nodes to include in this query.\n */\nexport function limitToFirst(limit: number): QueryConstraint {\n  if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n    throw new Error('limitToFirst: First argument must be a positive integer.');\n  }\n  return new QueryLimitToFirstConstraint(limit);\n}\n\nclass QueryLimitToLastConstraint extends QueryConstraint {\n  readonly type: 'limitToLast';\n\n  constructor(private readonly _limit: number) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    if (query._queryParams.hasLimit()) {\n      throw new Error(\n        'limitToLast: Limit was already set (by another call to limitToFirst ' +\n          'or limitToLast).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      queryParamsLimitToLast(query._queryParams, this._limit),\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that is limited to return only the last\n * specified number of children.\n *\n * The `limitToLast()` method is used to set a maximum number of children to be\n * synced for a given callback. If we set a limit of 100, we will initially only\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\n * stored in our Database, a `child_added` event will fire for each message.\n * However, if we have over 100 messages, we will only receive a `child_added`\n * event for the last 100 ordered messages. As items change, we will receive\n * `child_removed` events for each item that drops out of the active list so\n * that the total number stays at 100.\n *\n * You can read more about `limitToLast()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param limit - The maximum number of nodes to include in this query.\n */\nexport function limitToLast(limit: number): QueryConstraint {\n  if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n    throw new Error('limitToLast: First argument must be a positive integer.');\n  }\n\n  return new QueryLimitToLastConstraint(limit);\n}\n\nclass QueryOrderByChildConstraint extends QueryConstraint {\n  readonly type: 'orderByChild';\n\n  constructor(private readonly _path: string) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByChild');\n    const parsedPath = new Path(this._path);\n    if (pathIsEmpty(parsedPath)) {\n      throw new Error(\n        'orderByChild: cannot pass in empty path. Use orderByValue() instead.'\n      );\n    }\n    const index = new PathIndex(parsedPath);\n    const newParams = queryParamsOrderBy(query._queryParams, index);\n    validateQueryEndpoints(newParams);\n\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by the specified child key.\n *\n * Queries can only order by one key at a time. Calling `orderByChild()`\n * multiple times on the same query is an error.\n *\n * Firebase queries allow you to order your data by any child key on the fly.\n * However, if you know in advance what your indexes will be, you can define\n * them via the .indexOn rule in your Security Rules for better performance. See\n * the{@link https://firebase.google.com/docs/database/security/indexing-data}\n * rule for more information.\n *\n * You can read more about `orderByChild()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\n *\n * @param path - The path to order by.\n */\nexport function orderByChild(path: string): QueryConstraint {\n  if (path === '$key') {\n    throw new Error(\n      'orderByChild: \"$key\" is invalid.  Use orderByKey() instead.'\n    );\n  } else if (path === '$priority') {\n    throw new Error(\n      'orderByChild: \"$priority\" is invalid.  Use orderByPriority() instead.'\n    );\n  } else if (path === '$value') {\n    throw new Error(\n      'orderByChild: \"$value\" is invalid.  Use orderByValue() instead.'\n    );\n  }\n  validatePathString('orderByChild', 'path', path, false);\n  return new QueryOrderByChildConstraint(path);\n}\n\nclass QueryOrderByKeyConstraint extends QueryConstraint {\n  readonly type: 'orderByKey';\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByKey');\n    const newParams = queryParamsOrderBy(query._queryParams, KEY_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by the key.\n *\n * Sorts the results of a query by their (ascending) key values.\n *\n * You can read more about `orderByKey()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\n */\nexport function orderByKey(): QueryConstraint {\n  return new QueryOrderByKeyConstraint();\n}\n\nclass QueryOrderByPriorityConstraint extends QueryConstraint {\n  readonly type: 'orderByPriority';\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByPriority');\n    const newParams = queryParamsOrderBy(query._queryParams, PRIORITY_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by priority.\n *\n * Applications need not use priority but can order collections by\n * ordinary properties (see\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}\n * for alternatives to priority.\n */\nexport function orderByPriority(): QueryConstraint {\n  return new QueryOrderByPriorityConstraint();\n}\n\nclass QueryOrderByValueConstraint extends QueryConstraint {\n  readonly type: 'orderByValue';\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByValue');\n    const newParams = queryParamsOrderBy(query._queryParams, VALUE_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by value.\n *\n * If the children of a query are all scalar values (string, number, or\n * boolean), you can order the results by their (ascending) values.\n *\n * You can read more about `orderByValue()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\n */\nexport function orderByValue(): QueryConstraint {\n  return new QueryOrderByValueConstraint();\n}\n\nclass QueryEqualToValueConstraint extends QueryConstraint {\n  readonly type: 'equalTo';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('equalTo', this._value, query._path, false);\n    if (query._queryParams.hasStart()) {\n      throw new Error(\n        'equalTo: Starting point was already set (by another call to startAt/startAfter or ' +\n          'equalTo).'\n      );\n    }\n    if (query._queryParams.hasEnd()) {\n      throw new Error(\n        'equalTo: Ending point was already set (by another call to endAt/endBefore or ' +\n          'equalTo).'\n      );\n    }\n    return new QueryEndAtConstraint(this._value, this._key)._apply(\n      new QueryStartAtConstraint(this._value, this._key)._apply(query)\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` that includes children that match the specified\n * value.\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The optional key argument can be used to further limit the range of the\n * query. If it is specified, then children that have exactly the specified\n * value must also have exactly the specified key as their key name. This can be\n * used to filter result sets with many matches for the same value.\n *\n * You can read more about `equalTo()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param value - The value to match for. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to start at, among the children with the\n * previously specified priority. This argument is only allowed if ordering by\n * child, value, or priority.\n */\nexport function equalTo(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('equalTo', 'key', key, true);\n  return new QueryEqualToValueConstraint(value, key);\n}\n\n/**\n * Creates a new immutable instance of `Query` that is extended to also include\n * additional query constraints.\n *\n * @param query - The Query instance to use as a base for the new constraints.\n * @param queryConstraints - The list of `QueryConstraint`s to apply.\n * @throws if any of the provided query constraints cannot be combined with the\n * existing or new constraints.\n */\nexport function query(\n  query: Query,\n  ...queryConstraints: QueryConstraint[]\n): Query {\n  let queryImpl = getModularInstance(query) as QueryImpl;\n  for (const constraint of queryConstraints) {\n    queryImpl = constraint._apply(queryImpl);\n  }\n  return queryImpl;\n}\n\n/**\n * Define reference constructor in various modules\n *\n * We are doing this here to avoid several circular\n * dependency issues\n */\nsyncPointSetReferenceConstructor(ReferenceImpl);\nsyncTreeSetReferenceConstructor(ReferenceImpl);\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from '@firebase/util';\n\nimport {\n  Repo,\n  repoOnDisconnectCancel,\n  repoOnDisconnectSet,\n  repoOnDisconnectSetWithPriority,\n  repoOnDisconnectUpdate\n} from '../core/Repo';\nimport { Path } from '../core/util/Path';\nimport {\n  validateFirebaseDataArg,\n  validateFirebaseMergeDataArg,\n  validatePriority,\n  validateWritablePath\n} from '../core/util/validation';\n\n/**\n * The `onDisconnect` class allows you to write or clear data when your client\n * disconnects from the Database server. These updates occur whether your\n * client disconnects cleanly or not, so you can rely on them to clean up data\n * even if a connection is dropped or a client crashes.\n *\n * The `onDisconnect` class is most commonly used to manage presence in\n * applications where it is useful to detect how many clients are connected and\n * when other clients disconnect. See\n * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\n * for more information.\n *\n * To avoid problems when a connection is dropped before the requests can be\n * transferred to the Database server, these functions should be called before\n * writing any data.\n *\n * Note that `onDisconnect` operations are only triggered once. If you want an\n * operation to occur each time a disconnect occurs, you'll need to re-establish\n * the `onDisconnect` operations each time you reconnect.\n */\nexport class OnDisconnect {\n  /** @hideconstructor */\n  constructor(private _repo: Repo, private _path: Path) {}\n\n  /**\n   * Cancels all previously queued `onDisconnect()` set or update events for this\n   * location and all children.\n   *\n   * If a write has been queued for this location via a `set()` or `update()` at a\n   * parent location, the write at this location will be canceled, though writes\n   * to sibling locations will still occur.\n   *\n   * @returns Resolves when synchronization to the server is complete.\n   */\n  cancel(): Promise<void> {\n    const deferred = new Deferred<void>();\n    repoOnDisconnectCancel(\n      this._repo,\n      this._path,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * Ensures the data at this location is deleted when the client is disconnected\n   * (due to closing the browser, navigating to a new page, or network issues).\n   *\n   * @returns Resolves when synchronization to the server is complete.\n   */\n  remove(): Promise<void> {\n    validateWritablePath('OnDisconnect.remove', this._path);\n    const deferred = new Deferred<void>();\n    repoOnDisconnectSet(\n      this._repo,\n      this._path,\n      null,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * Ensures the data at this location is set to the specified value when the\n   * client is disconnected (due to closing the browser, navigating to a new page,\n   * or network issues).\n   *\n   * `set()` is especially useful for implementing \"presence\" systems, where a\n   * value should be changed or cleared when a user disconnects so that they\n   * appear \"offline\" to other users. See\n   * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\n   * for more information.\n   *\n   * Note that `onDisconnect` operations are only triggered once. If you want an\n   * operation to occur each time a disconnect occurs, you'll need to re-establish\n   * the `onDisconnect` operations each time.\n   *\n   * @param value - The value to be written to this location on disconnect (can\n   * be an object, array, string, number, boolean, or null).\n   * @returns Resolves when synchronization to the Database is complete.\n   */\n  set(value: unknown): Promise<void> {\n    validateWritablePath('OnDisconnect.set', this._path);\n    validateFirebaseDataArg('OnDisconnect.set', value, this._path, false);\n    const deferred = new Deferred<void>();\n    repoOnDisconnectSet(\n      this._repo,\n      this._path,\n      value,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * Ensures the data at this location is set to the specified value and priority\n   * when the client is disconnected (due to closing the browser, navigating to a\n   * new page, or network issues).\n   *\n   * @param value - The value to be written to this location on disconnect (can\n   * be an object, array, string, number, boolean, or null).\n   * @param priority - The priority to be written (string, number, or null).\n   * @returns Resolves when synchronization to the Database is complete.\n   */\n  setWithPriority(\n    value: unknown,\n    priority: number | string | null\n  ): Promise<void> {\n    validateWritablePath('OnDisconnect.setWithPriority', this._path);\n    validateFirebaseDataArg(\n      'OnDisconnect.setWithPriority',\n      value,\n      this._path,\n      false\n    );\n    validatePriority('OnDisconnect.setWithPriority', priority, false);\n\n    const deferred = new Deferred<void>();\n    repoOnDisconnectSetWithPriority(\n      this._repo,\n      this._path,\n      value,\n      priority,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * Writes multiple values at this location when the client is disconnected (due\n   * to closing the browser, navigating to a new page, or network issues).\n   *\n   * The `values` argument contains multiple property-value pairs that will be\n   * written to the Database together. Each child property can either be a simple\n   * property (for example, \"name\") or a relative path (for example, \"name/first\")\n   * from the current location to the data to update.\n   *\n   * As opposed to the `set()` method, `update()` can be use to selectively update\n   * only the referenced properties at the current location (instead of replacing\n   * all the child properties at the current location).\n   *\n   * @param values - Object containing multiple values.\n   * @returns Resolves when synchronization to the Database is complete.\n   */\n  update(values: object): Promise<void> {\n    validateWritablePath('OnDisconnect.update', this._path);\n    validateFirebaseMergeDataArg(\n      'OnDisconnect.update',\n      values,\n      this._path,\n      false\n    );\n    const deferred = new Deferred<void>();\n    repoOnDisconnectUpdate(\n      this._repo,\n      this._path,\n      values as Record<string, unknown>,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport {\n  tryParseInt,\n  MAX_NAME,\n  MIN_NAME,\n  INTEGER_32_MIN,\n  INTEGER_32_MAX\n} from '../util/util';\n\n// Modeled after base64 web-safe chars, but ordered by ASCII.\nconst PUSH_CHARS =\n  '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\n\nconst MIN_PUSH_CHAR = '-';\n\nconst MAX_PUSH_CHAR = 'z';\n\nconst MAX_KEY_LEN = 786;\n\n/**\n * Fancy ID generator that creates 20-character string identifiers with the\n * following properties:\n *\n * 1. They're based on timestamp so that they sort *after* any existing ids.\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\n *    collide with other clients' IDs.\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\n *    that will sort properly).\n * 4. They're monotonically increasing. Even if you generate more than one in\n *    the same timestamp, the latter ones will sort after the former ones. We do\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\n *    in the case of a timestamp collision).\n */\nexport const nextPushId = (function () {\n  // Timestamp of last push, used to prevent local collisions if you push twice\n  // in one ms.\n  let lastPushTime = 0;\n\n  // We generate 72-bits of randomness which get turned into 12 characters and\n  // appended to the timestamp to prevent collisions with other clients. We\n  // store the last characters we generated because in the event of a collision,\n  // we'll use those same characters except \"incremented\" by one.\n  const lastRandChars: number[] = [];\n\n  return function (now: number) {\n    const duplicateTime = now === lastPushTime;\n    lastPushTime = now;\n\n    let i;\n    const timeStampChars = new Array(8);\n    for (i = 7; i >= 0; i--) {\n      timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\n      // NOTE: Can't use << here because javascript will convert to int and lose\n      // the upper bits.\n      now = Math.floor(now / 64);\n    }\n    assert(now === 0, 'Cannot push at time == 0');\n\n    let id = timeStampChars.join('');\n\n    if (!duplicateTime) {\n      for (i = 0; i < 12; i++) {\n        lastRandChars[i] = Math.floor(Math.random() * 64);\n      }\n    } else {\n      // If the timestamp hasn't changed since last push, use the same random\n      // number, except incremented by 1.\n      for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\n        lastRandChars[i] = 0;\n      }\n      lastRandChars[i]++;\n    }\n    for (i = 0; i < 12; i++) {\n      id += PUSH_CHARS.charAt(lastRandChars[i]);\n    }\n    assert(id.length === 20, 'nextPushId: Length should be 20.');\n\n    return id;\n  };\n})();\n\nexport const successor = function (key: string) {\n  if (key === '' + INTEGER_32_MAX) {\n    // See https://firebase.google.com/docs/database/web/lists-of-data#data-order\n    return MIN_PUSH_CHAR;\n  }\n  const keyAsInt: number = tryParseInt(key);\n  if (keyAsInt != null) {\n    return '' + (keyAsInt + 1);\n  }\n  const next = new Array(key.length);\n\n  for (let i = 0; i < next.length; i++) {\n    next[i] = key.charAt(i);\n  }\n\n  if (next.length < MAX_KEY_LEN) {\n    next.push(MIN_PUSH_CHAR);\n    return next.join('');\n  }\n\n  let i = next.length - 1;\n\n  while (i >= 0 && next[i] === MAX_PUSH_CHAR) {\n    i--;\n  }\n\n  // `successor` was called on the largest possible key, so return the\n  // MAX_NAME, which sorts larger than all keys.\n  if (i === -1) {\n    return MAX_NAME;\n  }\n\n  const source = next[i];\n  const sourcePlusOne = PUSH_CHARS.charAt(PUSH_CHARS.indexOf(source) + 1);\n  next[i] = sourcePlusOne;\n\n  return next.slice(0, i + 1).join('');\n};\n\n// `key` is assumed to be non-empty.\nexport const predecessor = function (key: string) {\n  if (key === '' + INTEGER_32_MIN) {\n    return MIN_NAME;\n  }\n  const keyAsInt: number = tryParseInt(key);\n  if (keyAsInt != null) {\n    return '' + (keyAsInt - 1);\n  }\n  const next = new Array(key.length);\n  for (let i = 0; i < next.length; i++) {\n    next[i] = key.charAt(i);\n  }\n  // If `key` ends in `MIN_PUSH_CHAR`, the largest key lexicographically\n  // smaller than `key`, is `key[0:key.length - 1]`. The next key smaller\n  // than that, `predecessor(predecessor(key))`, is\n  //\n  // `key[0:key.length - 2] + (key[key.length - 1] - 1) + \\\n  //   { MAX_PUSH_CHAR repeated MAX_KEY_LEN - (key.length - 1) times }\n  //\n  // analogous to increment/decrement for base-10 integers.\n  //\n  // This works because lexigographic comparison works character-by-character,\n  // using length as a tie-breaker if one key is a prefix of the other.\n  if (next[next.length - 1] === MIN_PUSH_CHAR) {\n    if (next.length === 1) {\n      // See https://firebase.google.com/docs/database/web/lists-of-data#orderbykey\n      return '' + INTEGER_32_MAX;\n    }\n    delete next[next.length - 1];\n    return next.join('');\n  }\n  // Replace the last character with it's immediate predecessor, and\n  // fill the suffix of the key with MAX_PUSH_CHAR. This is the\n  // lexicographically largest possible key smaller than `key`.\n  next[next.length - 1] = PUSH_CHARS.charAt(\n    PUSH_CHARS.indexOf(next[next.length - 1]) - 1\n  );\n  return next.join('') + MAX_PUSH_CHAR.repeat(MAX_KEY_LEN - next.length);\n};\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport {\n  _FirebaseService,\n  _getProvider,\n  FirebaseApp,\n  getApp\n} from '@firebase/app';\nimport { AppCheckInternalComponentName } from '@firebase/app-check-interop-types';\nimport { FirebaseAuthInternalName } from '@firebase/auth-interop-types';\nimport { Provider } from '@firebase/component';\nimport {\n  getModularInstance,\n  createMockUserToken,\n  EmulatorMockTokenOptions,\n  getDefaultEmulatorHostnameAndPort\n} from '@firebase/util';\n\nimport { AppCheckTokenProvider } from '../core/AppCheckTokenProvider';\nimport {\n  AuthTokenProvider,\n  EmulatorTokenProvider,\n  FirebaseAuthTokenProvider\n} from '../core/AuthTokenProvider';\nimport { Repo, repoInterrupt, repoResume, repoStart } from '../core/Repo';\nimport { RepoInfo } from '../core/RepoInfo';\nimport { parseRepoInfo } from '../core/util/libs/parser';\nimport { newEmptyPath, pathIsEmpty } from '../core/util/Path';\nimport {\n  warn,\n  fatal,\n  log,\n  enableLogging as enableLoggingImpl\n} from '../core/util/util';\nimport { validateUrl } from '../core/util/validation';\nimport { BrowserPollConnection } from '../realtime/BrowserPollConnection';\nimport { TransportManager } from '../realtime/TransportManager';\nimport { WebSocketConnection } from '../realtime/WebSocketConnection';\n\nimport { ReferenceImpl } from './Reference_impl';\n\nexport { EmulatorMockTokenOptions } from '@firebase/util';\n/**\n * This variable is also defined in the firebase Node.js Admin SDK. Before\n * modifying this definition, consult the definition in:\n *\n * https://github.com/firebase/firebase-admin-node\n *\n * and make sure the two are consistent.\n */\nconst FIREBASE_DATABASE_EMULATOR_HOST_VAR = 'FIREBASE_DATABASE_EMULATOR_HOST';\n\n/**\n * Creates and caches `Repo` instances.\n */\nconst repos: {\n  [appName: string]: {\n    [dbUrl: string]: Repo;\n  };\n} = {};\n\n/**\n * If true, any new `Repo` will be created to use `ReadonlyRestClient` (for testing purposes).\n */\nlet useRestClient = false;\n\n/**\n * Update an existing `Repo` in place to point to a new host/port.\n */\nfunction repoManagerApplyEmulatorSettings(\n  repo: Repo,\n  host: string,\n  port: number,\n  tokenProvider?: AuthTokenProvider\n): void {\n  repo.repoInfo_ = new RepoInfo(\n    `${host}:${port}`,\n    /* secure= */ false,\n    repo.repoInfo_.namespace,\n    repo.repoInfo_.webSocketOnly,\n    repo.repoInfo_.nodeAdmin,\n    repo.repoInfo_.persistenceKey,\n    repo.repoInfo_.includeNamespaceInQueryParams\n  );\n\n  if (tokenProvider) {\n    repo.authTokenProvider_ = tokenProvider;\n  }\n}\n\n/**\n * This function should only ever be called to CREATE a new database instance.\n * @internal\n */\nexport function repoManagerDatabaseFromApp(\n  app: FirebaseApp,\n  authProvider: Provider<FirebaseAuthInternalName>,\n  appCheckProvider?: Provider<AppCheckInternalComponentName>,\n  url?: string,\n  nodeAdmin?: boolean\n): Database {\n  let dbUrl: string | undefined = url || app.options.databaseURL;\n  if (dbUrl === undefined) {\n    if (!app.options.projectId) {\n      fatal(\n        \"Can't determine Firebase Database URL. Be sure to include \" +\n          ' a Project ID when calling firebase.initializeApp().'\n      );\n    }\n\n    log('Using default host for project ', app.options.projectId);\n    dbUrl = `${app.options.projectId}-default-rtdb.firebaseio.com`;\n  }\n\n  let parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n  let repoInfo = parsedUrl.repoInfo;\n\n  let isEmulator: boolean;\n\n  let dbEmulatorHost: string | undefined = undefined;\n  if (typeof process !== 'undefined' && process.env) {\n    dbEmulatorHost = process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];\n  }\n\n  if (dbEmulatorHost) {\n    isEmulator = true;\n    dbUrl = `http://${dbEmulatorHost}?ns=${repoInfo.namespace}`;\n    parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n    repoInfo = parsedUrl.repoInfo;\n  } else {\n    isEmulator = !parsedUrl.repoInfo.secure;\n  }\n\n  const authTokenProvider =\n    nodeAdmin && isEmulator\n      ? new EmulatorTokenProvider(EmulatorTokenProvider.OWNER)\n      : new FirebaseAuthTokenProvider(app.name, app.options, authProvider);\n\n  validateUrl('Invalid Firebase Database URL', parsedUrl);\n  if (!pathIsEmpty(parsedUrl.path)) {\n    fatal(\n      'Database URL must point to the root of a Firebase Database ' +\n        '(not including a child path).'\n    );\n  }\n\n  const repo = repoManagerCreateRepo(\n    repoInfo,\n    app,\n    authTokenProvider,\n    new AppCheckTokenProvider(app.name, appCheckProvider)\n  );\n  return new Database(repo, app);\n}\n\n/**\n * Remove the repo and make sure it is disconnected.\n *\n */\nfunction repoManagerDeleteRepo(repo: Repo, appName: string): void {\n  const appRepos = repos[appName];\n  // This should never happen...\n  if (!appRepos || appRepos[repo.key] !== repo) {\n    fatal(`Database ${appName}(${repo.repoInfo_}) has already been deleted.`);\n  }\n  repoInterrupt(repo);\n  delete appRepos[repo.key];\n}\n\n/**\n * Ensures a repo doesn't already exist and then creates one using the\n * provided app.\n *\n * @param repoInfo - The metadata about the Repo\n * @returns The Repo object for the specified server / repoName.\n */\nfunction repoManagerCreateRepo(\n  repoInfo: RepoInfo,\n  app: FirebaseApp,\n  authTokenProvider: AuthTokenProvider,\n  appCheckProvider: AppCheckTokenProvider\n): Repo {\n  let appRepos = repos[app.name];\n\n  if (!appRepos) {\n    appRepos = {};\n    repos[app.name] = appRepos;\n  }\n\n  let repo = appRepos[repoInfo.toURLString()];\n  if (repo) {\n    fatal(\n      'Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.'\n    );\n  }\n  repo = new Repo(repoInfo, useRestClient, authTokenProvider, appCheckProvider);\n  appRepos[repoInfo.toURLString()] = repo;\n\n  return repo;\n}\n\n/**\n * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\n */\nexport function repoManagerForceRestClient(forceRestClient: boolean): void {\n  useRestClient = forceRestClient;\n}\n\n/**\n * Class representing a Firebase Realtime Database.\n */\nexport class Database implements _FirebaseService {\n  /** Represents a `Database` instance. */\n  readonly 'type' = 'database';\n\n  /** Track if the instance has been used (root or repo accessed) */\n  _instanceStarted: boolean = false;\n\n  /** Backing state for root_ */\n  private _rootInternal?: ReferenceImpl;\n\n  /** @hideconstructor */\n  constructor(\n    public _repoInternal: Repo,\n    /** The {@link @firebase/app#FirebaseApp} associated with this Realtime Database instance. */\n    readonly app: FirebaseApp\n  ) {}\n\n  get _repo(): Repo {\n    if (!this._instanceStarted) {\n      repoStart(\n        this._repoInternal,\n        this.app.options.appId,\n        this.app.options['databaseAuthVariableOverride']\n      );\n      this._instanceStarted = true;\n    }\n    return this._repoInternal;\n  }\n\n  get _root(): ReferenceImpl {\n    if (!this._rootInternal) {\n      this._rootInternal = new ReferenceImpl(this._repo, newEmptyPath());\n    }\n    return this._rootInternal;\n  }\n\n  _delete(): Promise<void> {\n    if (this._rootInternal !== null) {\n      repoManagerDeleteRepo(this._repo, this.app.name);\n      this._repoInternal = null;\n      this._rootInternal = null;\n    }\n    return Promise.resolve();\n  }\n\n  _checkNotDeleted(apiName: string) {\n    if (this._rootInternal === null) {\n      fatal('Cannot call ' + apiName + ' on a deleted database.');\n    }\n  }\n}\n\nfunction checkTransportInit() {\n  if (TransportManager.IS_TRANSPORT_INITIALIZED) {\n    warn(\n      'Transport has already been initialized. Please call this function before calling ref or setting up a listener'\n    );\n  }\n}\n\n/**\n * Force the use of websockets instead of longPolling.\n */\nexport function forceWebSockets() {\n  checkTransportInit();\n  BrowserPollConnection.forceDisallow();\n}\n\n/**\n * Force the use of longPolling instead of websockets. This will be ignored if websocket protocol is used in databaseURL.\n */\nexport function forceLongPolling() {\n  checkTransportInit();\n  WebSocketConnection.forceDisallow();\n  BrowserPollConnection.forceAllow();\n}\n\n/**\n * Returns the instance of the Realtime Database SDK that is associated\n * with the provided {@link @firebase/app#FirebaseApp}. Initializes a new instance with\n * with default settings if no instance exists or if the existing instance uses\n * a custom database URL.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} instance that the returned Realtime\n * Database instance is associated with.\n * @param url - The URL of the Realtime Database instance to connect to. If not\n * provided, the SDK connects to the default instance of the Firebase App.\n * @returns The `Database` instance of the provided app.\n */\nexport function getDatabase(\n  app: FirebaseApp = getApp(),\n  url?: string\n): Database {\n  const db = _getProvider(app, 'database').getImmediate({\n    identifier: url\n  }) as Database;\n  const emulator = getDefaultEmulatorHostnameAndPort('database');\n  if (emulator) {\n    connectDatabaseEmulator(db, ...emulator);\n  }\n  return db;\n}\n\n/**\n * Modify the provided instance to communicate with the Realtime Database\n * emulator.\n *\n * <p>Note: This method must be called before performing any other operation.\n *\n * @param db - The instance to modify.\n * @param host - The emulator host (ex: localhost)\n * @param port - The emulator port (ex: 8080)\n * @param options.mockUserToken - the mock auth token to use for unit testing Security Rules\n */\nexport function connectDatabaseEmulator(\n  db: Database,\n  host: string,\n  port: number,\n  options: {\n    mockUserToken?: EmulatorMockTokenOptions | string;\n  } = {}\n): void {\n  db = getModularInstance(db);\n  db._checkNotDeleted('useEmulator');\n  if (db._instanceStarted) {\n    fatal(\n      'Cannot call useEmulator() after instance has already been initialized.'\n    );\n  }\n\n  const repo = db._repoInternal;\n  let tokenProvider: EmulatorTokenProvider | undefined = undefined;\n  if (repo.repoInfo_.nodeAdmin) {\n    if (options.mockUserToken) {\n      fatal(\n        'mockUserToken is not supported by the Admin SDK. For client access with mock users, please use the \"firebase\" package instead of \"firebase-admin\".'\n      );\n    }\n    tokenProvider = new EmulatorTokenProvider(EmulatorTokenProvider.OWNER);\n  } else if (options.mockUserToken) {\n    const token =\n      typeof options.mockUserToken === 'string'\n        ? options.mockUserToken\n        : createMockUserToken(options.mockUserToken, db.app.options.projectId);\n    tokenProvider = new EmulatorTokenProvider(token);\n  }\n\n  // Modify the repo to apply emulator settings\n  repoManagerApplyEmulatorSettings(repo, host, port, tokenProvider);\n}\n\n/**\n * Disconnects from the server (all Database operations will be completed\n * offline).\n *\n * The client automatically maintains a persistent connection to the Database\n * server, which will remain active indefinitely and reconnect when\n * disconnected. However, the `goOffline()` and `goOnline()` methods may be used\n * to control the client connection in cases where a persistent connection is\n * undesirable.\n *\n * While offline, the client will no longer receive data updates from the\n * Database. However, all Database operations performed locally will continue to\n * immediately fire events, allowing your application to continue behaving\n * normally. Additionally, each operation performed locally will automatically\n * be queued and retried upon reconnection to the Database server.\n *\n * To reconnect to the Database and begin receiving remote events, see\n * `goOnline()`.\n *\n * @param db - The instance to disconnect.\n */\nexport function goOffline(db: Database): void {\n  db = getModularInstance(db);\n  db._checkNotDeleted('goOffline');\n  repoInterrupt(db._repo);\n}\n\n/**\n * Reconnects to the server and synchronizes the offline Database state\n * with the server state.\n *\n * This method should be used after disabling the active connection with\n * `goOffline()`. Once reconnected, the client will transmit the proper data\n * and fire the appropriate events so that your client \"catches up\"\n * automatically.\n *\n * @param db - The instance to reconnect.\n */\nexport function goOnline(db: Database): void {\n  db = getModularInstance(db);\n  db._checkNotDeleted('goOnline');\n  repoResume(db._repo);\n}\n\n/**\n * Logs debugging information to the console.\n *\n * @param enabled - Enables logging if `true`, disables logging if `false`.\n * @param persistent - Remembers the logging state between page refreshes if\n * `true`.\n */\nexport function enableLogging(enabled: boolean, persistent?: boolean);\n\n/**\n * Logs debugging information to the console.\n *\n * @param logger - A custom logger function to control how things get logged.\n */\nexport function enableLogging(logger: (message: string) => unknown);\n\nexport function enableLogging(\n  logger: boolean | ((message: string) => unknown),\n  persistent?: boolean\n): void {\n  enableLoggingImpl(logger, persistent);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport {\n  _registerComponent,\n  registerVersion,\n  SDK_VERSION\n} from '@firebase/app';\nimport { Component, ComponentType } from '@firebase/component';\n\nimport { name, version } from '../package.json';\nimport { setSDKVersion } from '../src/core/version';\n\nimport { repoManagerDatabaseFromApp } from './api/Database';\n\nexport function registerDatabase(variant?: string): void {\n  setSDKVersion(SDK_VERSION);\n  _registerComponent(\n    new Component(\n      'database',\n      (container, { instanceIdentifier: url }) => {\n        const app = container.getProvider('app').getImmediate()!;\n        const authProvider = container.getProvider('auth-internal');\n        const appCheckProvider = container.getProvider('app-check-internal');\n        return repoManagerDatabaseFromApp(\n          app,\n          authProvider,\n          appCheckProvider,\n          url\n        );\n      },\n      ComponentType.PUBLIC\n    ).setMultipleInstances(true)\n  );\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst SERVER_TIMESTAMP = {\n  '.sv': 'timestamp'\n};\n\n/**\n * Returns a placeholder value for auto-populating the current timestamp (time\n * since the Unix epoch, in milliseconds) as determined by the Firebase\n * servers.\n */\nexport function serverTimestamp(): object {\n  return SERVER_TIMESTAMP;\n}\n\n/**\n * Returns a placeholder value that can be used to atomically increment the\n * current database value by the provided delta.\n *\n * @param delta - the amount to modify the current value atomically.\n * @returns A placeholder value for modifying data atomically server-side.\n */\nexport function increment(delta: number): object {\n  return {\n    '.sv': {\n      'increment': delta\n    }\n  };\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getModularInstance, Deferred } from '@firebase/util';\n\nimport { repoStartTransaction } from '../core/Repo';\nimport { PRIORITY_INDEX } from '../core/snap/indexes/PriorityIndex';\nimport { Node } from '../core/snap/Node';\nimport { validateWritablePath } from '../core/util/validation';\n\nimport { DatabaseReference } from './Reference';\nimport { DataSnapshot, onValue, ReferenceImpl } from './Reference_impl';\n\n/** An options object to configure transactions. */\nexport interface TransactionOptions {\n  /**\n   * By default, events are raised each time the transaction update function\n   * runs. So if it is run multiple times, you may see intermediate states. You\n   * can set this to false to suppress these intermediate states and instead\n   * wait until the transaction has completed before events are raised.\n   */\n  readonly applyLocally?: boolean;\n}\n\n/**\n * A type for the resolve value of {@link runTransaction}.\n */\nexport class TransactionResult {\n  /** @hideconstructor */\n  constructor(\n    /** Whether the transaction was successfully committed. */\n    readonly committed: boolean,\n    /** The resulting data snapshot. */\n    readonly snapshot: DataSnapshot\n  ) {}\n\n  /** Returns a JSON-serializable representation of this object. */\n  toJSON(): object {\n    return { committed: this.committed, snapshot: this.snapshot.toJSON() };\n  }\n}\n\n/**\n * Atomically modifies the data at this location.\n *\n * Atomically modify the data at this location. Unlike a normal `set()`, which\n * just overwrites the data regardless of its previous value, `runTransaction()` is\n * used to modify the existing value to a new value, ensuring there are no\n * conflicts with other clients writing to the same location at the same time.\n *\n * To accomplish this, you pass `runTransaction()` an update function which is\n * used to transform the current value into a new value. If another client\n * writes to the location before your new value is successfully written, your\n * update function will be called again with the new current value, and the\n * write will be retried. This will happen repeatedly until your write succeeds\n * without conflict or you abort the transaction by not returning a value from\n * your update function.\n *\n * Note: Modifying data with `set()` will cancel any pending transactions at\n * that location, so extreme care should be taken if mixing `set()` and\n * `runTransaction()` to update the same data.\n *\n * Note: When using transactions with Security and Firebase Rules in place, be\n * aware that a client needs `.read` access in addition to `.write` access in\n * order to perform a transaction. This is because the client-side nature of\n * transactions requires the client to read the data in order to transactionally\n * update it.\n *\n * @param ref - The location to atomically modify.\n * @param transactionUpdate - A developer-supplied function which will be passed\n * the current data stored at this location (as a JavaScript object). The\n * function should return the new value it would like written (as a JavaScript\n * object). If `undefined` is returned (i.e. you return with no arguments) the\n * transaction will be aborted and the data at this location will not be\n * modified.\n * @param options - An options object to configure transactions.\n * @returns A `Promise` that can optionally be used instead of the `onComplete`\n * callback to handle success and failure.\n */\nexport function runTransaction(\n  ref: DatabaseReference,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  transactionUpdate: (currentData: any) => unknown,\n  options?: TransactionOptions\n): Promise<TransactionResult> {\n  ref = getModularInstance(ref);\n\n  validateWritablePath('Reference.transaction', ref._path);\n\n  if (ref.key === '.length' || ref.key === '.keys') {\n    throw (\n      'Reference.transaction failed: ' + ref.key + ' is a read-only object.'\n    );\n  }\n\n  const applyLocally = options?.applyLocally ?? true;\n  const deferred = new Deferred<TransactionResult>();\n\n  const promiseComplete = (\n    error: Error | null,\n    committed: boolean,\n    node: Node | null\n  ) => {\n    let dataSnapshot: DataSnapshot | null = null;\n    if (error) {\n      deferred.reject(error);\n    } else {\n      dataSnapshot = new DataSnapshot(\n        node,\n        new ReferenceImpl(ref._repo, ref._path),\n        PRIORITY_INDEX\n      );\n      deferred.resolve(new TransactionResult(committed, dataSnapshot));\n    }\n  };\n\n  // Add a watch to make sure we get server updates.\n  const unwatcher = onValue(ref, () => {});\n\n  repoStartTransaction(\n    ref._repo,\n    ref._path,\n    transactionUpdate,\n    promiseComplete,\n    unwatcher,\n    applyLocally\n  );\n\n  return deferred.promise;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PersistentConnection } from '../core/PersistentConnection';\nimport { RepoInfo } from '../core/RepoInfo';\nimport { Connection } from '../realtime/Connection';\n\nimport { repoManagerForceRestClient } from './Database';\n\nexport const DataConnection = PersistentConnection;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(PersistentConnection.prototype as any).simpleListen = function (\n  pathString: string,\n  onComplete: (a: unknown) => void\n) {\n  this.sendRequest('q', { p: pathString }, onComplete);\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(PersistentConnection.prototype as any).echo = function (\n  data: unknown,\n  onEcho: (a: unknown) => void\n) {\n  this.sendRequest('echo', { d: data }, onEcho);\n};\n\n// RealTimeConnection properties that we use in tests.\nexport const RealTimeConnection = Connection;\n\n/**\n * @internal\n */\nexport const hijackHash = function (newHash: () => string) {\n  const oldPut = PersistentConnection.prototype.put;\n  PersistentConnection.prototype.put = function (\n    pathString,\n    data,\n    onComplete,\n    hash\n  ) {\n    if (hash !== undefined) {\n      hash = newHash();\n    }\n    oldPut.call(this, pathString, data, onComplete, hash);\n  };\n  return function () {\n    PersistentConnection.prototype.put = oldPut;\n  };\n};\n\nexport const ConnectionTarget = RepoInfo;\n\n/**\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\n * @internal\n */\nexport const forceRestClient = function (forceRestClient: boolean) {\n  repoManagerForceRestClient(forceRestClient);\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const PROTOCOL_VERSION = '5';\n\nexport const VERSION_PARAM = 'v';\n\nexport const TRANSPORT_SESSION_PARAM = 's';\n\nexport const REFERER_PARAM = 'r';\n\nexport const FORGE_REF = 'f';\n\n// Matches console.firebase.google.com, firebase-console-*.corp.google.com and\n// firebase.corp.google.com\nexport const FORGE_DOMAIN_RE =\n  /(console\\.firebase|firebase-console-\\w+\\.corp|firebase\\.corp)\\.google\\.com/;\n\nexport const LAST_SESSION_PARAM = 'ls';\n\nexport const APPLICATION_ID_PARAM = 'p';\n\nexport const APP_CHECK_TOKEN_PARAM = 'ac';\n\nexport const WEBSOCKET = 'websocket';\n\nexport const LONG_POLLING = 'long_polling';\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path } from '../util/Path';\n\nimport { Index } from './indexes/Index';\n\n/**\n * Node is an interface defining the common functionality for nodes in\n * a DataSnapshot.\n *\n * @interface\n */\nexport interface Node {\n  /**\n   * Whether this node is a leaf node.\n   * @returns Whether this is a leaf node.\n   */\n  isLeafNode(): boolean;\n\n  /**\n   * Gets the priority of the node.\n   * @returns The priority of the node.\n   */\n  getPriority(): Node;\n\n  /**\n   * Returns a duplicate node with the new priority.\n   * @param newPriorityNode - New priority to set for the node.\n   * @returns Node with new priority.\n   */\n  updatePriority(newPriorityNode: Node): Node;\n\n  /**\n   * Returns the specified immediate child, or null if it doesn't exist.\n   * @param childName - The name of the child to retrieve.\n   * @returns The retrieved child, or an empty node.\n   */\n  getImmediateChild(childName: string): Node;\n\n  /**\n   * Returns a child by path, or null if it doesn't exist.\n   * @param path - The path of the child to retrieve.\n   * @returns The retrieved child or an empty node.\n   */\n  getChild(path: Path): Node;\n\n  /**\n   * Returns the name of the child immediately prior to the specified childNode, or null.\n   * @param childName - The name of the child to find the predecessor of.\n   * @param childNode - The node to find the predecessor of.\n   * @param index - The index to use to determine the predecessor\n   * @returns The name of the predecessor child, or null if childNode is the first child.\n   */\n  getPredecessorChildName(\n    childName: string,\n    childNode: Node,\n    index: Index\n  ): string | null;\n\n  /**\n   * Returns a duplicate node, with the specified immediate child updated.\n   * Any value in the node will be removed.\n   * @param childName - The name of the child to update.\n   * @param newChildNode - The new child node\n   * @returns The updated node.\n   */\n  updateImmediateChild(childName: string, newChildNode: Node): Node;\n\n  /**\n   * Returns a duplicate node, with the specified child updated.  Any value will\n   * be removed.\n   * @param path - The path of the child to update.\n   * @param newChildNode - The new child node, which may be an empty node\n   * @returns The updated node.\n   */\n  updateChild(path: Path, newChildNode: Node): Node;\n\n  /**\n   * True if the immediate child specified exists\n   */\n  hasChild(childName: string): boolean;\n\n  /**\n   * @returns True if this node has no value or children.\n   */\n  isEmpty(): boolean;\n\n  /**\n   * @returns The number of children of this node.\n   */\n  numChildren(): number;\n\n  /**\n   * Calls action for each child.\n   * @param action - Action to be called for\n   * each child.  It's passed the child name and the child node.\n   * @returns The first truthy value return by action, or the last falsey one\n   */\n  forEachChild(index: Index, action: (a: string, b: Node) => void): unknown;\n\n  /**\n   * @param exportFormat - True for export format (also wire protocol format).\n   * @returns Value of this node as JSON.\n   */\n  val(exportFormat?: boolean): unknown;\n\n  /**\n   * @returns hash representing the node contents.\n   */\n  hash(): string;\n\n  /**\n   * @param other - Another node\n   * @returns -1 for less than, 0 for equal, 1 for greater than other\n   */\n  compareTo(other: Node): number;\n\n  /**\n   * @returns Whether or not this snapshot equals other\n   */\n  equals(other: Node): boolean;\n\n  /**\n   * @returns This node, with the specified index now available\n   */\n  withIndex(indexDefinition: Index): Node;\n\n  isIndexed(indexDefinition: Index): boolean;\n}\n\nexport class NamedNode {\n  constructor(public name: string, public node: Node) {}\n\n  static Wrap(name: string, node: Node) {\n    return new NamedNode(name, node);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { deepCopy, contains } from '@firebase/util';\n\n/**\n * Tracks a collection of stats.\n */\nexport class StatsCollection {\n  private counters_: { [k: string]: number } = {};\n\n  incrementCounter(name: string, amount: number = 1) {\n    if (!contains(this.counters_, name)) {\n      this.counters_[name] = 0;\n    }\n\n    this.counters_[name] += amount;\n  }\n\n  get() {\n    return deepCopy(this.counters_);\n  }\n}\n","import Pagination from 'tui-pagination';\n\nconst options = {\n  totalItems: 20000,\n  itemsPerPage: 20,\n  visiblePages: 5,\n  page: 1,\n  centerAlign: true,\n  firstItemClassName: 'tui-first-child',\n  lastItemClassName: 'tui-last-child',\n  template: {\n    page: '<a href=\"#\" class=\"tui-page-btn\">{{page}}</a>',\n    currentPage: '<strong class=\"tui-page-btn tui-is-selected\">{{page}}</strong>',\n    moveButton:\n      '<a href=\"#\" class=\"tui-page-btn tui-{{type}}\">' + '<span class=\"tui-ico-{{type}}\">{{type}}</span>' + '</a>',\n    disabledMoveButton:\n      '<span class=\"tui-page-btn tui-is-disabled tui-{{type}}\">' +\n      '<span class=\"tui-ico-{{type}}\">{{type}}</span>' +\n      '</span>',\n    moreButton:\n      '<a href=\"#\" class=\"tui-page-btn tui-{{type}}-is-ellip\">' + '<span class=\"tui-ico-ellip\">...</span>' + '</a>',\n  },\n};\nconst pagination = new Pagination('pagination', options);\n\nconsole.log(pagination);\n","/*!\n * TOAST UI Pagination\n * @version 3.4.1\n * @author NHN FE Development Team <dl_javascript@nhn.com>\n * @license MIT\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Pagination\"] = factory();\n\telse\n\t\troot[\"tui\"] = root[\"tui\"] || {}, root[\"tui\"][\"Pagination\"] = factory();\n})(window, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"dist\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 10);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * @fileoverview Extend the target object from other objects.\n * @author NHN FE Development Lab <dl_javascript@nhn.com>\n */\n\n\n\n/**\n * @module object\n */\n\n/**\n * Extend the target object from other objects.\n * @param {object} target - Object that will be extended\n * @param {...object} objects - Objects as sources\n * @returns {object} Extended object\n * @memberof module:object\n */\nfunction extend(target, objects) { // eslint-disable-line no-unused-vars\n  var hasOwnProp = Object.prototype.hasOwnProperty;\n  var source, prop, i, len;\n\n  for (i = 1, len = arguments.length; i < len; i += 1) {\n    source = arguments[i];\n    for (prop in source) {\n      if (hasOwnProp.call(source, prop)) {\n        target[prop] = source[prop];\n      }\n    }\n  }\n\n  return target;\n}\n\nmodule.exports = extend;\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * @fileoverview Check whether the given variable is undefined or not.\n * @author NHN FE Development Lab <dl_javascript@nhn.com>\n */\n\n\n\n/**\n * Check whether the given variable is undefined or not.\n * If the given variable is undefined, returns true.\n * @param {*} obj - Target for checking\n * @returns {boolean} Is undefined?\n * @memberof module:type\n */\nfunction isUndefined(obj) {\n  return obj === undefined; // eslint-disable-line no-undefined\n}\n\nmodule.exports = isUndefined;\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * @fileoverview Check whether the given variable is an instance of Array or not.\n * @author NHN FE Development Lab <dl_javascript@nhn.com>\n */\n\n\n\n/**\n * Check whether the given variable is an instance of Array or not.\n * If the given variable is an instance of Array, return true.\n * @param {*} obj - Target for checking\n * @returns {boolean} Is array instance?\n * @memberof module:type\n */\nfunction isArray(obj) {\n  return obj instanceof Array;\n}\n\nmodule.exports = isArray;\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * @fileoverview Execute the provided callback once for each property of object(or element of array) which actually exist.\n * @author NHN FE Development Lab <dl_javascript@nhn.com>\n */\n\n\n\nvar isArray = __webpack_require__(2);\nvar forEachArray = __webpack_require__(17);\nvar forEachOwnProperties = __webpack_require__(6);\n\n/**\n * @module collection\n */\n\n/**\n * Execute the provided callback once for each property of object(or element of array) which actually exist.\n * If the object is Array-like object(ex-arguments object), It needs to transform to Array.(see 'ex2' of example).\n * If the callback function returns false, the loop will be stopped.\n * Callback function(iteratee) is invoked with three arguments:\n *  1) The value of the property(or The value of the element)\n *  2) The name of the property(or The index of the element)\n *  3) The object being traversed\n * @param {Object} obj The object that will be traversed\n * @param {function} iteratee Callback function\n * @param {Object} [context] Context(this) of callback function\n * @memberof module:collection\n * @example\n * var forEach = require('tui-code-snippet/collection/forEach'); // node, commonjs\n *\n * var sum = 0;\n *\n * forEach([1,2,3], function(value){\n *     sum += value;\n * });\n * alert(sum); // 6\n *\n * // In case of Array-like object\n * var array = Array.prototype.slice.call(arrayLike); // change to array\n * forEach(array, function(value){\n *     sum += value;\n * });\n */\nfunction forEach(obj, iteratee, context) {\n  if (isArray(obj)) {\n    forEachArray(obj, iteratee, context);\n  } else {\n    forEachOwnProperties(obj, iteratee, context);\n  }\n}\n\nmodule.exports = forEach;\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * @fileoverview Check whether the given variable is a string or not.\n * @author NHN FE Development Lab <dl_javascript@nhn.com>\n */\n\n\n\n/**\n * Check whether the given variable is a string or not.\n * If the given variable is a string, return true.\n * @param {*} obj - Target for checking\n * @returns {boolean} Is string?\n * @memberof module:type\n */\nfunction isString(obj) {\n  return typeof obj === 'string' || obj instanceof String;\n}\n\nmodule.exports = isString;\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * @fileoverview Check whether the given variable is a function or not.\n * @author NHN FE Development Lab <dl_javascript@nhn.com>\n */\n\n\n\n/**\n * Check whether the given variable is a function or not.\n * If the given variable is a function, return true.\n * @param {*} obj - Target for checking\n * @returns {boolean} Is function?\n * @memberof module:type\n */\nfunction isFunction(obj) {\n  return obj instanceof Function;\n}\n\nmodule.exports = isFunction;\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * @fileoverview Execute the provided callback once for each property of object which actually exist.\n * @author NHN FE Development Lab <dl_javascript@nhn.com>\n */\n\n\n\n/**\n * Execute the provided callback once for each property of object which actually exist.\n * If the callback function returns false, the loop will be stopped.\n * Callback function(iteratee) is invoked with three arguments:\n *  1) The value of the property\n *  2) The name of the property\n *  3) The object being traversed\n * @param {Object} obj The object that will be traversed\n * @param {function} iteratee  Callback function\n * @param {Object} [context] Context(this) of callback function\n * @memberof module:collection\n * @example\n * var forEachOwnProperties = require('tui-code-snippet/collection/forEachOwnProperties'); // node, commonjs\n *\n * var sum = 0;\n *\n * forEachOwnProperties({a:1,b:2,c:3}, function(value){\n *     sum += value;\n * });\n * alert(sum); // 6\n */\nfunction forEachOwnProperties(obj, iteratee, context) {\n  var key;\n\n  context = context || null;\n\n  for (key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      if (iteratee.call(context, obj[key], key, obj) === false) {\n        break;\n      }\n    }\n  }\n}\n\nmodule.exports = forEachOwnProperties;\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * @fileoverview\n * This module provides a function to make a constructor\n * that can inherit from the other constructors like the CLASS easily.\n * @author NHN FE Development Lab <dl_javascript@nhn.com>\n */\n\n\n\nvar inherit = __webpack_require__(18);\nvar extend = __webpack_require__(0);\n\n/**\n * @module defineClass\n */\n\n/**\n * Help a constructor to be defined and to inherit from the other constructors\n * @param {*} [parent] Parent constructor\n * @param {Object} props Members of constructor\n *  @param {Function} props.init Initialization method\n *  @param {Object} [props.static] Static members of constructor\n * @returns {*} Constructor\n * @memberof module:defineClass\n * @example\n * var defineClass = require('tui-code-snippet/defineClass/defineClass'); // node, commonjs\n *\n * //-- #2. Use property --//\n * var Parent = defineClass({\n *     init: function() { // constuructor\n *         this.name = 'made by def';\n *     },\n *     method: function() {\n *         // ...\n *     },\n *     static: {\n *         staticMethod: function() {\n *              // ...\n *         }\n *     }\n * });\n *\n * var Child = defineClass(Parent, {\n *     childMethod: function() {}\n * });\n *\n * Parent.staticMethod();\n *\n * var parentInstance = new Parent();\n * console.log(parentInstance.name); //made by def\n * parentInstance.staticMethod(); // Error\n *\n * var childInstance = new Child();\n * childInstance.method();\n * childInstance.childMethod();\n */\nfunction defineClass(parent, props) {\n  var obj;\n\n  if (!props) {\n    props = parent;\n    parent = null;\n  }\n\n  obj = props.init || function() {};\n\n  if (parent) {\n    inherit(obj, parent);\n  }\n\n  if (props.hasOwnProperty('static')) {\n    extend(obj, props['static']);\n    delete props['static'];\n  }\n\n  extend(obj.prototype, props);\n\n  return obj;\n}\n\nmodule.exports = defineClass;\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* eslint-disable complexity */\n/**\n * @fileoverview Returns the first index at which a given element can be found in the array.\n * @author NHN FE Development Lab <dl_javascript@nhn.com>\n */\n\n\n\nvar isArray = __webpack_require__(2);\n\n/**\n * @module array\n */\n\n/**\n * Returns the first index at which a given element can be found in the array\n * from start index(default 0), or -1 if it is not present.\n * It compares searchElement to elements of the Array using strict equality\n * (the same method used by the ===, or triple-equals, operator).\n * @param {*} searchElement Element to locate in the array\n * @param {Array} array Array that will be traversed.\n * @param {number} startIndex Start index in array for searching (default 0)\n * @returns {number} the First index at which a given element, or -1 if it is not present\n * @memberof module:array\n * @example\n * var inArray = require('tui-code-snippet/array/inArray'); // node, commonjs\n *\n * var arr = ['one', 'two', 'three', 'four'];\n * var idx1 = inArray('one', arr, 3); // -1\n * var idx2 = inArray('one', arr); // 0\n */\nfunction inArray(searchElement, array, startIndex) {\n  var i;\n  var length;\n  startIndex = startIndex || 0;\n\n  if (!isArray(array)) {\n    return -1;\n  }\n\n  if (Array.prototype.indexOf) {\n    return Array.prototype.indexOf.call(array, searchElement, startIndex);\n  }\n\n  length = array.length;\n  for (i = startIndex; startIndex >= 0 && i < length; i += 1) {\n    if (array[i] === searchElement) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nmodule.exports = inArray;\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar template = __webpack_require__(29);\nvar sendHostname = __webpack_require__(30);\nvar isFunction = __webpack_require__(5);\n\nvar util = {\n  /**\n   * Capitalize first letter\n   * @param {string} str - String to change\n   * @returns {string} Changed string\n   */\n  capitalizeFirstLetter: function(str) {\n    return str.substring(0, 1).toUpperCase() + str.substring(1, str.length);\n  },\n\n  /**\n   * Check the element is contained\n   * @param {HTMLElement} find - Target element\n   * @param {HTMLElement} parent - Wrapper element\n   * @returns {boolean} Whether contained or not\n   */\n  isContained: function(find, parent) {\n    if (!parent) {\n      return false;\n    }\n\n    return find === parent ? true : parent.contains(find);\n  },\n\n  /**\n   * Create an new element by template literals.\n   * @param {string|function} tmpl - template\n   * @param {Object} context - context\n   * @returns {HTMLElement}\n   */\n  createElementByTemplate: function(tmpl, context) {\n    var parent = document.createElement('div');\n    var html = isFunction(tmpl) ? tmpl(context) : template(tmpl, context);\n    parent.innerHTML = html;\n\n    return parent.firstChild;\n  },\n\n  /**\n   * Create a new function that, when called, has its this keyword set to the provided value.\n   * @param {function} fn A original function before binding\n   * @param {*} obj context of function in arguments[0]\n   * @returns {function} A new bound function with context that is in arguments[1]\n   */\n  bind: function(fn, obj) {\n    var slice = Array.prototype.slice;\n    var args;\n\n    if (fn.bind) {\n      return fn.bind.apply(fn, slice.call(arguments, 1));\n    }\n\n    args = slice.call(arguments, 2);\n\n    return function() {\n      return fn.apply(obj, args.length ? args.concat(slice.call(arguments)) : arguments);\n    };\n  },\n\n  /**\n   * Send hostname for GA\n   * @ignore\n   */\n  sendHostName: function() {\n    sendHostname('pagination', 'UA-129987462-1');\n  }\n};\n\nmodule.exports = util;\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * @fileoverview The entry file of Pagination components\n * @author NHN. FE Development Lab <dl_javascript@nhn.com>\n */\n\n\n\n__webpack_require__(11);\n\nmodule.exports = __webpack_require__(12);\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// extracted by mini-css-extract-plugin\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar CustomEvents = __webpack_require__(13);\nvar defineClass = __webpack_require__(7);\nvar extend = __webpack_require__(0);\nvar isUndefined = __webpack_require__(1);\n\nvar View = __webpack_require__(20);\nvar util = __webpack_require__(9);\n\nvar defaultOption = {\n  totalItems: 10,\n  itemsPerPage: 10,\n  visiblePages: 10,\n  page: 1,\n  centerAlign: false,\n  firstItemClassName: 'tui-first-child',\n  lastItemClassName: 'tui-last-child',\n  usageStatistics: true\n};\n\n/**\n * Pagination class\n * @class Pagination\n * @param {string|HTMLElement|jQueryObject} container - Container element or selector.\n * In case of a string, it is considered as an id selector and find the element by id.\n * If there is no element, it is considered as a selector and find the element by querySelector().\n * Passing jQueryObject and considering an id selector at first will be deprecated in v4.0.0.\n * @param {object} options - Option object\n *     @param {number} [options.totalItems=10] Total item count\n *     @param {number} [options.itemsPerPage=10] Item count per page\n *     @param {number} [options.visiblePages=10] Display page link count\n *     @param {number} [options.page=1] Display page after pagination draw.\n *     @param {boolean}[options.centerAlign=false] Whether current page keep center or not\n *     @param {string} [options.firstItemClassName='first-child'] The class name of the first item\n *     @param {string} [options.lastItemClassName='last-child'] The class name of the last item\n *     @param {object} [options.template] A markup string set to make element. Refer to {@link https://github.com/nhn/tui.pagination/blob/master/docs/getting-started.md#how-to-use-template Getting Started: How to use template}.\n *         @param {string|function} [options.template.page] HTML template\n *         @param {string|function} [options.template.currentPage] HTML template\n *         @param {string|function} [options.template.moveButton] HTML template\n *         @param {string|function} [options.template.disabledMoveButton] HTML template\n *         @param {string|function} [options.template.moreButton] HTML template\n *     @param {boolean} [options.usageStatistics=true] Send the hostname to google analytics.\n *         If you do not want to send the hostname, this option set to false.\n * @example\n * // ES6\n * import Pagination from 'tui-pagination';\n *\n * // CommonJS\n * const Pagination = require('tui-pagination');\n *\n * // Browser\n * const Pagination = tui.Pagination;\n *\n * const container = document.getElementById('pagination');\n * const options = { // below default value of options\n *      totalItems: 10,\n *      itemsPerPage: 10,\n *      visiblePages: 10,\n *      page: 1,\n *      centerAlign: false,\n *      firstItemClassName: 'tui-first-child',\n *      lastItemClassName: 'tui-last-child',\n *      template: {\n *          page: '<a href=\"#\" class=\"tui-page-btn\">{{page}}</a>',\n *          currentPage: '<strong class=\"tui-page-btn tui-is-selected\">{{page}}</strong>',\n *          moveButton:\n *              '<a href=\"#\" class=\"tui-page-btn tui-{{type}}\">' +\n *                  '<span class=\"tui-ico-{{type}}\">{{type}}</span>' +\n *              '</a>',\n *          disabledMoveButton:\n *              '<span class=\"tui-page-btn tui-is-disabled tui-{{type}}\">' +\n *                  '<span class=\"tui-ico-{{type}}\">{{type}}</span>' +\n *              '</span>',\n *          moreButton:\n *              '<a href=\"#\" class=\"tui-page-btn tui-{{type}}-is-ellip\">' +\n *                  '<span class=\"tui-ico-ellip\">...</span>' +\n *              '</a>'\n *      }\n * };\n * const pagination = new Pagination(container, options);\n */\nvar Pagination = defineClass(\n  /** @lends Pagination.prototype */ {\n    init: function(container, options) {\n      /**\n       * Option object\n       * @type {object}\n       * @private\n       */\n      this._options = extend({}, defaultOption, options);\n\n      /**\n       * Current page number\n       * @type {number}\n       * @private\n       */\n      this._currentPage = 0;\n\n      /**\n       * View instance\n       * @type {View}\n       * @private\n       */\n      this._view = new View(container, this._options, util.bind(this._onClickHandler, this));\n\n      this._paginate();\n\n      if (this._options.usageStatistics) {\n        util.sendHostName();\n      }\n    },\n\n    /**\n     * Set current page\n     * @param {number} page - Current page\n     * @private\n     */\n    _setCurrentPage: function(page) {\n      this._currentPage = page || this._options.page;\n    },\n\n    /**\n     * Get last page number\n     * @returns {number} Last page number\n     * @private\n     */\n    _getLastPage: function() {\n      var lastPage = Math.ceil(this._options.totalItems / this._options.itemsPerPage);\n\n      return !lastPage ? 1 : lastPage;\n    },\n\n    /**\n     * Index of list in total lists\n     * @param {number} pageNumber - Page number\n     * @returns {number} Page index or number\n     * @private\n     */\n    _getPageIndex: function(pageNumber) {\n      var left, pageIndex;\n\n      if (this._options.centerAlign) {\n        left = Math.floor(this._options.visiblePages / 2);\n        pageIndex = pageNumber - left;\n        pageIndex = Math.max(pageIndex, 1);\n        pageIndex = Math.min(pageIndex, this._getLastPage() - this._options.visiblePages + 1);\n\n        return pageIndex;\n      }\n\n      return Math.ceil(pageNumber / this._options.visiblePages);\n    },\n\n    /**\n     * Get relative page\n     * @param {string} moveType - Move type ('prev' or 'next')\n     * @returns {number} Relative page number\n     * @private\n     */\n    _getRelativePage: function(moveType) {\n      var isPrevMove = moveType === 'prev';\n      var currentPage = this.getCurrentPage();\n\n      return isPrevMove ? currentPage - 1 : currentPage + 1;\n    },\n\n    /**\n     * Get more page index\n     * @param {string} moveType - Move type ('prev' or 'next')\n     * @returns {number} Page index\n     * @private\n     */\n    _getMorePageIndex: function(moveType) {\n      var currentPageIndex = this._getPageIndex(this.getCurrentPage());\n      var pageCount = this._options.visiblePages;\n      var isPrevMove = moveType === 'prev';\n      var pageIndex;\n\n      if (this._options.centerAlign) {\n        pageIndex = isPrevMove ? currentPageIndex - 1 : currentPageIndex + pageCount;\n      } else {\n        pageIndex = isPrevMove\n          ? (currentPageIndex - 1) * pageCount\n          : currentPageIndex * pageCount + 1;\n      }\n\n      return pageIndex;\n    },\n    /* eslint-enable complexity */\n\n    /**\n     * Get available page number from over number\n     * If total page is 23, but input number is 30 => return 23\n     * @param {number} page - Page number\n     * @returns {number} Replaced pgae number\n     * @private\n     */\n    _convertToValidPage: function(page) {\n      var lastPageNumber = this._getLastPage();\n      page = Math.max(page, 1);\n      page = Math.min(page, lastPageNumber);\n\n      return page;\n    },\n\n    /**\n     * Create require view set, notify view to update\n     * @param {number} page - Page number\n     * @private\n     */\n    _paginate: function(page) {\n      var viewData = this._makeViewData(page || this._options.page);\n      this._setCurrentPage(page);\n      this._view.update(viewData);\n    },\n\n    /**\n     * Create and get view data\n     * @param {number} page - Page number\n     * @returns {object} view data\n     * @private\n     */\n    _makeViewData: function(page) {\n      var viewData = {};\n      var lastPage = this._getLastPage();\n      var currentPageIndex = this._getPageIndex(page);\n      var lastPageListIndex = this._getPageIndex(lastPage);\n      var edges = this._getEdge(page);\n\n      viewData.leftPageNumber = edges.left;\n      viewData.rightPageNumber = edges.right;\n\n      viewData.prevMore = currentPageIndex > 1;\n      viewData.nextMore = currentPageIndex < lastPageListIndex;\n\n      viewData.page = page;\n      viewData.currentPageIndex = page;\n      viewData.lastPage = lastPage;\n      viewData.lastPageListIndex = lastPage;\n\n      return viewData;\n    },\n\n    /**\n     * Get each edge page\n     * @param {object} page - Page number\n     * @returns {{left: number, right: number}} Edge page numbers\n     * @private\n     */\n    _getEdge: function(page) {\n      var leftPageNumber, rightPageNumber, left;\n      var lastPage = this._getLastPage();\n      var visiblePages = this._options.visiblePages;\n      var currentPageIndex = this._getPageIndex(page);\n\n      if (this._options.centerAlign) {\n        left = Math.floor(visiblePages / 2);\n        leftPageNumber = Math.max(page - left, 1);\n        rightPageNumber = leftPageNumber + visiblePages - 1;\n\n        if (rightPageNumber > lastPage) {\n          leftPageNumber = Math.max(lastPage - visiblePages + 1, 1);\n          rightPageNumber = lastPage;\n        }\n      } else {\n        leftPageNumber = (currentPageIndex - 1) * visiblePages + 1;\n        rightPageNumber = currentPageIndex * visiblePages;\n        rightPageNumber = Math.min(rightPageNumber, lastPage);\n      }\n\n      return {\n        left: leftPageNumber,\n        right: rightPageNumber\n      };\n    },\n\n    /**\n     * Pagelist click event hadnler\n     * @param {?string} buttonType - Button type\n     * @param {?number} page - Page number\n     * @private\n     */\n    /* eslint-disable complexity */\n    _onClickHandler: function(buttonType, page) {\n      switch (buttonType) {\n        case 'first':\n          page = 1;\n          break;\n        case 'prev':\n          page = this._getRelativePage('prev');\n          break;\n        case 'next':\n          page = this._getRelativePage('next');\n          break;\n        case 'prevMore':\n          page = this._getMorePageIndex('prev');\n          break;\n        case 'nextMore':\n          page = this._getMorePageIndex('next');\n          break;\n        case 'last':\n          page = this._getLastPage();\n          break;\n        default:\n          if (!page) {\n            return;\n          }\n      }\n\n      this.movePageTo(page);\n    },\n    /* eslint-enable complexity */\n\n    /**\n     * Reset pagination\n     * @param {*} totalItems - Redraw page item count\n     * @example\n     * pagination.reset();\n     * pagination.reset(100);\n     */\n    reset: function(totalItems) {\n      if (isUndefined(totalItems)) {\n        totalItems = this._options.totalItems;\n      }\n\n      this._options.totalItems = totalItems;\n      this._paginate(1);\n    },\n\n    /**\n     * Move to specific page, redraw list.\n     * Before move fire beforeMove event, After move fire afterMove event.\n     * @param {Number} targetPage - Target page\n     * @example\n     * pagination.movePageTo(10);\n     */\n    movePageTo: function(targetPage) {\n      targetPage = this._convertToValidPage(targetPage);\n\n      /**\n       * @event Pagination#beforeMove\n       * @type {object} evt - Custom event object\n       * @property {number} page - Moved page\n       * @example\n       * paganation.on('beforeMove', (event) => {\n       *     const currentPage = event.page;\n       *\n       *     if (currentPage === 10) {\n       *         return false;\n       *         // return true;\n       *     }\n       * });\n       */\n      if (!this.invoke('beforeMove', { page: targetPage })) {\n        return;\n      }\n\n      this._paginate(targetPage);\n\n      /**\n       * @event Pagination#afterMove\n       * @type {object} evt - Custom event object\n       * @property {number} page - Moved page\n       * @example\n       * paganation.on('afterMove', (event) => {\n       *      const currentPage = event.page;\n       *      console.log(currentPage);\n       * });\n       */\n      this.fire('afterMove', { page: targetPage });\n    },\n\n    /**\n     * Set total count of items\n     * @param {number} itemCount - Total item count\n     */\n    setTotalItems: function(itemCount) {\n      this._options.totalItems = itemCount;\n    },\n\n    /**\n     * Set count of items per page\n     * @param {number} itemCount - Item count\n     */\n    setItemsPerPage: function(itemCount) {\n      this._options.itemsPerPage = itemCount;\n    },\n\n    /**\n     * Get current page\n     * @returns {number} Current page\n     */\n    getCurrentPage: function() {\n      return this._currentPage || this._options.page;\n    }\n  }\n);\n\nCustomEvents.mixin(Pagination);\n\nmodule.exports = Pagination;\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * @fileoverview This module provides some functions for custom events. And it is implemented in the observer design pattern.\n * @author NHN FE Development Lab <dl_javascript@nhn.com>\n */\n\n\n\nvar extend = __webpack_require__(0);\nvar isExisty = __webpack_require__(14);\nvar isString = __webpack_require__(4);\nvar isObject = __webpack_require__(16);\nvar isArray = __webpack_require__(2);\nvar isFunction = __webpack_require__(5);\nvar forEach = __webpack_require__(3);\n\nvar R_EVENTNAME_SPLIT = /\\s+/g;\n\n/**\n * @class\n * @example\n * // node, commonjs\n * var CustomEvents = require('tui-code-snippet/customEvents/customEvents');\n */\nfunction CustomEvents() {\n  /**\n     * @type {HandlerItem[]}\n     */\n  this.events = null;\n\n  /**\n     * only for checking specific context event was binded\n     * @type {object[]}\n     */\n  this.contexts = null;\n}\n\n/**\n * Mixin custom events feature to specific constructor\n * @param {function} func - constructor\n * @example\n * var CustomEvents = require('tui-code-snippet/customEvents/customEvents'); // node, commonjs\n *\n * var model;\n * function Model() {\n *     this.name = '';\n * }\n * CustomEvents.mixin(Model);\n *\n * model = new Model();\n * model.on('change', function() { this.name = 'model'; }, this);\n * model.fire('change');\n * alert(model.name); // 'model';\n */\nCustomEvents.mixin = function(func) {\n  extend(func.prototype, CustomEvents.prototype);\n};\n\n/**\n * Get HandlerItem object\n * @param {function} handler - handler function\n * @param {object} [context] - context for handler\n * @returns {HandlerItem} HandlerItem object\n * @private\n */\nCustomEvents.prototype._getHandlerItem = function(handler, context) {\n  var item = {handler: handler};\n\n  if (context) {\n    item.context = context;\n  }\n\n  return item;\n};\n\n/**\n * Get event object safely\n * @param {string} [eventName] - create sub event map if not exist.\n * @returns {(object|array)} event object. if you supplied `eventName`\n *  parameter then make new array and return it\n * @private\n */\nCustomEvents.prototype._safeEvent = function(eventName) {\n  var events = this.events;\n  var byName;\n\n  if (!events) {\n    events = this.events = {};\n  }\n\n  if (eventName) {\n    byName = events[eventName];\n\n    if (!byName) {\n      byName = [];\n      events[eventName] = byName;\n    }\n\n    events = byName;\n  }\n\n  return events;\n};\n\n/**\n * Get context array safely\n * @returns {array} context array\n * @private\n */\nCustomEvents.prototype._safeContext = function() {\n  var context = this.contexts;\n\n  if (!context) {\n    context = this.contexts = [];\n  }\n\n  return context;\n};\n\n/**\n * Get index of context\n * @param {object} ctx - context that used for bind custom event\n * @returns {number} index of context\n * @private\n */\nCustomEvents.prototype._indexOfContext = function(ctx) {\n  var context = this._safeContext();\n  var index = 0;\n\n  while (context[index]) {\n    if (ctx === context[index][0]) {\n      return index;\n    }\n\n    index += 1;\n  }\n\n  return -1;\n};\n\n/**\n * Memorize supplied context for recognize supplied object is context or\n *  name: handler pair object when off()\n * @param {object} ctx - context object to memorize\n * @private\n */\nCustomEvents.prototype._memorizeContext = function(ctx) {\n  var context, index;\n\n  if (!isExisty(ctx)) {\n    return;\n  }\n\n  context = this._safeContext();\n  index = this._indexOfContext(ctx);\n\n  if (index > -1) {\n    context[index][1] += 1;\n  } else {\n    context.push([ctx, 1]);\n  }\n};\n\n/**\n * Forget supplied context object\n * @param {object} ctx - context object to forget\n * @private\n */\nCustomEvents.prototype._forgetContext = function(ctx) {\n  var context, contextIndex;\n\n  if (!isExisty(ctx)) {\n    return;\n  }\n\n  context = this._safeContext();\n  contextIndex = this._indexOfContext(ctx);\n\n  if (contextIndex > -1) {\n    context[contextIndex][1] -= 1;\n\n    if (context[contextIndex][1] <= 0) {\n      context.splice(contextIndex, 1);\n    }\n  }\n};\n\n/**\n * Bind event handler\n * @param {(string|{name:string, handler:function})} eventName - custom\n *  event name or an object {eventName: handler}\n * @param {(function|object)} [handler] - handler function or context\n * @param {object} [context] - context for binding\n * @private\n */\nCustomEvents.prototype._bindEvent = function(eventName, handler, context) {\n  var events = this._safeEvent(eventName);\n  this._memorizeContext(context);\n  events.push(this._getHandlerItem(handler, context));\n};\n\n/**\n * Bind event handlers\n * @param {(string|{name:string, handler:function})} eventName - custom\n *  event name or an object {eventName: handler}\n * @param {(function|object)} [handler] - handler function or context\n * @param {object} [context] - context for binding\n * //-- #1. Get Module --//\n * var CustomEvents = require('tui-code-snippet/customEvents/customEvents'); // node, commonjs\n *\n * //-- #2. Use method --//\n * // # 2.1 Basic Usage\n * CustomEvents.on('onload', handler);\n *\n * // # 2.2 With context\n * CustomEvents.on('onload', handler, myObj);\n *\n * // # 2.3 Bind by object that name, handler pairs\n * CustomEvents.on({\n *     'play': handler,\n *     'pause': handler2\n * });\n *\n * // # 2.4 Bind by object that name, handler pairs with context object\n * CustomEvents.on({\n *     'play': handler\n * }, myObj);\n */\nCustomEvents.prototype.on = function(eventName, handler, context) {\n  var self = this;\n\n  if (isString(eventName)) {\n    // [syntax 1, 2]\n    eventName = eventName.split(R_EVENTNAME_SPLIT);\n    forEach(eventName, function(name) {\n      self._bindEvent(name, handler, context);\n    });\n  } else if (isObject(eventName)) {\n    // [syntax 3, 4]\n    context = handler;\n    forEach(eventName, function(func, name) {\n      self.on(name, func, context);\n    });\n  }\n};\n\n/**\n * Bind one-shot event handlers\n * @param {(string|{name:string,handler:function})} eventName - custom\n *  event name or an object {eventName: handler}\n * @param {function|object} [handler] - handler function or context\n * @param {object} [context] - context for binding\n */\nCustomEvents.prototype.once = function(eventName, handler, context) {\n  var self = this;\n\n  if (isObject(eventName)) {\n    context = handler;\n    forEach(eventName, function(func, name) {\n      self.once(name, func, context);\n    });\n\n    return;\n  }\n\n  function onceHandler() { // eslint-disable-line require-jsdoc\n    handler.apply(context, arguments);\n    self.off(eventName, onceHandler, context);\n  }\n\n  this.on(eventName, onceHandler, context);\n};\n\n/**\n * Splice supplied array by callback result\n * @param {array} arr - array to splice\n * @param {function} predicate - function return boolean\n * @private\n */\nCustomEvents.prototype._spliceMatches = function(arr, predicate) {\n  var i = 0;\n  var len;\n\n  if (!isArray(arr)) {\n    return;\n  }\n\n  for (len = arr.length; i < len; i += 1) {\n    if (predicate(arr[i]) === true) {\n      arr.splice(i, 1);\n      len -= 1;\n      i -= 1;\n    }\n  }\n};\n\n/**\n * Get matcher for unbind specific handler events\n * @param {function} handler - handler function\n * @returns {function} handler matcher\n * @private\n */\nCustomEvents.prototype._matchHandler = function(handler) {\n  var self = this;\n\n  return function(item) {\n    var needRemove = handler === item.handler;\n\n    if (needRemove) {\n      self._forgetContext(item.context);\n    }\n\n    return needRemove;\n  };\n};\n\n/**\n * Get matcher for unbind specific context events\n * @param {object} context - context\n * @returns {function} object matcher\n * @private\n */\nCustomEvents.prototype._matchContext = function(context) {\n  var self = this;\n\n  return function(item) {\n    var needRemove = context === item.context;\n\n    if (needRemove) {\n      self._forgetContext(item.context);\n    }\n\n    return needRemove;\n  };\n};\n\n/**\n * Get matcher for unbind specific hander, context pair events\n * @param {function} handler - handler function\n * @param {object} context - context\n * @returns {function} handler, context matcher\n * @private\n */\nCustomEvents.prototype._matchHandlerAndContext = function(handler, context) {\n  var self = this;\n\n  return function(item) {\n    var matchHandler = (handler === item.handler);\n    var matchContext = (context === item.context);\n    var needRemove = (matchHandler && matchContext);\n\n    if (needRemove) {\n      self._forgetContext(item.context);\n    }\n\n    return needRemove;\n  };\n};\n\n/**\n * Unbind event by event name\n * @param {string} eventName - custom event name to unbind\n * @param {function} [handler] - handler function\n * @private\n */\nCustomEvents.prototype._offByEventName = function(eventName, handler) {\n  var self = this;\n  var andByHandler = isFunction(handler);\n  var matchHandler = self._matchHandler(handler);\n\n  eventName = eventName.split(R_EVENTNAME_SPLIT);\n\n  forEach(eventName, function(name) {\n    var handlerItems = self._safeEvent(name);\n\n    if (andByHandler) {\n      self._spliceMatches(handlerItems, matchHandler);\n    } else {\n      forEach(handlerItems, function(item) {\n        self._forgetContext(item.context);\n      });\n\n      self.events[name] = [];\n    }\n  });\n};\n\n/**\n * Unbind event by handler function\n * @param {function} handler - handler function\n * @private\n */\nCustomEvents.prototype._offByHandler = function(handler) {\n  var self = this;\n  var matchHandler = this._matchHandler(handler);\n\n  forEach(this._safeEvent(), function(handlerItems) {\n    self._spliceMatches(handlerItems, matchHandler);\n  });\n};\n\n/**\n * Unbind event by object(name: handler pair object or context object)\n * @param {object} obj - context or {name: handler} pair object\n * @param {function} handler - handler function\n * @private\n */\nCustomEvents.prototype._offByObject = function(obj, handler) {\n  var self = this;\n  var matchFunc;\n\n  if (this._indexOfContext(obj) < 0) {\n    forEach(obj, function(func, name) {\n      self.off(name, func);\n    });\n  } else if (isString(handler)) {\n    matchFunc = this._matchContext(obj);\n\n    self._spliceMatches(this._safeEvent(handler), matchFunc);\n  } else if (isFunction(handler)) {\n    matchFunc = this._matchHandlerAndContext(handler, obj);\n\n    forEach(this._safeEvent(), function(handlerItems) {\n      self._spliceMatches(handlerItems, matchFunc);\n    });\n  } else {\n    matchFunc = this._matchContext(obj);\n\n    forEach(this._safeEvent(), function(handlerItems) {\n      self._spliceMatches(handlerItems, matchFunc);\n    });\n  }\n};\n\n/**\n * Unbind custom events\n * @param {(string|object|function)} eventName - event name or context or\n *  {name: handler} pair object or handler function\n * @param {(function)} handler - handler function\n * @example\n * //-- #1. Get Module --//\n * var CustomEvents = require('tui-code-snippet/customEvents/customEvents'); // node, commonjs\n *\n * //-- #2. Use method --//\n * // # 2.1 off by event name\n * CustomEvents.off('onload');\n *\n * // # 2.2 off by event name and handler\n * CustomEvents.off('play', handler);\n *\n * // # 2.3 off by handler\n * CustomEvents.off(handler);\n *\n * // # 2.4 off by context\n * CustomEvents.off(myObj);\n *\n * // # 2.5 off by context and handler\n * CustomEvents.off(myObj, handler);\n *\n * // # 2.6 off by context and event name\n * CustomEvents.off(myObj, 'onload');\n *\n * // # 2.7 off by an Object.<string, function> that is {eventName: handler}\n * CustomEvents.off({\n *   'play': handler,\n *   'pause': handler2\n * });\n *\n * // # 2.8 off the all events\n * CustomEvents.off();\n */\nCustomEvents.prototype.off = function(eventName, handler) {\n  if (isString(eventName)) {\n    // [syntax 1, 2]\n    this._offByEventName(eventName, handler);\n  } else if (!arguments.length) {\n    // [syntax 8]\n    this.events = {};\n    this.contexts = [];\n  } else if (isFunction(eventName)) {\n    // [syntax 3]\n    this._offByHandler(eventName);\n  } else if (isObject(eventName)) {\n    // [syntax 4, 5, 6]\n    this._offByObject(eventName, handler);\n  }\n};\n\n/**\n * Fire custom event\n * @param {string} eventName - name of custom event\n */\nCustomEvents.prototype.fire = function(eventName) {  // eslint-disable-line\n  this.invoke.apply(this, arguments);\n};\n\n/**\n * Fire a event and returns the result of operation 'boolean AND' with all\n *  listener's results.\n *\n * So, It is different from {@link CustomEvents#fire}.\n *\n * In service code, use this as a before event in component level usually\n *  for notifying that the event is cancelable.\n * @param {string} eventName - Custom event name\n * @param {...*} data - Data for event\n * @returns {boolean} The result of operation 'boolean AND'\n * @example\n * var map = new Map();\n * map.on({\n *     'beforeZoom': function() {\n *         // It should cancel the 'zoom' event by some conditions.\n *         if (that.disabled && this.getState()) {\n *             return false;\n *         }\n *         return true;\n *     }\n * });\n *\n * if (this.invoke('beforeZoom')) {    // check the result of 'beforeZoom'\n *     // if true,\n *     // doSomething\n * }\n */\nCustomEvents.prototype.invoke = function(eventName) {\n  var events, args, index, item;\n\n  if (!this.hasListener(eventName)) {\n    return true;\n  }\n\n  events = this._safeEvent(eventName);\n  args = Array.prototype.slice.call(arguments, 1);\n  index = 0;\n\n  while (events[index]) {\n    item = events[index];\n\n    if (item.handler.apply(item.context, args) === false) {\n      return false;\n    }\n\n    index += 1;\n  }\n\n  return true;\n};\n\n/**\n * Return whether at least one of the handlers is registered in the given\n *  event name.\n * @param {string} eventName - Custom event name\n * @returns {boolean} Is there at least one handler in event name?\n */\nCustomEvents.prototype.hasListener = function(eventName) {\n  return this.getListenerLength(eventName) > 0;\n};\n\n/**\n * Return a count of events registered.\n * @param {string} eventName - Custom event name\n * @returns {number} number of event\n */\nCustomEvents.prototype.getListenerLength = function(eventName) {\n  var events = this._safeEvent(eventName);\n\n  return events.length;\n};\n\nmodule.exports = CustomEvents;\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * @fileoverview Check whether the given variable is existing or not.\n * @author NHN FE Development Lab <dl_javascript@nhn.com>\n */\n\n\n\nvar isUndefined = __webpack_require__(1);\nvar isNull = __webpack_require__(15);\n\n/**\n * Check whether the given variable is existing or not.\n * If the given variable is not null and not undefined, returns true.\n * @param {*} param - Target for checking\n * @returns {boolean} Is existy?\n * @memberof module:type\n * @example\n * var isExisty = require('tui-code-snippet/type/isExisty'); // node, commonjs\n *\n * isExisty(''); //true\n * isExisty(0); //true\n * isExisty([]); //true\n * isExisty({}); //true\n * isExisty(null); //false\n * isExisty(undefined); //false\n*/\nfunction isExisty(param) {\n  return !isUndefined(param) && !isNull(param);\n}\n\nmodule.exports = isExisty;\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * @fileoverview Check whether the given variable is null or not.\n * @author NHN FE Development Lab <dl_javascript@nhn.com>\n */\n\n\n\n/**\n * Check whether the given variable is null or not.\n * If the given variable(arguments[0]) is null, returns true.\n * @param {*} obj - Target for checking\n * @returns {boolean} Is null?\n * @memberof module:type\n */\nfunction isNull(obj) {\n  return obj === null;\n}\n\nmodule.exports = isNull;\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * @fileoverview Check whether the given variable is an object or not.\n * @author NHN FE Development Lab <dl_javascript@nhn.com>\n */\n\n\n\n/**\n * Check whether the given variable is an object or not.\n * If the given variable is an object, return true.\n * @param {*} obj - Target for checking\n * @returns {boolean} Is object?\n * @memberof module:type\n */\nfunction isObject(obj) {\n  return obj === Object(obj);\n}\n\nmodule.exports = isObject;\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * @fileoverview Execute the provided callback once for each element present in the array(or Array-like object) in ascending order.\n * @author NHN FE Development Lab <dl_javascript@nhn.com>\n */\n\n\n\n/**\n * Execute the provided callback once for each element present\n * in the array(or Array-like object) in ascending order.\n * If the callback function returns false, the loop will be stopped.\n * Callback function(iteratee) is invoked with three arguments:\n *  1) The value of the element\n *  2) The index of the element\n *  3) The array(or Array-like object) being traversed\n * @param {Array|Arguments|NodeList} arr The array(or Array-like object) that will be traversed\n * @param {function} iteratee Callback function\n * @param {Object} [context] Context(this) of callback function\n * @memberof module:collection\n * @example\n * var forEachArray = require('tui-code-snippet/collection/forEachArray'); // node, commonjs\n *\n * var sum = 0;\n *\n * forEachArray([1,2,3], function(value){\n *     sum += value;\n * });\n * alert(sum); // 6\n */\nfunction forEachArray(arr, iteratee, context) {\n  var index = 0;\n  var len = arr.length;\n\n  context = context || null;\n\n  for (; index < len; index += 1) {\n    if (iteratee.call(context, arr[index], index, arr) === false) {\n      break;\n    }\n  }\n}\n\nmodule.exports = forEachArray;\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * @fileoverview Provide a simple inheritance in prototype-oriented.\n * @author NHN FE Development Lab <dl_javascript@nhn.com>\n */\n\n\n\nvar createObject = __webpack_require__(19);\n\n/**\n * Provide a simple inheritance in prototype-oriented.\n * Caution :\n *  Don't overwrite the prototype of child constructor.\n *\n * @param {function} subType Child constructor\n * @param {function} superType Parent constructor\n * @memberof module:inheritance\n * @example\n * var inherit = require('tui-code-snippet/inheritance/inherit'); // node, commonjs\n *\n * // Parent constructor\n * function Animal(leg) {\n *     this.leg = leg;\n * }\n * Animal.prototype.growl = function() {\n *     // ...\n * };\n *\n * // Child constructor\n * function Person(name) {\n *     this.name = name;\n * }\n *\n * // Inheritance\n * inherit(Person, Animal);\n *\n * // After this inheritance, please use only the extending of property.\n * // Do not overwrite prototype.\n * Person.prototype.walk = function(direction) {\n *     // ...\n * };\n */\nfunction inherit(subType, superType) {\n  var prototype = createObject(superType.prototype);\n  prototype.constructor = subType;\n  subType.prototype = prototype;\n}\n\nmodule.exports = inherit;\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * @fileoverview Create a new object with the specified prototype object and properties.\n * @author NHN FE Development Lab <dl_javascript@nhn.com>\n */\n\n\n\n/**\n * @module inheritance\n */\n\n/**\n * Create a new object with the specified prototype object and properties.\n * @param {Object} obj This object will be a prototype of the newly-created object.\n * @returns {Object}\n * @memberof module:inheritance\n */\nfunction createObject(obj) {\n  function F() {} // eslint-disable-line require-jsdoc\n  F.prototype = obj;\n\n  return new F();\n}\n\nmodule.exports = createObject;\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar forEach = __webpack_require__(3);\nvar defineClass = __webpack_require__(7);\nvar getTarget = __webpack_require__(21);\nvar on = __webpack_require__(22);\nvar preventDefault = __webpack_require__(24);\nvar addClass = __webpack_require__(25);\nvar extend = __webpack_require__(0);\nvar isString = __webpack_require__(4);\nvar isHTMLNode = __webpack_require__(28);\n\nvar util = __webpack_require__(9);\n\nvar defaultTemplate = {\n  page: '<a href=\"#\" class=\"tui-page-btn\">{{page}}</a>',\n  currentPage: '<strong class=\"tui-page-btn tui-is-selected\">{{page}}</strong>',\n  moveButton:\n    '<a href=\"#\" class=\"tui-page-btn tui-{{type}}\">' +\n    '<span class=\"tui-ico-{{type}}\">{{type}}</span>' +\n    '</a>',\n  disabledMoveButton:\n    '<span class=\"tui-page-btn tui-is-disabled tui-{{type}}\">' +\n    '<span class=\"tui-ico-{{type}}\">{{type}}</span>' +\n    '</span>',\n  moreButton:\n    '<a href=\"#\" class=\"tui-page-btn tui-{{type}}-is-ellip\">' +\n    '<span class=\"tui-ico-ellip\">...</span>' +\n    '</a>'\n};\nvar moveButtons = ['first', 'prev', 'next', 'last'];\nvar moreButtons = ['prev', 'next'];\n\nvar INVALID_CONTAINER_ELEMENT = 'The container element is invalid.';\n\n/**\n * Pagination view class\n * @class View\n * @param {string|HTMLElement|jQueryObject} container - Container element or id selector\n * @param {object} options - Option object\n *     @param {number} [options.totalItems=10] Total item count\n *     @param {number} [options.itemsPerPage=10] Item count per page\n *     @param {number} [options.visiblePages=10] Display page link count\n *     @param {number} [options.page=1] Display page after pagination draw.\n *     @param {boolean}[options.centerAlign=false] Whether current page keep center or not\n *     @param {string} [options.firstItemClassName='first-child'] The class name of the first item\n *     @param {string} [options.lastItemClassName='last-child'] The class name of the last item\n *     @param {object} [options.template] A markup string set to make element\n *         @param {string|function} [options.template.page] HTML template\n *         @param {string|function} [options.template.currentPage] HTML template\n *         @param {string|function} [options.template.moveButton] HTML template\n *         @param {string|function} [options.template.disabledMoveButton] HTML template\n *         @param {string|function} [options.template.moreButton] HTML template\n * @param {function} handler - Event handler\n * @ignore\n */\nvar View = defineClass(\n  /** @lends View.prototype */ {\n    init: function(container, options, handler) {\n      /**\n       * Root element\n       * @type {HTMLElement}\n       * @private\n       */\n      this._containerElement = null;\n\n      /**\n       * First item's class name\n       * @type {string}\n       * @private\n       */\n      this._firstItemClassName = options.firstItemClassName;\n\n      /**\n       * Last item's class name\n       * @type {string}\n       * @private\n       */\n      this._lastItemClassName = options.lastItemClassName;\n\n      /**\n       * Default template\n       * @type {object.<string, string|function>}\n       * @private\n       */\n      this._template = extend({}, defaultTemplate, options.template);\n\n      /**\n       * Map of buttons\n       * @type {object.<string, HTMLElement>}\n       * @private\n       */\n      this._buttons = {};\n\n      /**\n       * Enabled page elements list\n       * @type {array}\n       * @private\n       */\n\n      this._enabledPageElements = [];\n\n      this._setRootElement(container);\n      this._setMoveButtons();\n      this._setDisabledMoveButtons();\n      this._setMoreButtons();\n      this._attachClickEvent(handler);\n    },\n    /* eslint-enable complexity */\n\n    /**\n     * Set root element\n     * @param {string|HTMLElement|jQueryObject} container - Container element or id selector\n     * @private\n     */\n    _setRootElement: function(container) {\n      if (isString(container)) {\n        container = document.getElementById(container) || document.querySelector(container);\n      } else if (container.jquery) {\n        container = container[0];\n      }\n\n      if (!isHTMLNode(container)) {\n        throw new Error(INVALID_CONTAINER_ELEMENT);\n      }\n\n      this._containerElement = container;\n    },\n\n    /**\n     * Assign move buttons to option\n     * @private\n     */\n    _setMoveButtons: function() {\n      forEach(\n        moveButtons,\n        function(type) {\n          this._buttons[type] = util.createElementByTemplate(this._template.moveButton, {\n            type: type\n          });\n        },\n        this\n      );\n    },\n\n    /**\n     * Assign disabled move buttons to option\n     * @private\n     */\n    _setDisabledMoveButtons: function() {\n      forEach(\n        moveButtons,\n        function(type) {\n          var key = 'disabled' + util.capitalizeFirstLetter(type);\n          this._buttons[key] = util.createElementByTemplate(this._template.disabledMoveButton, {\n            type: type\n          });\n        },\n        this\n      );\n    },\n\n    /**\n     * Assign more buttons to option\n     * @private\n     */\n    _setMoreButtons: function() {\n      forEach(\n        moreButtons,\n        function(type) {\n          var key = type + 'More';\n          this._buttons[key] = util.createElementByTemplate(this._template.moreButton, {\n            type: type\n          });\n        },\n        this\n      );\n    },\n    /* eslint-enable camelcase */\n\n    /**\n     * Get container element\n     * @returns {HTMLElement} Container element\n     * @private\n     */\n    _getContainerElement: function() {\n      return this._containerElement;\n    },\n\n    /**\n     * Append first button on container element\n     * @param {object} viewData - View data to render pagination\n     * @private\n     */\n    _appendFirstButton: function(viewData) {\n      var button;\n\n      if (viewData.page > 1) {\n        button = this._buttons.first;\n      } else {\n        button = this._buttons.disabledFirst;\n      }\n\n      this._getContainerElement().appendChild(button);\n    },\n\n    /**\n     * Append previous button on container element\n     * @param {object} viewData - View data to render pagination\n     * @private\n     */\n    _appendPrevButton: function(viewData) {\n      var button;\n\n      if (viewData.currentPageIndex > 1) {\n        button = this._buttons.prev;\n      } else {\n        button = this._buttons.disabledPrev;\n      }\n\n      this._getContainerElement().appendChild(button);\n    },\n\n    /**\n     * Append next button on container element\n     * @param {object} viewData - View data to render pagination\n     * @private\n     */\n    _appendNextButton: function(viewData) {\n      var button;\n\n      if (viewData.currentPageIndex < viewData.lastPageListIndex) {\n        button = this._buttons.next;\n      } else {\n        button = this._buttons.disabledNext;\n      }\n\n      this._getContainerElement().appendChild(button);\n    },\n\n    /**\n     * Append last button on container element\n     * @param {object} viewData - View data to render pagination\n     * @private\n     */\n    _appendLastButton: function(viewData) {\n      var button;\n\n      if (viewData.page < viewData.lastPage) {\n        button = this._buttons.last;\n      } else {\n        button = this._buttons.disabledLast;\n      }\n\n      this._getContainerElement().appendChild(button);\n    },\n\n    /**\n     * Append previous more button on container element\n     * @param {object} viewData - View data to render pagination\n     * @private\n     */\n    _appendPrevMoreButton: function(viewData) {\n      var button;\n\n      if (viewData.prevMore) {\n        button = this._buttons.prevMore;\n        addClass(button, this._firstItemClassName);\n        this._getContainerElement().appendChild(button);\n      }\n    },\n\n    /**\n     * Append next more button on container element\n     * @param {object} viewData - View data to render pagination\n     * @private\n     */\n    _appendNextMoreButton: function(viewData) {\n      var button;\n\n      if (viewData.nextMore) {\n        button = this._buttons.nextMore;\n        addClass(button, this._lastItemClassName);\n        this._getContainerElement().appendChild(button);\n      }\n    },\n\n    /**\n     * Append page number elements on container element\n     * @param {object} viewData - View data to render pagination\n     * @private\n     */\n    // eslint-disable-next-line complexity\n    _appendPages: function(viewData) {\n      var firstPage = viewData.leftPageNumber;\n      var lastPage = viewData.rightPageNumber;\n      var pageItem, i;\n\n      for (i = firstPage; i <= lastPage; i += 1) {\n        if (i === viewData.page) {\n          pageItem = util.createElementByTemplate(this._template.currentPage, { page: i });\n        } else {\n          pageItem = util.createElementByTemplate(this._template.page, { page: i });\n          this._enabledPageElements.push(pageItem);\n        }\n\n        if (i === firstPage && !viewData.prevMore) {\n          addClass(pageItem, this._firstItemClassName);\n        }\n        if (i === lastPage && !viewData.nextMore) {\n          addClass(pageItem, this._lastItemClassName);\n        }\n        this._getContainerElement().appendChild(pageItem);\n      }\n    },\n\n    /**\n     * Attach click event\n     * @param {function} callback - Callback function\n     * @private\n     */\n    _attachClickEvent: function(callback) {\n      var rootElement = this._getContainerElement();\n\n      on(\n        rootElement,\n        'click',\n        function(ev) {\n          var target = getTarget(ev);\n          var page, buttonType;\n\n          preventDefault(ev);\n\n          buttonType = this._getButtonType(target);\n\n          if (!buttonType) {\n            page = this._getPageNumber(target);\n          }\n\n          callback(buttonType, page);\n        },\n        this\n      );\n    },\n\n    /**\n     * Get button type to move button elements\n     * @param {HTMLElement} targetElement - Each move button element\n     * @returns {?string} Button type\n     * @private\n     */\n    _getButtonType: function(targetElement) {\n      var buttonType;\n      var buttons = this._buttons;\n\n      forEach(\n        buttons,\n        function(button, type) {\n          if (util.isContained(targetElement, button)) {\n            buttonType = type;\n\n            return false;\n          }\n\n          return true;\n        },\n        this\n      );\n\n      return buttonType;\n    },\n    /* eslint-enable no-lonely-if */\n\n    /**\n     * Get number to page elements\n     * @param {HTMLElement} targetElement - Each page element\n     * @returns {?number} Page number\n     * @private\n     */\n    _getPageNumber: function(targetElement) {\n      var targetPage = this._findPageElement(targetElement);\n      var page;\n\n      if (targetPage) {\n        page = parseInt(targetPage.innerText, 10);\n      }\n\n      return page;\n    },\n\n    /**\n     * Find target element from page elements\n     * @param {HTMLElement} targetElement - Each page element\n     * @returns {HTMLElement} Found element\n     * @ignore\n     */\n    _findPageElement: function(targetElement) {\n      var i = 0;\n      var length = this._enabledPageElements.length;\n      var pickedItem;\n\n      for (; i < length; i += 1) {\n        pickedItem = this._enabledPageElements[i];\n\n        if (util.isContained(targetElement, pickedItem)) {\n          return pickedItem;\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Reset container element\n     * @private\n     */\n    _empty: function() {\n      this._enabledPageElements = [];\n\n      forEach(\n        this._buttons,\n        function(buttonElement, type) {\n          this._buttons[type] = buttonElement.cloneNode(true);\n        },\n        this\n      );\n\n      this._getContainerElement().innerHTML = '';\n    },\n\n    /**\n     * Update view\n     * @param {object} viewData - View data to render pagination\n     * @ignore\n     */\n    update: function(viewData) {\n      this._empty();\n      this._appendFirstButton(viewData);\n      this._appendPrevButton(viewData);\n      this._appendPrevMoreButton(viewData);\n      this._appendPages(viewData);\n      this._appendNextMoreButton(viewData);\n      this._appendNextButton(viewData);\n      this._appendLastButton(viewData);\n    }\n  }\n);\n\nmodule.exports = View;\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * @fileoverview Get a target element from an event object.\n * @author NHN FE Development Lab <dl_javascript@nhn.com>\n */\n\n\n\n/**\n * Get a target element from an event object.\n * @param {Event} e - event object\n * @returns {HTMLElement} - target element\n * @memberof module:domEvent\n */\nfunction getTarget(e) {\n  return e.target || e.srcElement;\n}\n\nmodule.exports = getTarget;\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * @fileoverview Bind DOM events\n * @author NHN FE Development Lab <dl_javascript@nhn.com>\n */\n\n\n\nvar isString = __webpack_require__(4);\nvar forEach = __webpack_require__(3);\n\nvar safeEvent = __webpack_require__(23);\n\n/**\n * Bind DOM events.\n * @param {HTMLElement} element - element to bind events\n * @param {(string|object)} types - Space splitted events names or eventName:handler object\n * @param {(function|object)} handler - handler function or context for handler method\n * @param {object} [context] context - context for handler method.\n * @memberof module:domEvent\n * @example\n * var div = document.querySelector('div');\n * \n * // Bind one event to an element.\n * on(div, 'click', toggle);\n * \n * // Bind multiple events with a same handler to multiple elements at once.\n * // Use event names splitted by a space.\n * on(div, 'mouseenter mouseleave', changeColor);\n * \n * // Bind multiple events with different handlers to an element at once.\n * // Use an object which of key is an event name and value is a handler function.\n * on(div, {\n *   keydown: highlight,\n *   keyup: dehighlight\n * });\n * \n * // Set a context for handler method.\n * var name = 'global';\n * var repository = {name: 'CodeSnippet'};\n * on(div, 'drag', function() {\n *  console.log(this.name);\n * }, repository);\n * // Result when you drag a div: \"CodeSnippet\"\n */\nfunction on(element, types, handler, context) {\n  if (isString(types)) {\n    forEach(types.split(/\\s+/g), function(type) {\n      bindEvent(element, type, handler, context);\n    });\n\n    return;\n  }\n\n  forEach(types, function(func, type) {\n    bindEvent(element, type, func, handler);\n  });\n}\n\n/**\n * Bind DOM events\n * @param {HTMLElement} element - element to bind events\n * @param {string} type - events name\n * @param {function} handler - handler function or context for handler method\n * @param {object} [context] context - context for handler method.\n * @private\n */\nfunction bindEvent(element, type, handler, context) {\n  /**\n     * Event handler\n     * @param {Event} e - event object\n     */\n  function eventHandler(e) {\n    handler.call(context || element, e || window.event);\n  }\n\n  if ('addEventListener' in element) {\n    element.addEventListener(type, eventHandler);\n  } else if ('attachEvent' in element) {\n    element.attachEvent('on' + type, eventHandler);\n  }\n  memorizeHandler(element, type, handler, eventHandler);\n}\n\n/**\n * Memorize DOM event handler for unbinding.\n * @param {HTMLElement} element - element to bind events\n * @param {string} type - events name\n * @param {function} handler - handler function that user passed at on() use\n * @param {function} wrappedHandler - handler function that wrapped by domevent for implementing some features\n * @private\n */\nfunction memorizeHandler(element, type, handler, wrappedHandler) {\n  var events = safeEvent(element, type);\n  var existInEvents = false;\n\n  forEach(events, function(obj) {\n    if (obj.handler === handler) {\n      existInEvents = true;\n\n      return false;\n    }\n\n    return true;\n  });\n\n  if (!existInEvents) {\n    events.push({\n      handler: handler,\n      wrappedHandler: wrappedHandler\n    });\n  }\n}\n\nmodule.exports = on;\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * @fileoverview Get event collection for specific HTML element\n * @author NHN FE Development Lab <dl_javascript@nhn.com>\n */\n\n\n\nvar EVENT_KEY = '_feEventKey';\n\n/**\n * Get event collection for specific HTML element\n * @param {HTMLElement} element - HTML element\n * @param {string} type - event type\n * @returns {array}\n * @private\n */\nfunction safeEvent(element, type) {\n  var events = element[EVENT_KEY];\n  var handlers;\n\n  if (!events) {\n    events = element[EVENT_KEY] = {};\n  }\n\n  handlers = events[type];\n  if (!handlers) {\n    handlers = events[type] = [];\n  }\n\n  return handlers;\n}\n\nmodule.exports = safeEvent;\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * @fileoverview Prevent default action\n * @author NHN FE Development Lab <dl_javascript@nhn.com>\n */\n\n\n\n/**\n * Prevent default action\n * @param {Event} e - event object\n * @memberof module:domEvent\n */\nfunction preventDefault(e) {\n  if (e.preventDefault) {\n    e.preventDefault();\n\n    return;\n  }\n\n  e.returnValue = false;\n}\n\nmodule.exports = preventDefault;\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * @fileoverview Add css class to element\n * @author NHN FE Development Lab <dl_javascript@nhn.com>\n */\n\n\n\nvar forEach = __webpack_require__(3);\nvar inArray = __webpack_require__(8);\nvar getClass = __webpack_require__(26);\nvar setClassName = __webpack_require__(27);\n\n/**\n * domUtil module\n * @module domUtil\n */\n\n/**\n * Add css class to element\n * @param {(HTMLElement|SVGElement)} element - target element\n * @param {...string} cssClass - css classes to add\n * @memberof module:domUtil\n */\nfunction addClass(element) {\n  var cssClass = Array.prototype.slice.call(arguments, 1);\n  var classList = element.classList;\n  var newClass = [];\n  var origin;\n\n  if (classList) {\n    forEach(cssClass, function(name) {\n      element.classList.add(name);\n    });\n\n    return;\n  }\n\n  origin = getClass(element);\n\n  if (origin) {\n    cssClass = [].concat(origin.split(/\\s+/), cssClass);\n  }\n\n  forEach(cssClass, function(cls) {\n    if (inArray(cls, newClass) < 0) {\n      newClass.push(cls);\n    }\n  });\n\n  setClassName(element, newClass);\n}\n\nmodule.exports = addClass;\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * @fileoverview Get HTML element's design classes.\n * @author NHN FE Development Lab <dl_javascript@nhn.com>\n */\n\n\n\nvar isUndefined = __webpack_require__(1);\n\n/**\n * Get HTML element's design classes.\n * @param {(HTMLElement|SVGElement)} element target element\n * @returns {string} element css class name\n * @memberof module:domUtil\n */\nfunction getClass(element) {\n  if (!element || !element.className) {\n    return '';\n  }\n\n  if (isUndefined(element.className.baseVal)) {\n    return element.className;\n  }\n\n  return element.className.baseVal;\n}\n\nmodule.exports = getClass;\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * @fileoverview Set className value\n * @author NHN FE Development Lab <dl_javascript@nhn.com>\n */\n\n\n\nvar isArray = __webpack_require__(2);\nvar isUndefined = __webpack_require__(1);\n\n/**\n * Set className value\n * @param {(HTMLElement|SVGElement)} element - target element\n * @param {(string|string[])} cssClass - class names\n * @private\n */\nfunction setClassName(element, cssClass) {\n  cssClass = isArray(cssClass) ? cssClass.join(' ') : cssClass;\n\n  cssClass = cssClass.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n  if (isUndefined(element.className.baseVal)) {\n    element.className = cssClass;\n\n    return;\n  }\n\n  element.className.baseVal = cssClass;\n}\n\nmodule.exports = setClassName;\n\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * @fileoverview Check whether the given variable is a instance of HTMLNode or not.\n * @author NHN FE Development Lab <dl_javascript@nhn.com>\n */\n\n\n\n/**\n * Check whether the given variable is a instance of HTMLNode or not.\n * If the given variables is a instance of HTMLNode, return true.\n * @param {*} html - Target for checking\n * @returns {boolean} Is HTMLNode ?\n * @memberof module:type\n */\nfunction isHTMLNode(html) {\n  if (typeof HTMLElement === 'object') {\n    return (html && (html instanceof HTMLElement || !!html.nodeType));\n  }\n\n  return !!(html && html.nodeType);\n}\n\nmodule.exports = isHTMLNode;\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * @fileoverview Convert text by binding expressions with context.\n * @author NHN FE Development Lab <dl_javascript@nhn.com>\n */\n\n\n\nvar inArray = __webpack_require__(8);\nvar forEach = __webpack_require__(3);\nvar isArray = __webpack_require__(2);\nvar isString = __webpack_require__(4);\nvar extend = __webpack_require__(0);\n\n// IE8 does not support capture groups.\nvar EXPRESSION_REGEXP = /{{\\s?|\\s?}}/g;\nvar BRACKET_NOTATION_REGEXP = /^[a-zA-Z0-9_@]+\\[[a-zA-Z0-9_@\"']+\\]$/;\nvar BRACKET_REGEXP = /\\[\\s?|\\s?\\]/;\nvar DOT_NOTATION_REGEXP = /^[a-zA-Z_]+\\.[a-zA-Z_]+$/;\nvar DOT_REGEXP = /\\./;\nvar STRING_NOTATION_REGEXP = /^[\"']\\w+[\"']$/;\nvar STRING_REGEXP = /\"|'/g;\nvar NUMBER_REGEXP = /^-?\\d+\\.?\\d*$/;\n\nvar EXPRESSION_INTERVAL = 2;\n\nvar BLOCK_HELPERS = {\n  'if': handleIf,\n  'each': handleEach,\n  'with': handleWith\n};\n\nvar isValidSplit = 'a'.split(/a/).length === 3;\n\n/**\n * Split by RegExp. (Polyfill for IE8)\n * @param {string} text - text to be splitted\\\n * @param {RegExp} regexp - regular expression\n * @returns {Array.<string>}\n */\nvar splitByRegExp = (function() {\n  if (isValidSplit) {\n    return function(text, regexp) {\n      return text.split(regexp);\n    };\n  }\n\n  return function(text, regexp) {\n    var result = [];\n    var prevIndex = 0;\n    var match, index;\n\n    if (!regexp.global) {\n      regexp = new RegExp(regexp, 'g');\n    }\n\n    match = regexp.exec(text);\n    while (match !== null) {\n      index = match.index;\n      result.push(text.slice(prevIndex, index));\n\n      prevIndex = index + match[0].length;\n      match = regexp.exec(text);\n    }\n    result.push(text.slice(prevIndex));\n\n    return result;\n  };\n})();\n\n/**\n * Find value in the context by an expression.\n * @param {string} exp - an expression\n * @param {object} context - context\n * @returns {*}\n * @private\n */\n// eslint-disable-next-line complexity\nfunction getValueFromContext(exp, context) {\n  var splitedExps;\n  var value = context[exp];\n\n  if (exp === 'true') {\n    value = true;\n  } else if (exp === 'false') {\n    value = false;\n  } else if (STRING_NOTATION_REGEXP.test(exp)) {\n    value = exp.replace(STRING_REGEXP, '');\n  } else if (BRACKET_NOTATION_REGEXP.test(exp)) {\n    splitedExps = exp.split(BRACKET_REGEXP);\n    value = getValueFromContext(splitedExps[0], context)[getValueFromContext(splitedExps[1], context)];\n  } else if (DOT_NOTATION_REGEXP.test(exp)) {\n    splitedExps = exp.split(DOT_REGEXP);\n    value = getValueFromContext(splitedExps[0], context)[splitedExps[1]];\n  } else if (NUMBER_REGEXP.test(exp)) {\n    value = parseFloat(exp);\n  }\n\n  return value;\n}\n\n/**\n * Extract elseif and else expressions.\n * @param {Array.<string>} ifExps - args of if expression\n * @param {Array.<string>} sourcesInsideBlock - sources inside if block\n * @returns {object} - exps: expressions of if, elseif, and else / sourcesInsideIf: sources inside if, elseif, and else block.\n * @private\n */\nfunction extractElseif(ifExps, sourcesInsideBlock) {\n  var exps = [ifExps];\n  var sourcesInsideIf = [];\n  var otherIfCount = 0;\n  var start = 0;\n\n  // eslint-disable-next-line complexity\n  forEach(sourcesInsideBlock, function(source, index) {\n    if (source.indexOf('if') === 0) {\n      otherIfCount += 1;\n    } else if (source === '/if') {\n      otherIfCount -= 1;\n    } else if (!otherIfCount && (source.indexOf('elseif') === 0 || source === 'else')) {\n      exps.push(source === 'else' ? ['true'] : source.split(' ').slice(1));\n      sourcesInsideIf.push(sourcesInsideBlock.slice(start, index));\n      start = index + 1;\n    }\n  });\n\n  sourcesInsideIf.push(sourcesInsideBlock.slice(start));\n\n  return {\n    exps: exps,\n    sourcesInsideIf: sourcesInsideIf\n  };\n}\n\n/**\n * Helper function for \"if\". \n * @param {Array.<string>} exps - array of expressions split by spaces\n * @param {Array.<string>} sourcesInsideBlock - array of sources inside the if block\n * @param {object} context - context\n * @returns {string}\n * @private\n */\nfunction handleIf(exps, sourcesInsideBlock, context) {\n  var analyzed = extractElseif(exps, sourcesInsideBlock);\n  var result = false;\n  var compiledSource = '';\n\n  forEach(analyzed.exps, function(exp, index) {\n    result = handleExpression(exp, context);\n    if (result) {\n      compiledSource = compile(analyzed.sourcesInsideIf[index], context);\n    }\n\n    return !result;\n  });\n\n  return compiledSource;\n}\n\n/**\n * Helper function for \"each\".\n * @param {Array.<string>} exps - array of expressions split by spaces\n * @param {Array.<string>} sourcesInsideBlock - array of sources inside the each block\n * @param {object} context - context\n * @returns {string}\n * @private\n */\nfunction handleEach(exps, sourcesInsideBlock, context) {\n  var collection = handleExpression(exps, context);\n  var additionalKey = isArray(collection) ? '@index' : '@key';\n  var additionalContext = {};\n  var result = '';\n\n  forEach(collection, function(item, key) {\n    additionalContext[additionalKey] = key;\n    additionalContext['@this'] = item;\n    extend(context, additionalContext);\n\n    result += compile(sourcesInsideBlock.slice(), context);\n  });\n\n  return result;\n}\n\n/**\n * Helper function for \"with ... as\"\n * @param {Array.<string>} exps - array of expressions split by spaces\n * @param {Array.<string>} sourcesInsideBlock - array of sources inside the with block\n * @param {object} context - context\n * @returns {string}\n * @private\n */\nfunction handleWith(exps, sourcesInsideBlock, context) {\n  var asIndex = inArray('as', exps);\n  var alias = exps[asIndex + 1];\n  var result = handleExpression(exps.slice(0, asIndex), context);\n\n  var additionalContext = {};\n  additionalContext[alias] = result;\n\n  return compile(sourcesInsideBlock, extend(context, additionalContext)) || '';\n}\n\n/**\n * Extract sources inside block in place.\n * @param {Array.<string>} sources - array of sources\n * @param {number} start - index of start block\n * @param {number} end - index of end block\n * @returns {Array.<string>}\n * @private\n */\nfunction extractSourcesInsideBlock(sources, start, end) {\n  var sourcesInsideBlock = sources.splice(start + 1, end - start);\n  sourcesInsideBlock.pop();\n\n  return sourcesInsideBlock;\n}\n\n/**\n * Handle block helper function\n * @param {string} helperKeyword - helper keyword (ex. if, each, with)\n * @param {Array.<string>} sourcesToEnd - array of sources after the starting block\n * @param {object} context - context\n * @returns {Array.<string>}\n * @private\n */\nfunction handleBlockHelper(helperKeyword, sourcesToEnd, context) {\n  var executeBlockHelper = BLOCK_HELPERS[helperKeyword];\n  var helperCount = 1;\n  var startBlockIndex = 0;\n  var endBlockIndex;\n  var index = startBlockIndex + EXPRESSION_INTERVAL;\n  var expression = sourcesToEnd[index];\n\n  while (helperCount && isString(expression)) {\n    if (expression.indexOf(helperKeyword) === 0) {\n      helperCount += 1;\n    } else if (expression.indexOf('/' + helperKeyword) === 0) {\n      helperCount -= 1;\n      endBlockIndex = index;\n    }\n\n    index += EXPRESSION_INTERVAL;\n    expression = sourcesToEnd[index];\n  }\n\n  if (helperCount) {\n    throw Error(helperKeyword + ' needs {{/' + helperKeyword + '}} expression.');\n  }\n\n  sourcesToEnd[startBlockIndex] = executeBlockHelper(\n    sourcesToEnd[startBlockIndex].split(' ').slice(1),\n    extractSourcesInsideBlock(sourcesToEnd, startBlockIndex, endBlockIndex),\n    context\n  );\n\n  return sourcesToEnd;\n}\n\n/**\n * Helper function for \"custom helper\".\n * If helper is not a function, return helper itself.\n * @param {Array.<string>} exps - array of expressions split by spaces (first element: helper)\n * @param {object} context - context\n * @returns {string}\n * @private\n */\nfunction handleExpression(exps, context) {\n  var result = getValueFromContext(exps[0], context);\n\n  if (result instanceof Function) {\n    return executeFunction(result, exps.slice(1), context);\n  }\n\n  return result;\n}\n\n/**\n * Execute a helper function.\n * @param {Function} helper - helper function\n * @param {Array.<string>} argExps - expressions of arguments\n * @param {object} context - context\n * @returns {string} - result of executing the function with arguments\n * @private\n */\nfunction executeFunction(helper, argExps, context) {\n  var args = [];\n  forEach(argExps, function(exp) {\n    args.push(getValueFromContext(exp, context));\n  });\n\n  return helper.apply(null, args);\n}\n\n/**\n * Get a result of compiling an expression with the context.\n * @param {Array.<string>} sources - array of sources split by regexp of expression.\n * @param {object} context - context\n * @returns {Array.<string>} - array of sources that bind with its context\n * @private\n */\nfunction compile(sources, context) {\n  var index = 1;\n  var expression = sources[index];\n  var exps, firstExp, result;\n\n  while (isString(expression)) {\n    exps = expression.split(' ');\n    firstExp = exps[0];\n\n    if (BLOCK_HELPERS[firstExp]) {\n      result = handleBlockHelper(firstExp, sources.splice(index, sources.length - index), context);\n      sources = sources.concat(result);\n    } else {\n      sources[index] = handleExpression(exps, context);\n    }\n\n    index += EXPRESSION_INTERVAL;\n    expression = sources[index];\n  }\n\n  return sources.join('');\n}\n\n/**\n * Convert text by binding expressions with context.\n * <br>\n * If expression exists in the context, it will be replaced.\n * ex) '{{title}}' with context {title: 'Hello!'} is converted to 'Hello!'.\n * An array or object can be accessed using bracket and dot notation.\n * ex) '{{odds\\[2\\]}}' with context {odds: \\[1, 3, 5\\]} is converted to '5'.\n * ex) '{{evens\\[first\\]}}' with context {evens: \\[2, 4\\], first: 0} is converted to '2'.\n * ex) '{{project\\[\"name\"\\]}}' and '{{project.name}}' with context {project: {name: 'CodeSnippet'}} is converted to 'CodeSnippet'.\n * <br>\n * If replaced expression is a function, next expressions will be arguments of the function.\n * ex) '{{add 1 2}}' with context {add: function(a, b) {return a + b;}} is converted to '3'.\n * <br>\n * It has 3 predefined block helpers '{{helper ...}} ... {{/helper}}': 'if', 'each', 'with ... as ...'.\n * 1) 'if' evaluates conditional statements. It can use with 'elseif' and 'else'.\n * 2) 'each' iterates an array or object. It provides '@index'(array), '@key'(object), and '@this'(current element).\n * 3) 'with ... as ...' provides an alias.\n * @param {string} text - text with expressions\n * @param {object} context - context\n * @returns {string} - text that bind with its context\n * @memberof module:domUtil\n * @example\n * var template = require('tui-code-snippet/domUtil/template');\n * \n * var source = \n *     '<h1>'\n *   +   '{{if isValidNumber title}}'\n *   +     '{{title}}th'\n *   +   '{{elseif isValidDate title}}'\n *   +     'Date: {{title}}'\n *   +   '{{/if}}'\n *   + '</h1>'\n *   + '{{each list}}'\n *   +   '{{with addOne @index as idx}}'\n *   +     '<p>{{idx}}: {{@this}}</p>'\n *   +   '{{/with}}'\n *   + '{{/each}}';\n * \n * var context = {\n *   isValidDate: function(text) {\n *     return /^\\d{4}-(0|1)\\d-(0|1|2|3)\\d$/.test(text);\n *   },\n *   isValidNumber: function(text) {\n *     return /^\\d+$/.test(text);\n *   }\n *   title: '2019-11-25',\n *   list: ['Clean the room', 'Wash the dishes'],\n *   addOne: function(num) {\n *     return num + 1;\n *   }\n * };\n * \n * var result = template(source, context);\n * console.log(result); // <h1>Date: 2019-11-25</h1><p>1: Clean the room</p><p>2: Wash the dishes</p>\n */\nfunction template(text, context) {\n  return compile(splitByRegExp(text, EXPRESSION_REGEXP), context);\n}\n\nmodule.exports = template;\n\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * @fileoverview Send hostname on DOMContentLoaded.\n * @author NHN FE Development Lab <dl_javascript@nhn.com>\n */\n\n\n\nvar isUndefined = __webpack_require__(1);\nvar imagePing = __webpack_require__(31);\n\nvar ms7days = 7 * 24 * 60 * 60 * 1000;\n\n/**\n * Check if the date has passed 7 days\n * @param {number} date - milliseconds\n * @returns {boolean}\n * @private\n */\nfunction isExpired(date) {\n  var now = new Date().getTime();\n\n  return now - date > ms7days;\n}\n\n/**\n * Send hostname on DOMContentLoaded.\n * To prevent hostname set tui.usageStatistics to false.\n * @param {string} appName - application name\n * @param {string} trackingId - GA tracking ID\n * @ignore\n */\nfunction sendHostname(appName, trackingId) {\n  var url = 'https://www.google-analytics.com/collect';\n  var hostname = location.hostname;\n  var hitType = 'event';\n  var eventCategory = 'use';\n  var applicationKeyForStorage = 'TOAST UI ' + appName + ' for ' + hostname + ': Statistics';\n  var date = window.localStorage.getItem(applicationKeyForStorage);\n\n  // skip if the flag is defined and is set to false explicitly\n  if (!isUndefined(window.tui) && window.tui.usageStatistics === false) {\n    return;\n  }\n\n  // skip if not pass seven days old\n  if (date && !isExpired(date)) {\n    return;\n  }\n\n  window.localStorage.setItem(applicationKeyForStorage, new Date().getTime());\n\n  setTimeout(function() {\n    if (document.readyState === 'interactive' || document.readyState === 'complete') {\n      imagePing(url, {\n        v: 1,\n        t: hitType,\n        tid: trackingId,\n        cid: hostname,\n        dp: hostname,\n        dh: appName,\n        el: appName,\n        ec: eventCategory\n      });\n    }\n  }, 1000);\n}\n\nmodule.exports = sendHostname;\n\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * @fileoverview Request image ping.\n * @author NHN FE Development Lab <dl_javascript@nhn.com>\n */\n\n\n\nvar forEachOwnProperties = __webpack_require__(6);\n\n/**\n * @module request\n */\n\n/**\n * Request image ping.\n * @param {String} url url for ping request\n * @param {Object} trackingInfo infos for make query string\n * @returns {HTMLElement}\n * @memberof module:request\n * @example\n * var imagePing = require('tui-code-snippet/request/imagePing'); // node, commonjs\n *\n * imagePing('https://www.google-analytics.com/collect', {\n *     v: 1,\n *     t: 'event',\n *     tid: 'trackingid',\n *     cid: 'cid',\n *     dp: 'dp',\n *     dh: 'dh'\n * });\n */\nfunction imagePing(url, trackingInfo) {\n  var trackingElement = document.createElement('img');\n  var queryString = '';\n  forEachOwnProperties(trackingInfo, function(value, key) {\n    queryString += '&' + key + '=' + value;\n  });\n  queryString = queryString.substring(1);\n\n  trackingElement.src = url + '?' + queryString;\n\n  trackingElement.style.display = 'none';\n  document.body.appendChild(trackingElement);\n  document.body.removeChild(trackingElement);\n\n  return trackingElement;\n}\n\nmodule.exports = imagePing;\n\n\n/***/ })\n/******/ ]);\n});"],"names":["$78b18610706cb935$var$handlebars","parcelRequire","default","PrintVisitor","$iss1K","print","module","exports","$2b9d1486578e295b$var$_create","$2b9d1486578e295b$var$_handlebarsRuntime2","create","$2b9d1486578e295b$var$create","hb","compile","input","options","$g3b5c","precompile","AST","$2b9d1486578e295b$var$_handlebarsCompilerAst2","Compiler","JavaScriptCompiler","$2b9d1486578e295b$var$_handlebarsCompilerJavascriptCompiler2","Parser","$bZTyu","parser","parse","parseWithoutProcessing","$2b9d1486578e295b$var$inst","$2b9d1486578e295b$var$_handlebarsNoConflict2","Visitor","$2b9d1486578e295b$var$_handlebarsCompilerVisitor2","$68265d4fe4aafbd2$var$base","$68265d4fe4aafbd2$var$_interopRequireWildcard","$68265d4fe4aafbd2$var$Utils","$68265d4fe4aafbd2$var$runtime","$68265d4fe4aafbd2$var$create","HandlebarsEnvironment","extend","SafeString","$68265d4fe4aafbd2$var$_handlebarsSafeString2","Exception","$68265d4fe4aafbd2$var$_handlebarsException2","Utils","escapeExpression","VM","template","spec","$68265d4fe4aafbd2$var$inst","$68265d4fe4aafbd2$var$_handlebarsNoConflict2","$6fd5c235c879d47d$export$52b3fe9f41f5650c","$6fd5c235c879d47d$export$af88d00dbe7f521","$6fd5c235c879d47d$var$objectType","$6fd5c235c879d47d$var$HandlebarsEnvironment","helpers","partials","decorators","this","$2ATA1","registerDefaultHelpers","$boziC","registerDefaultDecorators","prototype","constructor","logger","$6fd5c235c879d47d$var$_logger2","log","registerHelper","name","fn","$9rsBU","toString","call","$6fd5c235c879d47d$var$_exception2","unregisterHelper","registerPartial","partial","unregisterPartial","registerDecorator","unregisterDecorator","resetLoggedPropertyAccesses","$5J1pr","resetLoggedProperties","$6fd5c235c879d47d$var$log","createFrame","$6dfcd4184265dc45$export$f6e2535fb5126e54","array","value","i","len","length","string","toHTML","$6dfcd4184265dc45$var$possible","test","replace","$6dfcd4184265dc45$var$badChars","$6dfcd4184265dc45$var$escapeChar","$6dfcd4184265dc45$var$isArray","object","frame","$6dfcd4184265dc45$var$extend","_parent","params","ids","path","contextPath","id","$6dfcd4184265dc45$var$escape","chr","obj","arguments","key","Object","hasOwnProperty","$6dfcd4184265dc45$var$toString","$6dfcd4184265dc45$var$isFunction","Array","isArray","$f6d87e2b3bc79407$var$errorProps","$f6d87e2b3bc79407$var$Exception","message","node","loc","line","undefined","endLineNumber","column","endColumn","start","end","tmp","Error","idx","captureStackTrace","lineNumber","defineProperty","enumerable","nop","instance","$1e3a0e9b859c0984$var$_helpersBlockHelperMissing2","$1e3a0e9b859c0984$var$_helpersEach2","$1e3a0e9b859c0984$var$_helpersHelperMissing2","$1e3a0e9b859c0984$var$_helpersIf2","$1e3a0e9b859c0984$var$_helpersLog2","$1e3a0e9b859c0984$var$_helpersLookup2","$1e3a0e9b859c0984$var$_helpersWith2","helperName","keepHelper","hooks","context","inverse","each","data","appendContextPath","$d9ee9539ed2d4c85$var$_exception2","priorKey","ret","execIteration","field","index","last","first","blockParams","isFunction","j","$parcel$global","Symbol","iterator","newContext","it","next","done","push","keys","forEach","$cf06054d8f5e3a77$var$_exception2","conditional","$ca4fc185ba638cf7$var$_exception2","hash","includeZero","isEmpty","args","level","apply","lookupProperty","$0058e56600b24c43$var$_exception2","$84bd515462f01c84$var$_decoratorsInline2","props","container","original","$65b7cc69ddcf0758$var$logger","methodMap","lookupLevel","levelMap","indexOf","toLowerCase","parseInt","console","method","_len","_key","runtimeOptions","defaultMethodWhiteList","defaultPropertyWhiteList","properties","whitelist","$13oGa","createNewLookupObject","allowedProtoProperties","defaultValue","allowProtoPropertiesByDefault","methods","allowedProtoMethods","allowProtoMethodsByDefault","result","protoAccessControl","propertyName","$42b23f94c0751b89$var$checkWhiteList","$42b23f94c0751b89$var$loggedProperties","$42b23f94c0751b89$var$logger","$42b23f94c0751b89$var$_interopRequireWildcard","protoAccessControlForType","$42b23f94c0751b89$var$logUnexpecedPropertyAccessOnce","sources","concat","$f1db34ae30910d17$var$SafeString","compilerInfo","compilerRevision","currentRevision","$9Biib","COMPILER_REVISION","LAST_COMPATIBLE_COMPILER_REVISION","runtimeVersions","REVISION_CHANGES","compilerVersions","$01e88af6ae1a68f2$var$_exception2","templateSpec","env","main","decorator","main_d","checkRevision","compiler","templateWasPrecompiledWithCompilerV7","strict","parent","resultIsAllowed","lookup","depths","lambda","current","$01e88af6ae1a68f2$var$Utils","invokePartial","resolvePartial","extendedOptions","compilerOptions","indent","lines","split","l","join","programs","program","declaredBlockParams","programWrapper","$01e88af6ae1a68f2$var$wrapProgram","depth","mergeIfNeeded","param","common","nullContext","seal","noop","_setup","useData","$01e88af6ae1a68f2$var$initData","useBlockParams","useDepths","$01e88af6ae1a68f2$var$executeDecorators","isTop","mergedHelpers","helper","$3MEsI","wrapHelper","$01e88af6ae1a68f2$var$passLookupPropertyOption","$01e88af6ae1a68f2$var$wrapHelpersToPassLookupProperty","usePartial","useDecorators","createProtoAccessControl","keepHelperInHelpers","allowCallsToHelperMissing","moveHelperToHooks","_child","currentPartialBlock","partialBlock","$01e88af6ae1a68f2$var$noop","Function","$01e88af6ae1a68f2$var$_interopRequireWildcard","prog","currentDepths","root","transformOptionsFn","Handlebars","window","$Handlebars","noConflict","$4c0cfe046184d6b5$var$AST","helperExpression","type","scopedId","simpleId","parts","$8bc07c592aefdc7c$export$8f49e4af10703ce3","ast","$8bc07c592aefdc7c$var$parseWithoutProcessing","$8bc07c592aefdc7c$var$_whitespaceControl2","accept","$8bc07c592aefdc7c$var$Helpers","$8bc07c592aefdc7c$var$_interopRequireWildcard","$8bc07c592aefdc7c$var$_parser2","$8bc07c592aefdc7c$var$yy","yy","locInfo","SourceLocation","srcName","$755615af2e3bc56c$var$handlebars","trace","symbols_","error","EOF","program_repetition0","statement","mustache","block","rawBlock","content","COMMENT","CONTENT","openRawBlock","rawBlock_repetition0","END_RAW_BLOCK","OPEN_RAW_BLOCK","openRawBlock_repetition0","openRawBlock_option0","CLOSE_RAW_BLOCK","openBlock","block_option0","closeBlock","openInverse","block_option1","OPEN_BLOCK","openBlock_repetition0","openBlock_option0","openBlock_option1","CLOSE","OPEN_INVERSE","openInverse_repetition0","openInverse_option0","openInverse_option1","openInverseChain","OPEN_INVERSE_CHAIN","openInverseChain_repetition0","openInverseChain_option0","openInverseChain_option1","inverseAndProgram","INVERSE","inverseChain","inverseChain_option0","OPEN_ENDBLOCK","OPEN","mustache_repetition0","mustache_option0","OPEN_UNESCAPED","mustache_repetition1","mustache_option1","CLOSE_UNESCAPED","OPEN_PARTIAL","partialName","partial_repetition0","partial_option0","openPartialBlock","OPEN_PARTIAL_BLOCK","openPartialBlock_repetition0","openPartialBlock_option0","sexpr","OPEN_SEXPR","sexpr_repetition0","sexpr_option0","CLOSE_SEXPR","hash_repetition_plus0","hashSegment","ID","EQUALS","OPEN_BLOCK_PARAMS","blockParams_repetition_plus0","CLOSE_BLOCK_PARAMS","dataName","STRING","NUMBER","BOOLEAN","UNDEFINED","NULL","DATA","pathSegments","SEP","$accept","$end","terminals_","productions_","performAction","yytext","yyleng","yylineno","yystate","$$","_$","$0","$","prepareProgram","stripComment","strip","stripFlags","prepareRawBlock","prepareBlock","open","chained","chain","prepareMustache","preparePartialBlock","pairs","Number","preparePath","part","separator","table","defaultActions","parseError","str","self","stack","vstack","lstack","recovering","lexer","setInput","yylloc","yyloc","ranges","symbol","preErrorSymbol","state","action","r","p","newState","expected","token","yyval","lex","errStr","showPosition","text","match","first_line","last_line","first_column","last_column","range","slice","_input","_more","_less","matched","conditionStack","offset","ch","unput","substr","oldLines","more","less","n","pastInput","past","upcomingInput","pre","c","tempMatch","rules","_currentRules","flex","matches","begin","condition","popState","pop","conditions","topState","pushState","yy_","$avoiding_name_collisions","YY_START","substring","mu","inclusive","emu","com","raw","INITIAL","$035832b1e5cae68a$var$WhitespaceControl","$035832b1e5cae68a$var$isPrevWhitespace","body","isRoot","prev","sibling","$035832b1e5cae68a$var$isNextWhitespace","$035832b1e5cae68a$var$omitRight","multiple","rightStripped","$035832b1e5cae68a$var$omitLeft","leftStripped","$035832b1e5cae68a$var$_visitor2","Program","doStandalone","ignoreStandalone","isRootSeen","_isPrevWhitespace","_isNextWhitespace","openStandalone","closeStandalone","inlineStandalone","close","exec","BlockStatement","DecoratorBlock","PartialBlockStatement","firstInverse","lastInverse","openStrip","closeStrip","inverseStrip","Decorator","MustacheStatement","PartialStatement","CommentStatement","$be363f2af0aa9422$var$Visitor","parents","$be363f2af0aa9422$var$visitSubExpression","acceptRequired","acceptArray","acceptKey","$be363f2af0aa9422$var$visitBlock","$be363f2af0aa9422$var$visitPartial","mutating","$be363f2af0aa9422$var$_exception2","splice","unshift","shift","ContentStatement","SubExpression","PathExpression","StringLiteral","NumberLiteral","BooleanLiteral","UndefinedLiteral","NullLiteral","Hash","HashPair","pair","source","charAt","comment","dig","isLiteral","$e8b7f063dfc6a59f$var$_exception2","escapeFlag","escaped","contents","$e8b7f063dfc6a59f$var$validateClose","inverted","statements","firstLoc","lastLoc","errorNode","$baf585f8b4c7235e$var$_exception2","compat","environment","compiled","compileInput","execOptions","setupOptions","$baf585f8b4c7235e$var$slice","$baf585f8b4c7235e$var$Compiler","$baf585f8b4c7235e$var$argEquals","a","b","$baf585f8b4c7235e$var$transformLiteralToPath","literal","equals","other","opcodes","opcode","otherOpcode","children","guid","sourceNode","stringParams","trackIds","knownHelpers","helperMissing","blockHelperMissing","if","unless","with","compileProgram","bodyLength","isSimple","classifySexpr","helperSexpr","simpleSexpr","ambiguousSexpr","setupFullMustacheParams","explicitPartialContext","isDynamic","preventIndent","noEscape","isBlock","knownHelpersOnly","falsy","$baf585f8b4c7235e$var$_ast2","addDepth","scoped","blockParamId","blockParamIndex","number","bool","pushParam","isBlockParam","isHelper","isEligible","_name","pushParams","val","blockParamChild","omitEmpty","$b1f0070f58a24a18$var$Literal","$b1f0070f58a24a18$var$JavaScriptCompiler","nameLookup","internalNameLookup","depthedLookup","aliasable","JSON","stringify","revision","appendToBuffer","location","explicit","wrap","initializeBuffer","quotedString","lookupPropertyFunctionIsUsed","asObject","isChild","environments","preamble","stackSlot","stackVars","aliases","registers","list","hashes","compileStack","inlineStack","compileChildren","currentLocation","pushSource","$b1f0070f58a24a18$var$_exception2","prepend","lookupPropertyFunctionVarDeclaration","merge","createFunctionContext","_context","objectLiteral","toStringWithSourceMap","file","destName","map","lastContext","$b1f0070f58a24a18$var$_codeGen2","varDeclarations","locals","aliasCount","alias","_this","referenceCount","mergeSource","appendOnly","forceBuffer","appendFirst","sourceSeen","bufferStart","bufferEnd","add","trim","blockValue","contextName","setupHelperArgs","blockName","popStack","functionCall","ambiguousBlockValue","flushInline","topStack","lastHelper","appendContent","pendingContent","pendingLocation","append","isInline","replaceStack","local","appendEscaped","getContext","pushContext","pushStackLiteral","lookupOnContext","resolvePath","lookupBlockParam","lookupData","assumeObjects","requireTerminal","$b1f0070f58a24a18$var$strictLookup","_this2","resolvePossibleLambda","pushStringParam","pushString","emptyHash","pushHash","values","types","contexts","popHash","pushLiteral","pushProgram","programExpression","paramSize","foundDecorator","invokeHelper","nonHelper","setupHelper","possibleFunctionCalls","functionLookupCode","itemsSeparatedBy","callParams","items","invokeKnownHelper","invokeAmbiguous","helperCall","useRegister","paramsInit","setupParams","assignToHash","pushId","child","existing","matchExistingProgram","programParams","expr","item","callback","prefix","createdStack","usedLiteral","top","incrStack","topStackName","entry","wrapped","inline","blockHelper","objectArgs","hashIds","hashTypes","hashContexts","generateArray","reservedWords","compilerWords","RESERVED_WORDS","isValidJavaScriptVariableName","$abc8921b9d3598e9$var$SourceNode","define","amd","$abc8921b9d3598e9$var$SourceMap","SourceNode","err","$abc8921b9d3598e9$var$castChunk","chunk","codeGen","$abc8921b9d3598e9$var$CodeGen","srcFile","chunks","src","code","empty","iter","generateList","entries","$72c16d7307a9ebfa$export$4d99f7c30e854ff","$72c16d7307a9ebfa$export$194e92554d04abdd","$72c16d7307a9ebfa$export$7e987e8f375d24c2","SourceMapGenerator","SourceMapConsumer","$d3ef831f06b78aca$export$4d99f7c30e854ff","ArraySet","MappingList","$d3ef831f06b78aca$var$SourceMapGenerator","aArgs","_file","$dQK2c","getArg","_sourceRoot","_skipValidation","_sources","$d3ef831f06b78aca$require$ArraySet","_names","_mappings","$d3ef831f06b78aca$require$MappingList","_sourcesContents","_version","fromSourceMap","aSourceMapConsumer","sourceRoot","generator","eachMapping","mapping","newMapping","generated","generatedLine","generatedColumn","relative","originalLine","originalColumn","addMapping","sourceFile","sourceRelative","has","sourceContentFor","setSourceContent","_validateMapping","String","aSourceFile","aSourceContent","toSetString","applySourceMap","aSourceMapPath","newSources","newNames","unsortedForEach","originalPositionFor","aGenerated","aOriginal","aSource","aName","_serializeMappings","nameIdx","sourceIdx","previousGeneratedColumn","previousGeneratedLine","previousOriginalColumn","previousOriginalLine","previousName","previousSource","mappings","toArray","compareByGeneratedPositionsInflated","$duvZU","encode","_generateSourcesContent","aSources","aSourceRoot","toJSON","version","names","sourcesContent","$9d26e5c3bd14e034$export$c564cdbbe6da493","$9d26e5c3bd14e034$export$2f872c0f2117be69","aValue","digit","encoded","vlq","$9d26e5c3bd14e034$var$toVLQSigned","$9d26e5c3bd14e034$var$VLQ_BASE","$iJ1ZV","aStr","aIndex","aOutParam","continuation","shifted","strLen","decode","charCodeAt","rest","$da1dfab4e991a06c$export$c564cdbbe6da493","$da1dfab4e991a06c$export$2f872c0f2117be69","$da1dfab4e991a06c$var$intToCharMap","TypeError","charCode","$a153d7326fb5205c$export$6e45e70adce70bb2","$a153d7326fb5205c$export$d6e833647f7f5f17","$a153d7326fb5205c$export$a3295358bff77e","$a153d7326fb5205c$export$f7e2c8231c57a8bd","$a153d7326fb5205c$export$e434c7255acda994","$a153d7326fb5205c$export$f0e7d1106eeabbe6","$a153d7326fb5205c$export$be0fa1163fa7a4c","$a153d7326fb5205c$export$1fc47c3d4c3302a1","$a153d7326fb5205c$export$273077902de92ff2","$a153d7326fb5205c$export$b7acf533941302f6","$a153d7326fb5205c$export$f9c43907549d61f1","$a153d7326fb5205c$export$b49e2de2ad542732","$a153d7326fb5205c$export$659a1aa8f1cdc036","aDefaultValue","$a153d7326fb5205c$var$urlRegexp","$a153d7326fb5205c$var$dataUrlRegexp","$a153d7326fb5205c$var$urlParse","aUrl","scheme","auth","host","port","$a153d7326fb5205c$var$urlGenerate","aParsedUrl","url","$a153d7326fb5205c$var$normalize","aPath","isAbsolute","up","$a153d7326fb5205c$var$join","aRoot","aPathUrl","aRootUrl","joined","lastIndexOf","$a153d7326fb5205c$var$supportsNullProto","$a153d7326fb5205c$var$identity","s","$a153d7326fb5205c$var$isProtoString","$a153d7326fb5205c$var$strcmp","aStr1","aStr2","mappingA","mappingB","onlyCompareOriginal","cmp","onlyCompareGenerated","sourceURL","sourceMapURL","parsed","$fee9d890a9e1b4a0$export$605bbf5ea7b60ba3","$fee9d890a9e1b4a0$var$has","$fee9d890a9e1b4a0$var$hasNativeMap","Map","$fee9d890a9e1b4a0$var$ArraySet","_array","_set","fromArray","aArray","aAllowDuplicates","set","size","getOwnPropertyNames","sStr","isDuplicate","get","at","aIdx","$1eea65f92da48f53$export$e82e0908843dd951","$1eea65f92da48f53$var$MappingList","_sorted","_last","aCallback","aThisArg","aMapping","lineA","lineB","columnA","columnB","sort","$f6d918b92cc3e1c1$export$194e92554d04abdd","quickSort","$f6d918b92cc3e1c1$var$SourceMapConsumer","aSourceMap","aSourceMapURL","sourceMap","parseSourceMapInput","sections","$f6d918b92cc3e1c1$var$IndexedSourceMapConsumer","$f6d918b92cc3e1c1$var$BasicSourceMapConsumer","normalize","$f6d918b92cc3e1c1$require$ArraySet","_absoluteSources","computeSourceURL","_sourceMapURL","$f6d918b92cc3e1c1$var$Mapping","lastOffset","_sections","offsetLine","offsetColumn","generatedOffset","consumer","__generatedMappings","configurable","_parseMappings","__originalMappings","_charIsMappingSeparator","GENERATED_ORDER","ORIGINAL_ORDER","GREATEST_LOWER_BOUND","LEAST_UPPER_BOUND","aContext","aOrder","_generatedMappings","_originalMappings","allGeneratedPositionsFor","needle","_findSourceIndex","_findMapping","compareByOriginalPositions","$bTtvB","lastColumn","relativeSource","smc","generatedMappings","destGeneratedMappings","destOriginalMappings","srcMapping","destMapping","$f6d918b92cc3e1c1$require$quickSort","segment","cachedSegments","temp","originalMappings","compareByGeneratedPositionsDeflated","aNeedle","aMappings","aLineName","aColumnName","aComparator","aBias","search","computeColumnSpans","nextMapping","lastGeneratedColumn","Infinity","hasContentsOfAllSources","some","sc","nullOnMissing","urlParse","fileUriAbsPath","generatedPositionFor","sectionIndex","section","bias","every","generatedPosition","sectionMappings","adjustedMapping","$8a8bb89a19cdf772$export$4ecd616dce182dff","$8a8bb89a19cdf772$export$b99fbecff261243","$8a8bb89a19cdf772$export$d76128d007d19019","$8a8bb89a19cdf772$var$recursiveSearch","aLow","aHigh","aHaystack","aCompare","mid","Math","floor","$52b4eda08e5a05e8$export$866270269b9544a5","$52b4eda08e5a05e8$var$swap","ary","x","y","$52b4eda08e5a05e8$var$doQuickSort","comparator","low","high","round","random","pivot","q","$0a6eda489c23d00d$export$7e987e8f375d24c2","$0a6eda489c23d00d$var$REGEX_NEWLINE","$0a6eda489c23d00d$var$isSourceNode","$0a6eda489c23d00d$var$SourceNode","aLine","aColumn","aChunks","sourceContents","fromStringWithSourceMap","aGeneratedCode","aRelativePath","remainingLines","remainingLinesIndex","shiftNextLine","getNextLine","lastGeneratedLine","lastMapping","nextLine","addMappingWithCode","aChunk","walk","aFn","aSep","newChildren","replaceRight","aPattern","aReplacement","lastChild","walkSourceContents","fromSetString","$0a6eda489c23d00d$require$SourceMapGenerator","sourceMappingActive","lastOriginalSource","lastOriginalLine","lastOriginalColumn","lastOriginalName","sourceContent","$d7009521decccf33$var$PrintVisitor","padding","$d7009521decccf33$var$_visitor2","pad","out","paramStrings","joinedPairs","t","e","document","o","m","wrapID","overlayID","width","position","distance","opacity","borderRadius","rtl","timeout","messageMaxLength","backOverlay","backOverlayColor","plainText","showOnlyTheLastOne","clickToClose","pauseOnHover","className","zindex","fontFamily","fontSize","cssAnimation","cssAnimationDuration","cssAnimationStyle","closeButton","useIcon","useFontAwesome","fontAwesomeIconStyle","fontAwesomeIconSize","success","background","textColor","childClassName","notiflixIconColor","fontAwesomeClassName","fontAwesomeIconColor","failure","warning","info","backgroundColor","backOverlayClickToClose","svgSize","titleFontSize","titleMaxLength","messageFontSize","buttonFontSize","buttonMaxLength","svgColor","titleColor","messageColor","buttonBackground","buttonColor","f","d","buttonsFontSize","buttonsMaxLength","okButtonColor","okButtonBackground","cancelButtonColor","cancelButtonBackground","g","customSvgUrl","customSvgCode","messageID","u","querySelectorLimit","k","w","h","getElementById","createElement","innerHTML","head","appendChild","v","N","textContent","innerText","W","I","R","A","M","B","D","T","F","G","Notify","init","toLocaleLowerCase","style","zIndex","left","right","bottom","margin","classList","maxHeight","display","flexWrap","flexDirection","justifyContent","alignItems","pointerEvents","height","animationDuration","color","setAttribute","insertBefore","firstChild","C","z","childElementCount","clearTimeout","S","parentNode","removeChild","querySelector","addEventListener","setTimeout","remove","querySelectorAll","E","Report","L","O","H","Confirm","ceil","focus","setSelectionRange","target","preventDefault","keyCode","dispatchEvent","Event","stopPropagation","returnValue","cancelBubble","P","U","Loading","X","innerWidth","V","getElementsByTagName","Q","Y","isPrototypeOf","NodeList","Block","tagName","getComputedStyle","getPropertyValue","offsetHeight","getAttribute","K","J","createRange","selectNode","Z","createContextualFragment","_","tt","et","show","ask","prompt","standard","hourglass","circle","arrows","dots","pulse","custom","notiflix","change","Notiflix","$5fa27e01ce71271d$export$2e2bcd8739ae039","$parcel$interopDefault","depth0","stack1","alias1","alias2","alias3","alias4","$8NPS8","async","$1315d790abc2fb09$export$9aa04ae0de98dd2","userId","film","db","getDatabase","ref","then","$eWCmQ","catch","$1315d790abc2fb09$export$c2c6d46fc428855f","$1315d790abc2fb09$export$9a877dd145d5f667","query","orderByChild","equalTo","$1315d790abc2fb09$export$af0956a7e1ef0c41","$668b2310913a4fe8$var$SDK_VERSION","$668b2310913a4fe8$var$DOMStorageWrapper","domStorage_","removeItem","prefixedName_","storedVal","getItem","prefix_","$668b2310913a4fe8$var$MemoryStorage","cache_","$ffjl9","contains","isInMemoryStorage","$668b2310913a4fe8$var$createStoragefor","domStorageName","domStorage","setItem","$668b2310913a4fe8$var$PersistentStorage","$668b2310913a4fe8$var$SessionStorage","$668b2310913a4fe8$var$sha1","utf8Bytes","stringToByteArray","sha1","Sha1","update","digest","base64","encodeByteArray","sha1Bytes","varArgs","arg","$668b2310913a4fe8$var$buildLogMessage_","$668b2310913a4fe8$var$logger","$668b2310913a4fe8$var$enableLogging$1","logger_","persistent","assert","$668b2310913a4fe8$var$logClient","logLevel","$7vF8m","LogLevel","VERBOSE","bind","$668b2310913a4fe8$var$log","$668b2310913a4fe8$var$firstLog_","$668b2310913a4fe8$var$logWrapper","$668b2310913a4fe8$var$error","$668b2310913a4fe8$var$fatal","warn","$668b2310913a4fe8$var$isInvalidJSONNumber","POSITIVE_INFINITY","NEGATIVE_INFINITY","$668b2310913a4fe8$var$MIN_NAME","$668b2310913a4fe8$var$MAX_NAME","$668b2310913a4fe8$var$nameCompare","bAsInt","aAsInt","$668b2310913a4fe8$var$requireKey","$668b2310913a4fe8$var$ObjectToUniqueKey","$668b2310913a4fe8$var$splitStringBySize","segsize","dataSegs","$668b2310913a4fe8$var$each","ln","abs","min","LN2","pow","bits","reverse","hexByteString","hexByte","$668b2310913a4fe8$var$INTEGER_REGEXP_","RegExp","$668b2310913a4fe8$var$tryParseInt","intVal","$668b2310913a4fe8$var$exceptionGuard","$668b2310913a4fe8$var$warn","$668b2310913a4fe8$var$setTimeoutNonBlocking","time","Deno","unrefTimer","appCheck","getToken","forceRefresh","Promise","resolve","reject","listener","_a","appCheckProvider","addTokenListener","notifyForInvalidToken","appName_","getImmediate","optional","auth_","firebaseOptions_","errorMessage","authProvider_","onInit","$668b2310913a4fe8$var$EmulatorTokenProvider","accessToken","removeTokenChangeListener","OWNER","$668b2310913a4fe8$var$LONG_POLLING","$668b2310913a4fe8$var$RepoInfo","internalHost","newHost","isCacheableHost","_host","toURLString","persistenceKey","protocol","secure","includeNamespaceInQueryParams","namespace","webSocketOnly","nodeAdmin","_domain","$668b2310913a4fe8$var$repoInfoConnectionURL","repoInfo","connURL","$668b2310913a4fe8$var$WEBSOCKET","counters_","amount","deepCopy","hashString","$668b2310913a4fe8$var$collections","$668b2310913a4fe8$var$StatsCollection","responseNum","closeAfterResponse","onClose","requestNum","pendingResponses","currentResponseNum","toProcess","onMessage_","curSegmentNum","onDisconnect","$668b2310913a4fe8$var$PacketReceiver","onMessage","isClosed_","connectTimeoutTimer_","log_","onClosed_","isNodeSdk","readyState","wrappedFn","called","attachEvent","scriptTagHolder","$668b2310913a4fe8$var$FirebaseIFrameScriptHolder","command","arg1","arg2","arg3","arg4","incrementIncomingBytes_","everConnected_","$668b2310913a4fe8$var$FIREBASE_LONGPOLL_START_PARAM","password","sendNewPolls","myPacketOrderer","closeAfter","handleResponse","pN","urlFn","uniqueCallbackIdentifier","urlParams","$668b2310913a4fe8$var$PROTOCOL_VERSION","connectURL","startLongPoll","addDisconnectPingFrame","forceAllow_","$668b2310913a4fe8$var$BrowserPollConnection","forceDisallow_","href","Windows","UI","shutdown_","myDisconnFrame","onDisconnect_","bytesSent","dataStr","stats_","incrementCounter","base64Encode","base64data","enqueueSegment","pw","bytesReceived","connId","applicationId","appCheckToken","authToken","transportSessionId","lastSessionId","$668b2310913a4fe8$var$statsManagerGetCollection","$668b2310913a4fe8$var$APP_CHECK_TOKEN_PARAM","static","iframe","contentWindow","domain","contentDocument","doc","alive","myIFrame","myID","myPW","newRequest_","outstandingRequests","pendingSegs","currentSerial","theURL","curDataString","theSeg","seg","ts","segnum","totalsegs","serial","delete","keepaliveTimeout","doNewRequest","addTag","doNodeLongPoll","loadCB","newScript","onload","onreadystatechange","rstate","onerror","commandCB","onMessageCB","Set","$668b2310913a4fe8$var$LUIDGenerator","createIFrame_","script","iframeContents","$668b2310913a4fe8$var$WebSocketImpl","MozWebSocket","WebSocket","$668b2310913a4fe8$var$WebSocketConnection","hostname","$668b2310913a4fe8$var$FORGE_DOMAIN_RE","headers","$4TNnu","platform","device","proxy","origin","mySock","onopen","onclose","onmessage","handleIncomingFrame","isOldAndroid","navigator","userAgent","oldAndroidMatch","oldAndroidRegex","parseFloat","appendFrame_","frames","jsonMess","jsonEval","fullMess","handleNewFrameCount_","frameCount","totalFrames","isNaN","mess","resetKeepAlive","remainingData","extractFrameCount_","sendString_","keepaliveTimer","clearInterval","setInterval","send","responsesRequiredToBeHealthy","healthyTimeout","IS_TRANSPORT_INITIALIZED","globalTransportInitialized_","initTransports_","isWebSocketsAvailable","isSkipPollConnection","previouslyFailed","transports_","transports","transport","$668b2310913a4fe8$var$TransportManager","ALL_TRANSPORTS","initialTransport","upgradeTransport","$668b2310913a4fe8$var$Connection","start_","conn","transportManager_","conn_","nextTransportId_","repoInfo_","applicationId_","appCheckToken_","authToken_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","tx_","rx_","secondaryConn_","healthyTimeoutMS","healthyTimeout_","isHealthy_","markConnectionHealthy","connectionCount","everConnected","onConnectionLost_","onSecondaryConnectionLost_","state_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","dataMsg","sendData_","msg","onSecondaryControl_","controlData","cmd","upgradeIfSecondaryHealthy_","secondaryResponsesRequired_","parsedData","layer","pendingDataMessages","proceedWithUpgrade_","tryCleanupConnection","onControl_","onDataMessage_","onPrimaryResponse_","primaryResponsesRequired_","payload","onHandshake_","onConnectionShutdown_","onReset_","sendPingOnPrimaryIfNecessary_","handshake","timestamp","onConnectionEstablished_","tryStartUpgrade_","startUpgrade_","sessionId","closeConnections_","onReady_","reason","onKill_","$668b2310913a4fe8$var$ServerActions","pathString","onComplete","refreshAuthToken","stats","eventType","listeners_","listeners","validateEventType_","eventData","getInitialEvent","allowedEvents_","find","$668b2310913a4fe8$var$EventEmitter","$668b2310913a4fe8$var$OnlineMonitor","online_","trigger","pieceNum_","pieces_","pathOrString","pieceNum","copyTo","$668b2310913a4fe8$var$newEmptyPath","$668b2310913a4fe8$var$Path","$668b2310913a4fe8$var$pathGetFront","pieces","childPathObj","childPieces","$668b2310913a4fe8$var$pathIsEmpty","$668b2310913a4fe8$var$newRelativePath","outerPath","innerPath","outer","inner","$668b2310913a4fe8$var$pathPopFront","$668b2310913a4fe8$var$pathEquals","$668b2310913a4fe8$var$pathGetLength","$668b2310913a4fe8$var$pathContains","$668b2310913a4fe8$var$ValidationPath","errorPrefix_","parts_","$668b2310913a4fe8$var$pathSlice","byteLength_","max","stringLength","$668b2310913a4fe8$var$validationPathCheckValid","validationPath","$668b2310913a4fe8$var$validationPathToErrorString","$668b2310913a4fe8$var$VisibilityMonitor","visible_","hidden","super","visibilityChange","visible","$668b2310913a4fe8$var$RECONNECT_MIN_DELAY","requestNumber_","curReqNum","connected_","realtime_","sendRequest","onResponse","requestCBHash_","initConnection_","deferred","Deferred","outstandingGet","request","_path","_queryObject","outstandingGets_","outstandingGetCount_","sendGet_","promise","listen","currentHashFn","tag","queryId","_queryIdentifier","listens","_queryParams","isDefault","loadsAllData","listenSpec","sendListen_","req","hashFn","status","$668b2310913a4fe8$var$PersistentConnection","warnOnListenWarnings_","removeListen_","warnings","safeGet","indexSpec","getIndex","indexPath","tryAuth","reduceReconnectDelayIfAdminCredential_","credential","isAdmin","maxReconnectDelay_","refreshAppCheckToken","tryAppCheck","authMethod","isValidFormat","requestData","cred","authOverride_","res","invalidAuthTokenCount_","onAuthRevoked_","invalidAppCheckTokenCount_","onAppCheckRevoked_","unlisten","sendUnlisten_","queryObj","onDisconnectPut","sendOnDisconnect_","onDisconnectRequestQueue_","onDisconnectCancel","response","putInternal","outstandingPuts_","outstandingPutCount_","setMaxNode","MAX_NODE","sendPut_","queued","reportStats","errorReason","reqNum","onDataPush_","onDataUpdate_","onListenRevoked_","onSecurityDebugPacket_","lastConnectionEstablishedTime_","Date","getTime","handleTimestamp_","firstConnection_","sendConnectStats_","restoreState_","onConnectStatus_","establishConnectionTimer_","establishConnection_","scheduleConnect_","reconnectDelay_","online","onRealtimeDisconnect_","cancelSentTransactions_","timeSinceLastConnectAttempt","lastConnectionAttemptTime_","reconnectDelay","shouldReconnect_","onDataMessage","onReady","nextConnectionId_","connection","closeFn","canceled","sendRequestFn","nodeFromJSON","forceTokenRefresh_","all","authTokenProvider_","appCheckTokenProvider_","interrupt","interruptReasons_","delta","onServerInfoUpdate_","put","normalizedPathString","statusCode","explanation","securityDebugCallback_","queries","i1","clientName","isMobileCordova","isReactNative","getInstance","currentlyOnline","nextPersistentConnectionId_","on","onVisible_","onOnline_","$668b2310913a4fe8$var$NamedNode","$668b2310913a4fe8$var$Index","compare","indexedValueChanged","oldNode","newNode","newWrapped","oldWrapped","MIN","__EMPTY_NODE","$668b2310913a4fe8$var$__EMPTY_NODE","assertionError","minPost","indexValue","$668b2310913a4fe8$var$KeyIndex","nodeStack_","resultGenerator_","isReverse_","startKey","$668b2310913a4fe8$var$LLRBNode","copy","count","inorderTraversal","reverseTraversal","min_","minKey","maxKey","insert","fixUp_","removeMin_","$668b2310913a4fe8$var$SortedMap","EMPTY_NODE","isRed_","moveRedLeft_","smallest","rotateRight_","moveRedRight_","rotateLeft_","colorFlip_","nl","RED","nr","checkMaxDepth_","blackDepth","check_","BLACK","comparator_","root_","rightParent","getIterator","resultGenerator","$668b2310913a4fe8$var$SortedMapIterator","$668b2310913a4fe8$var$NAME_ONLY_COMPARATOR","$668b2310913a4fe8$var$MAX_NODE$2","priority","$668b2310913a4fe8$var$validatePriorityNode","priorityNode","isLeafNode","getPriority","$668b2310913a4fe8$var$__childrenNodeConstructor","$668b2310913a4fe8$var$LeafNode","__childrenNodeConstructor","priorityNode_","updatePriority","newPriorityNode","value_","getImmediateChild","childName","getChild","getPredecessorChildName","childNode","updateImmediateChild","newChildNode","updateChild","front","numChildren","forEachChild","exportFormat","getValue","lazyHash_","toHash","$668b2310913a4fe8$var$priorityHashText","$668b2310913a4fe8$var$doubleToIEEE754String","compareTo","compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","withIndex","isIndexed","aPriority","bPriority","indexCmp","$668b2310913a4fe8$var$MAX_NODE$1","$668b2310913a4fe8$var$nodeFromJSON$1","bits_","current_","num","$668b2310913a4fe8$var$LOG_2","mask","childList","keyFn","mapSortFn","namedNode","middle","buildBalancedTree","buildPennant","chunkSize","childTree","attachPennant","pennant","base12","isOne","nextBitIsOne","buildFrom12Array","$668b2310913a4fe8$var$Base12Num","Default","$668b2310913a4fe8$var$fallbackObject","$668b2310913a4fe8$var$PRIORITY_INDEX","$668b2310913a4fe8$var$_defaultIndexMap","$668b2310913a4fe8$var$IndexMap","indexKey","sortedMap","indexes_","indexDefinition","indexSet_","existingChildren","$668b2310913a4fe8$var$KEY_INDEX","sawIndexedValue","Wrap","newIndex","getNext","isDefinedOn","$668b2310913a4fe8$var$buildChildSet","getCompare","indexName","newIndexSet","assign","newIndexes","indexedChildren","existingSnap","removeFromIndexes","$668b2310913a4fe8$var$ChildrenNode","$668b2310913a4fe8$var$EMPTY_NODE","$668b2310913a4fe8$var$NAME_COMPARATOR","children_","indexMap_","hasChild","newIndexMap","addToIndexes","newPriority","newImmediateChild","numKeys","allIntegerKeys","INTEGER_REGEXP_","childHash","resolveIndex_","predecessor","getPredecessorKey","getFirstChild","getFirstChildName","getLastChild","getLastChildName","wrappedNode","getIteratorFrom","startPost","peek","getReverseIteratorFrom","maxPost","endPost","$668b2310913a4fe8$var$MAX_NODE","hasIndex","addIndex","otherChildrenNode","thisIter","otherIter","thisCurrent","otherCurrent","defineProperties","$668b2310913a4fe8$var$nodeFromJSON","json","childData","childrenHavePriority","childSet","sortedChildSet","$668b2310913a4fe8$var$PathIndex","extractChild","snap","indexPath_","aChild","bChild","valueNode","MAX","makePost","$668b2310913a4fe8$var$changeValue","snapshotNode","$668b2310913a4fe8$var$changeChildAdded","$668b2310913a4fe8$var$changeChildRemoved","$668b2310913a4fe8$var$changeChildChanged","oldSnap","newChild","affectedPath","optChangeAccumulator","index_","oldChild","trackChildChange","newSnap","$668b2310913a4fe8$var$RangedFilter","getStartPost","isWithinStart","startIsInclusive_","updateFullNode","filtered","indexedFilter_","filtersNodes","getIndexedFilter","hasStart","startName","getIndexStartName","getIndexStartValue","hasEnd","endName","getIndexEndName","getIndexEndValue","$668b2310913a4fe8$var$IndexedFilter","startPost_","getStartPost_","endPost_","getEndPost_","startAfterSet_","endIsInclusive_","endBeforeSet_","$668b2310913a4fe8$var$LimitedFilter","rangedFilter_","limit_","fullLimitUpdateChild_","reverse_","getEndPost","hasNext","withinDirectionalStart","withinDirectionalEnd","iterator1","getReverseIterator","count1","next1","childKey","childSnap","changeAccumulator","oldEventCache","newChildNamedNode","windowBoundary","inRange","oldChildSnap","nextChild","getChildAfterChild","compareNext","newEventCache","withinEndPost","withinStartPost","compareRes","getLimit","isViewFromLeft","startSet_","viewFrom_","indexStartValue_","startNameSet_","indexStartName_","endSet_","indexEndValue_","endNameSet_","indexEndName_","hasLimit","limitSet_","hasAnchoredLimit","$668b2310913a4fe8$export$7ba287e361c94330","$668b2310913a4fe8$var$queryParamsStartAt","queryParams","newParams","$668b2310913a4fe8$var$queryParamsEndAt","$668b2310913a4fe8$var$queryParamsToRestQueryStringParameters","qs","orderBy","$668b2310913a4fe8$var$VALUE_INDEX","startParam","endParam","viewFrom","$668b2310913a4fe8$var$ReadonlyRestClient","listenId","getListenId_","thisListen","listens_","queryStringParameters","restRequest_","referenceConstructor","querystring","xhr","XMLHttpRequest","responseText","rootNode_","newSnapshotNode","$668b2310913a4fe8$var$newSparseSnapshotTree","$668b2310913a4fe8$var$sparseSnapshotTreeRemember","sparseSnapshotTree","clear","$668b2310913a4fe8$var$sparseSnapshotTreeForEachTree","prefixPath","func","tree","$668b2310913a4fe8$var$StatsListener","newStats","collection_","last_","stat","statsListener_","statsToReport_","haveStatsToReport","server_","reportedStats","reportStats_","collection","$668b2310913a4fe8$var$OperationType","OperationType","$668b2310913a4fe8$var$newOperationSourceServerTaggedQuery","fromUser","tagged","$668b2310913a4fe8$var$AckUserWrite","affectedTree","subtree","revert","ACK_USER_WRITE","fromServer","$668b2310913a4fe8$var$ListenComplete","LISTEN_COMPLETE","$668b2310913a4fe8$var$Overwrite","$668b2310913a4fe8$var$Merge","operationForChild","isFullyInitialized","fullyInitialized_","isFiltered","filtered_","isCompleteForPath","isCompleteForChild","node_","$668b2310913a4fe8$var$EventGenerator","query_","$668b2310913a4fe8$var$eventGeneratorGenerateEventsForType","eventGenerator","events","changes","registrations","eventCache","filteredChanges","filter","aWrapped","bWrapped","$668b2310913a4fe8$var$eventGeneratorCompareChanges","materializedChange","prevName","$668b2310913a4fe8$var$eventGeneratorMaterializeSingleChange","registration","respondsTo","createEvent","$668b2310913a4fe8$var$newViewCache","serverCache","viewCache","eventSnap","complete","$668b2310913a4fe8$var$CacheNode","$668b2310913a4fe8$var$viewCacheUpdateServerSnap","serverSnap","$668b2310913a4fe8$var$viewCacheGetCompleteEventSnap","getNode","$668b2310913a4fe8$var$viewCacheGetCompleteServerSnap","$668b2310913a4fe8$var$emptyChildrenSingleton","$668b2310913a4fe8$var$ImmutableTree","childPath","findRootMostMatchingPathAndValue","relativePath","predicate","childExistingPathAndValue","$668b2310913a4fe8$var$pathChild","findRootMostValueAndPath","toSet","setTree","newTree","fold","fold_","pathSoFar","accum","findOnPath","findOnPath_","pathToFollow","foreachOnPath_","currentRelativePath","foreach","foreach_","$668b2310913a4fe8$var$stringCompare","$668b2310913a4fe8$var$EmptyChildren","$668b2310913a4fe8$var$CompoundWrite","writeTree_","rootmost","rootMostPath","compoundWrite","newWriteTree","$668b2310913a4fe8$var$compoundWriteAddWrites","updates","$668b2310913a4fe8$var$compoundWriteAddWrite","newWrite","$668b2310913a4fe8$var$compoundWriteRemoveWrite","$668b2310913a4fe8$var$compoundWriteHasCompleteWrite","$668b2310913a4fe8$var$compoundWriteGetCompleteNode","$668b2310913a4fe8$var$compoundWriteChildCompoundWrite","shadowingNode","$668b2310913a4fe8$var$compoundWriteIsEmpty","$668b2310913a4fe8$var$compoundWriteApply","writeTree","priorityWrite","$668b2310913a4fe8$var$applySubtreeWrite","$668b2310913a4fe8$var$writeTreeChildWrites","$668b2310913a4fe8$var$newWriteTreeRef","$668b2310913a4fe8$var$writeTreeRemoveWrite","writeId","allWrites","findIndex","writeToRemove","removedWriteWasVisible","removedWriteOverlapsWithOtherWrites","currentWrite","$668b2310913a4fe8$var$writeTreeRecordContainsPath_","visibleWrites","$668b2310913a4fe8$var$writeTreeLayerTree_","$668b2310913a4fe8$var$writeTreeDefaultFilter_","lastWriteId","$668b2310913a4fe8$var$writeTreeResetTree_","writeRecord","write","writes","treeRoot","writePath","deepNode","$668b2310913a4fe8$var$writeTreeCalcCompleteEventCache","treePath","completeServerCache","writeIdsToExclude","includeHiddenWrites","subMerge","$668b2310913a4fe8$var$writeTreeRefCalcCompleteEventCache","writeTreeRef","$668b2310913a4fe8$var$writeTreeRefCalcCompleteEventChildren","completeServerChildren","completeChildren","topLevelSet","$668b2310913a4fe8$var$writeTreeCalcCompleteEventChildren","$668b2310913a4fe8$var$writeTreeRefCalcEventCacheAfterServerOverwrite","existingEventSnap","existingServerSnap","childMerge","$668b2310913a4fe8$var$writeTreeCalcEventCacheAfterServerOverwrite","$668b2310913a4fe8$var$writeTreeRefShadowingWrite","completeServerData","toIterate","nodes","existingServerCache","oldChange","changeMap","oldType","$668b2310913a4fe8$var$NO_COMPLETE_CHILD_SOURCE","getCompleteChild","$668b2310913a4fe8$var$WriteTreeCompleteChildSource","viewCache_","serverNode","optCompleteServerCache_","$668b2310913a4fe8$var$writeTreeRefCalcCompleteChild","writes_","$668b2310913a4fe8$var$writeTreeRefCalcIndexedSlice","accumulator","$668b2310913a4fe8$var$ChildChangeAccumulator","newViewCache","filterServerNode","operation","OVERWRITE","overwrite","$668b2310913a4fe8$var$viewProcessorApplyUserOverwrite","viewProcessor","oldViewCache","writesCache","completeCache","$668b2310913a4fe8$var$viewProcessorApplyServerOverwrite","MERGE","changedChildren","curViewCache","$668b2310913a4fe8$var$viewProcessorCacheHasChild","$668b2310913a4fe8$var$viewProcessorApplyUserMerge","$668b2310913a4fe8$var$viewProcessorApplyServerMerge","ackUserWrite","serverChildren","$668b2310913a4fe8$var$viewProcessorRevertUserWrite","ackPath","changedChildren1","mergePath","serverCachePath","$668b2310913a4fe8$var$viewProcessorAckUserWrite","oldServerNode","$668b2310913a4fe8$var$viewProcessorGenerateEventCacheAfterServerEvent","$668b2310913a4fe8$var$viewProcessorListenComplete","getChanges","isLeafOrEmpty","oldCompleteSnap","$668b2310913a4fe8$var$viewProcessorMaybeAddValueEvent","changePath","completeEventChildren","completeNode","oldEventNode","oldEventSnap","updatedPriority","childChangePath","eventChildUpdate","newEventChild","$668b2310913a4fe8$var$viewCacheUpdateEventSnap","changedSnap","serverFilter","newServerCache","oldServerSnap","newServerNode","$668b2310913a4fe8$var$pathGetBack","$668b2310913a4fe8$var$pathParent","$668b2310913a4fe8$var$viewProcessorApplyMerge","viewMergeTree","childMergeTree","isUnknownDeepMerge","$668b2310913a4fe8$var$View","initialViewCache","eventRegistrations_","indexFilter","processor_","$668b2310913a4fe8$var$newViewProcessor","initialServerCache","initialEventCache","eventGenerator_","$668b2310913a4fe8$var$viewGetCompleteServerCache","view","cache","$668b2310913a4fe8$var$viewIsEmpty","$668b2310913a4fe8$var$viewRemoveEventRegistration","eventRegistration","cancelError","cancelEvents","maybeEvent","createCancelEvent","remaining","hasAnyCallback","$668b2310913a4fe8$var$viewApplyOperation","$668b2310913a4fe8$var$viewProcessorApplyOperation","$668b2310913a4fe8$var$viewGenerateEventsForChanges_","eventRegistrations","moves","$668b2310913a4fe8$var$eventGeneratorGenerateEventsForChanges","$668b2310913a4fe8$var$referenceConstructor$1","$668b2310913a4fe8$var$referenceConstructor","$668b2310913a4fe8$var$SyncPoint","views","$668b2310913a4fe8$var$syncPointApplyOperation","syncPoint","optCompleteServerCache","view1","$668b2310913a4fe8$var$syncPointGetView","serverCacheComplete","eventCacheComplete","$668b2310913a4fe8$var$syncPointAddEventRegistration","initialChanges","$668b2310913a4fe8$var$viewGetInitialEvents","$668b2310913a4fe8$var$syncPointRemoveEventRegistration","hadCompleteView","$668b2310913a4fe8$var$syncPointHasCompleteView","viewQueryId","removed","_repo","$668b2310913a4fe8$var$syncPointGetQueryViews","$668b2310913a4fe8$var$syncPointGetCompleteServerCache","$668b2310913a4fe8$var$syncPointViewForQuery","$668b2310913a4fe8$var$syncPointGetCompleteView","$668b2310913a4fe8$var$syncPointViewExistsForQuery","$668b2310913a4fe8$var$syncTreeNextQueryTag_","$668b2310913a4fe8$var$SyncTree","listenProvider_","syncPointTree_","pendingWriteTree_","tagToQueryMap","queryToTagMap","$668b2310913a4fe8$var$syncTreeApplyUserOverwrite","syncTree","newData","$668b2310913a4fe8$var$writeTreeAddOverwrite","$668b2310913a4fe8$var$syncTreeApplyOperationToSyncPoints_","$668b2310913a4fe8$var$syncTreeAckUserWrite","record","$668b2310913a4fe8$var$writeTreeGetWrite","$668b2310913a4fe8$var$syncTreeApplyServerOverwrite","$668b2310913a4fe8$var$syncTreeRemoveEventRegistration","skipListenerDedup","maybeSyncPoint","removedAndEvents","removingDefault","covered","parentSyncPoint","newViews","$668b2310913a4fe8$var$syncTreeCollectDistinctViewsForSubTree_","newQuery","$668b2310913a4fe8$var$syncTreeCreateListenerForView_","startListening","$668b2310913a4fe8$var$syncTreeQueryForListening_","$668b2310913a4fe8$var$syncTreeTagForQuery","defaultTag","stopListening","queryToRemove","tagToRemove","$668b2310913a4fe8$var$syncTreeMakeQueryKey_","$668b2310913a4fe8$var$syncTreeRemoveTags_","$668b2310913a4fe8$var$syncTreeApplyTaggedQueryOverwrite","queryKey","$668b2310913a4fe8$var$syncTreeQueryKeyForTag_","$668b2310913a4fe8$var$syncTreeParseQueryKey_","queryPath","$668b2310913a4fe8$var$syncTreeApplyTaggedOperation_","$668b2310913a4fe8$var$syncTreeAddEventRegistration","skipSetupListener","foundAncestorDefaultView","foreachOnPath","pathToSyncPoint","sp","foreachChild","childSyncPoint","viewAlreadyExists","enableLoggingImpl","SDK_VERSION","$668b2310913a4fe8$var$syncTreeSetupListener_","$668b2310913a4fe8$var$syncTreeCalcCompleteEventCache","$668b2310913a4fe8$var$syncTreeGetServerValue","serverCacheNode","$668b2310913a4fe8$var$viewGetCompleteNode","$668b2310913a4fe8$var$syncTreeApplyOperationHelper_","syncPointTree","$668b2310913a4fe8$var$syncTreeApplyOperationDescendantsHelper_","childOperation","childServerCache","childWritesCache","$668b2310913a4fe8$var$writeTreeRefChild","toUpperCase","creatorFunction","changeTree","fromObject","encodeURIComponent","$1bab9c519cfa82bc$var$pagination","totalItems","itemsPerPage","visiblePages","page","centerAlign","firstItemClassName","lastItemClassName","currentPage","moveButton","disabledMoveButton","moreButton","factory","modules","installedModules","__webpack_require__","moduleId","module1","getter","toStringTag","mode","__esModule","ns","property","objects","prop","hasOwnProp","forEachArray","forEachOwnProperties","iteratee","inherit","searchElement","startIndex","sendHostname","util","capitalizeFirstLetter","isContained","createElementByTemplate","tmpl","html","sendHostName","CustomEvents","defineClass","isUndefined","View","defaultOption","usageStatistics","Pagination","_options","_currentPage","_view","_onClickHandler","_paginate","_setCurrentPage","_getLastPage","lastPage","_getPageIndex","pageNumber","pageIndex","_getRelativePage","moveType","isPrevMove","getCurrentPage","_getMorePageIndex","currentPageIndex","pageCount","_convertToValidPage","lastPageNumber","viewData","_makeViewData","lastPageListIndex","edges","_getEdge","leftPageNumber","rightPageNumber","prevMore","nextMore","buttonType","movePageTo","reset","targetPage","invoke","fire","setTotalItems","itemCount","setItemsPerPage","mixin","isExisty","isString","isObject","R_EVENTNAME_SPLIT","_getHandlerItem","handler","_safeEvent","eventName","byName","_safeContext","_indexOfContext","ctx","_memorizeContext","_forgetContext","contextIndex","_bindEvent","once","onceHandler","off","_spliceMatches","arr","_matchHandler","needRemove","_matchContext","_matchHandlerAndContext","matchHandler","matchContext","_offByEventName","andByHandler","handlerItems","_offByHandler","_offByObject","matchFunc","hasListener","getListenerLength","isNull","createObject","subType","superType","getTarget","addClass","isHTMLNode","defaultTemplate","moveButtons","moreButtons","_containerElement","_firstItemClassName","_lastItemClassName","_template","_buttons","_enabledPageElements","_setRootElement","_setMoveButtons","_setDisabledMoveButtons","_setMoreButtons","_attachClickEvent","jquery","_getContainerElement","_appendFirstButton","button","disabledFirst","_appendPrevButton","disabledPrev","_appendNextButton","disabledNext","_appendLastButton","disabledLast","_appendPrevMoreButton","_appendNextMoreButton","_appendPages","pageItem","firstPage","rootElement","ev","_getButtonType","_getPageNumber","targetElement","buttons","_findPageElement","pickedItem","_empty","buttonElement","cloneNode","srcElement","safeEvent","bindEvent","element","eventHandler","event","wrappedHandler","existInEvents","memorizeHandler","EVENT_KEY","handlers","inArray","getClass","setClassName","cssClass","newClass","cls","baseVal","HTMLElement","nodeType","EXPRESSION_REGEXP","BRACKET_NOTATION_REGEXP","BRACKET_REGEXP","DOT_NOTATION_REGEXP","DOT_REGEXP","STRING_NOTATION_REGEXP","STRING_REGEXP","NUMBER_REGEXP","BLOCK_HELPERS","exps","sourcesInsideBlock","analyzed","ifExps","sourcesInsideIf","otherIfCount","extractElseif","compiledSource","exp","handleExpression","additionalKey","additionalContext","asIndex","splitByRegExp","regexp","prevIndex","global","getValueFromContext","splitedExps","handleBlockHelper","helperKeyword","sourcesToEnd","endBlockIndex","executeBlockHelper","helperCount","startBlockIndex","expression","argExps","executeFunction","firstExp","imagePing","appName","trackingId","applicationKeyForStorage","date","localStorage","tui","isExpired","tid","cid","dp","dh","el","ec","trackingInfo","trackingElement","queryString"],"version":3,"file":"my-library.a3e24bf7.js.map"}